use self_serve;

INSERT INTO `service` VALUES
('cobp','default.user','2019-06-03 19:42:21.000000','default.user','2019-06-03 19:42:21.000000','COBP','COBP'),
('ohs','default.user','2019-06-03 19:42:21.000000','default.user','2019-06-03 19:42:21.000000','Org Hierarchy Service','Org Hierarchy Service'),
('tie','default.user','2019-06-13 12:11:09.000000','default.user','2019-06-13 12:11:09.000000','TIE Tag download','TIE Tags'),
('tieAction','default.user','2019-06-13 12:11:09.000000','default.user','2019-06-13 12:11:09.000000','TIE Action calls','TIE Action'),
('assist', 'default.user', '2019-06-13 12:11:09.000000', 'default.user', '2019-06-13 12:11:09.000000', 'Assist call', 'Assist');

INSERT INTO `service_urls` VALUES
(1,'default.user','2019-06-06 12:26:36.000000','default.user','2019-06-06 12:26:36.000000','http://localhost:6065/cobp-service','TEST','cobp'),
(2,'default.user','2019-06-13 12:13:02.000000','default.user','2019-06-13 12:13:02.000000','http://dev-predictioncon02.app.shared.int.sv2.247-inc.net','TEST','tie'),
(3,'default.user','2019-06-13 12:13:02.000000','default.user','2019-06-13 12:13:02.000000','http://dev.api.sv2.247-inc.net','TEST','ohs'),
(4,'default.user','2019-06-13 12:13:02.000000','default.user','2019-06-13 12:13:02.000000','http://dev-predictioncon01.app.shared.int.sv2.247-inc.net/adminconsole/rest/domainwhitelist/test','TEST','tieAction'),
(5,'default.user','2019-06-13 12:13:02.000000','default.user','2019-06-13 12:13:02.000000','http://qa.api.sv2.247-inc.net','TEST','assist'),
(6,'default.user','2019-06-13 12:13:02.000000','default.user','2019-06-13 12:13:02.000000','http://dev.api.sv2.247-inc.net','LIVE','ohs'),
(7,'default.user','2019-06-13 12:13:02.000000','default.user','2019-06-13 12:13:02.000000','http://dev-predictioncon01.app.shared.int.sv2.247-inc.net/adminconsole/rest/domainwhitelist/live','LIVE','tieAction'),
(8,'default.user','2019-06-13 12:13:02.000000','default.user','2019-06-13 12:13:02.000000','http://qa.api.sv2.247-inc.net','LIVE','assist');

INSERT INTO `fetch_config_template` VALUES
(1,'default.user','2019-06-13 12:24:46.000000','default.user','2019-06-13 12:24:46.000000','tags_p0','{}','{\"contexts\": [\"clientId\", \"accountId\"], \"constants\": {\"env\": \"DEV\"}}','/adminconsole/rest/tagsfile?client=${clientId}&account=${accountId}&environment=${env}','[{\"name\": \"tie.stageTag\", \"uiRespPath\": \"websiteTag.stageTag\", \"apiRespPath\": \"jsContent\"}]','JSON','PAGE_DATA_VALUE','tie'),
(2,'default.user','2019-06-13 12:24:46.000000','default.user','2019-06-13 12:24:46.000000','tags_p0','{}','{\"contexts\": [\"clientId\", \"accountId\"], \"constants\": {\"env\": \"PRODUCTION\"}}','/adminconsole/rest/tagsfile?client=${clientId}&account=${accountId}&environment=${env}','[{\"name\": \"tie.prodTag\", \"uiRespPath\": \"websiteTag.productionTag\", \"apiRespPath\": \"jsContent\"}]','JSON','PAGE_DATA_VALUE','tie'),
(3,'default.user','2019-06-13 12:24:46.000000','default.user','2019-06-13 12:24:46.000000','listQueue','{\"apikey\": \"KtbDtdYYb7EUD4oajYCM8l9Nh7L0AgEc\"}','{\"contexts\": [\"accountId\"], \"constants\": {}}','/v1/ohs/adminEntity/listByAccount?entityType=queue&accountId=${accountId}-account-default','{\"objectTranslator\": \"function translate(values){var queues={enum:[], enumNames:[]}; var list=[]; try{values=JSON.parse(values); list=JSON.parse(values.data.list);}catch(e){return e.toString();} list.forEach(function(item){ queues.enum.push(item.entityBaseData.entityId); queues.enumNames.push(item.entityBaseData.entityDisplayName); });return JSON.stringify(queues);}\"}','JS','FIELD_OPTIONS','ohs'),
(4,'default.user','2019-06-13 12:24:46.000000','default.user','2019-06-13 12:24:46.000000','listTimezone','{}','{\"contexts\": [], \"constants\": {}}','/timezones','{\"objectTranslator\": \"function translate(values) {  try { values = JSON.parse(values); } catch (e) { return e.toString(); } var timezones = {enum: values, enumNames: values}; return JSON.stringify(timezones); }\"}','JS','FIELD_OPTIONS','cobp'),
(5,'default.user','2019-06-13 12:24:46.000000','default.user','2019-06-13 12:24:46.000000','chathours_p0','{\"apikey\": \"KtbDtdYYb7EUD4oajYCM8l9Nh7L0AgEc\"}','{\"contexts\": [\"clientId\"], \"constants\": {}}','/v1/ohs/client/nemo-client-${clientId}','[{\"name\": \"timezone\", \"uiRespPath\": \"timezone\", \"apiRespPath\": \"timezone\"}]','JSON','PAGE_DATA_VALUE','ohs');

INSERT INTO `entity_template` VALUES
(1,'default.user','2019-08-08 14:17:12.404294','default.user','2019-08-08 14:17:12.404294','account'),
(2,'default.user','2019-08-08 14:17:12.404294','default.user','2019-08-08 14:17:12.404294','queue');

INSERT INTO `workflow_template` VALUES
('adf','default.user','2019-08-08 14:17:12.404294','default.user','2019-08-08 14:17:12.404294','Agent Disposition Form','adf_p0.queues','MENU','','ADF','NON_SINGLETON',2),
('chathours','default.user','2019-08-07 16:23:27.677031','default.user','2019-08-07 16:23:27.677031','Chat Hours and Calendar','chathours_p0.queues','MENU','','Chat Hours & Calendar','NON_SINGLETON',2),
('tags','default.user','2019-08-07 13:50:29.862585','default.user','2019-08-07 13:50:29.862585','Tags and Domain Whitelist',NULL,'MENU','','Tags and Domain Whitelist','NON_SINGLETON',1);

INSERT INTO `page_template` VALUES
('adf_p0','default.user','2019-08-08 14:24:11.084964','default.user','2019-08-23 11:32:38.455568','{\"fetch\": {\"list\": {\"listQueue\": \"queues\"}, \"page\": \"adf_p0\"}, \"schema\": {\"type\": \"object\", \"title\": \"Agent Disposition Form\", \"properties\": {\"queues\": {\"type\": \"array\", \"items\": {\"enum\": [], \"type\": \"string\", \"title\": \"Select\", \"enumNames\": []}, \"title\": \"Select Queues\", \"default\": []}, \"adf\": {\"type\": \"object\", \"title\": \"ADF\", \"default\": {\"widgets\": []}}}, \"description\": \"Disposition form is mandatory and must contain at least one question to gauge agent chat experience\"}, \"uiSchema\": {\"adf\": {\"ui:field\": \"formeditor\"}, \"queues\": {\"ui:field\": \"multiselect\"}}}','Agent Disposition Form','Agent Disposition Form'),
('chathours_p0','default.user','2019-08-07 16:33:51.424131','default.user','2019-08-30 12:03:50.334601','{\"fetch\": {\"list\": {\"listQueue\": \"queues\", \"listTimezone\": \"timezone\"}, \"page\": \"chathours_p0\"}, \"schema\": {\"type\": \"object\", \"title\": \"Operational Hours\", \"properties\": {\"queues\": {\"type\": \"array\", \"items\": {\"enum\": [], \"type\": \"string\", \"title\": \"Select\", \"enumNames\": []}, \"title\": \"Select Queues\", \"default\": []}, \"timezone\": {\"enum\": [], \"type\": \"string\", \"title\": \"Time Zone\", \"enumNames\": []}, \"supportweekdays\": {\"type\": \"array\", \"title\": \"Support Hours\", \"default\": [{\"slots\": [], \"openAllDay\": false}, {\"slots\": [{\"end\": \"18:00\", \"start\": \"09:00\"}], \"openAllDay\": false}, {\"slots\": [{\"end\": \"18:00\", \"start\": \"09:00\"}], \"openAllDay\": false}, {\"slots\": [{\"end\": \"18:00\", \"start\": \"09:00\"}], \"openAllDay\": false}, {\"slots\": [{\"end\": \"18:00\", \"start\": \"09:00\"}], \"openAllDay\": false}, {\"slots\": [{\"end\": \"18:00\", \"start\": \"09:00\"}], \"openAllDay\": false}, {\"slots\": [], \"openAllDay\": false}]}, \"supportexceptionsSection\": {\"type\": \"object\", \"title\": \"\", \"properties\": {\"supportexceptions\": {\"type\": \"array\", \"default\": []}}, \"description\": \"Mark the days when chat hours would be overridden either due to holiday or exceptional working hours\"}}, \"description\": \"Set the duration for which the below operational hours will be valid\"}, \"uiSchema\": {\"queues\": {\"ui:field\": \"multiselect\"}, \"timezone\": {\"ui:field\": \"select\"}, \"supportweekdays\": {\"ui:field\": \"supportweekdays\"}, \"supportexceptionsSection\": {\"supportexceptions\": {\"ui:field\": \"supportexceptions\"}}}}','Operational Hours','Operational Hours'),
('tags_p0','default.user','2019-08-07 14:06:42.713766','default.user','2019-08-30 12:18:14.981196','{\"fetch\": {\"page\": \"tags_p0\"}, \"schema\": {\"type\": \"object\", \"title\": \"Website Tag\", \"properties\": {\"websiteTag\": {\"type\": \"object\", \"title\": \"Website Tag\", \"properties\": {\"step1\": {\"type\": \"string\", \"title\": \"Step 1\", \"default\": \"Download or copy code\"}, \"step2\": {\"type\": \"string\", \"title\": \"Step 2\", \"default\": \"Paste tag in <head> element. Test tag for your test environment, and live tag for your live environment\"}, \"step3\": {\"type\": \"string\", \"title\": \"Step 3\", \"default\": \"Repeat for all pages where chat needs to be offered\"}, \"stageTag\": {\"type\": \"string\", \"title\": \"Test Tag\"}, \"productionTag\": {\"type\": \"string\", \"title\": \"Live Tag\"}}, \"description\": \"Add tag to track visitors and offer chat\"}, \"domainWhitelisting\": {\"type\": \"object\", \"title\": \"Domain Whitelisting\", \"properties\": {\"stageWhitelist\": {\"type\": \"array\", \"items\": {\"type\": \"string\", \"anyOf\": [{\"enum\": [], \"type\": \"string\", \"enumNames\": []}, {\"type\": \"string\"}], \"title\": \"Add Stage Whitelists\"}, \"title\": \"Stage Domain Whitelisting\", \"default\": []}, \"productionWhitelist\": {\"type\": \"array\", \"items\": {\"type\": \"string\", \"anyOf\": [{\"enum\": [], \"type\": \"string\", \"enumNames\": []}, {\"type\": \"string\"}], \"title\": \"Add Production Whitelists\"}, \"title\": \"Production Domain Whitelisting\", \"default\": []}}, \"description\": \"Control domains where chats can be offered\"}}, \"description\": \"Download/Copy tag contents. Ensure you enter the whitelisting details\"}, \"uiSchema\": {\"websiteTag\": {\"step1\": {\"ui:field\": \"plaintext\", \"ui:options\": {\"fieldSize\": [5,5], \"displayType\": \"vertical\"}}, \"step2\": {\"ui:field\": \"plaintext\", \"ui:options\": {\"fieldSize\": [5,5], \"displayType\": \"vertical\"}}, \"step3\": {\"ui:field\": \"plaintext\", \"ui:options\": {\"fieldSize\": [5,5], \"displayType\": \"vertical\"}}, \"stageTag\": {\"ui:field\": \"tag\", \"ui:options\": {\"size\": 5, \"actionType\": [\"download\", \"copy\"], \"displayType\": \"horizontal\", \"placeholder\": \"\"}}, \"productionTag\": {\"ui:field\": \"tag\", \"ui:options\": {\"size\": 5, \"actionType\": [\"download\", \"copy\"], \"displayType\": \"horizontal\", \"placeholder\": \"\"}}}, \"domainWhitelisting\": {\"stageWhitelist\": {\"ui:field\": \"multiselect\", \"ui:options\": {\"fieldSize\": [5,5], \"inputType\": \"text\"}}, \"productionWhitelist\": {\"ui:field\": \"multiselect\", \"ui:options\": {\"fieldSize\": [5,5], \"inputType\": \"text\"}}}}}','Tags and Domain Whitelist','Tags and Domain Whitelist');

INSERT INTO `workflow_page` VALUES
(1,'default.user','2019-08-07 14:08:14.129995','default.user','2019-08-07 14:08:14.129995',1,'','tags_p0','tags'),
(2,'default.user','2019-08-07 16:35:09.859460','default.user','2019-08-07 16:35:09.859460',1,'','chathours_p0','chathours'),
(3,'default.user','2019-08-08 14:24:45.621475','default.user','2019-08-08 14:24:45.621475',1,'','adf_p0','adf');

INSERT INTO `action` VALUES
(1,'default.user','2019-08-26 13:13:15.527428','default.user','2019-08-26 16:46:57.805806','{\"type\": \"REST\", \"method\": \"POST\", \"headers\": {\"Content-Type\": \"application/json\", \"apikey\": \"KtbDtdYYb7EUD4oajYCM8l9Nh7L0AgEc\"}, \"serviceId\": \"ohs\", \"relativePath\": \"/v1/ohs/client/${clientId}/account/${accountId}/queue/${entity}/hoop", \"bodyDefinition\": {\"holidays\": \"somelist.[0]\", \"timeZone\": \"name\", \"exceptions\": \"admins.name\", \"operationalHours\": \"admins.email\"}, \"objectTranslator\": \"function translate( pageData, entityId){ var uiData= JSON.parse(pageData).chathours_p0; var ohsData = {}; ohsData.timeZone = uiData.timezone; ohsData.operationalHours =getOperationalHours(uiData.supportweekdays); var allException = getHolidaysAndExceptions(uiData.supportexceptionsSection.supportexceptions); ohsData.holidays =allException.holidays; ohsData.exceptions = allException.exceptions; return JSON.stringify(ohsData); } function getHolidaysAndExceptions(supportexceptions){ var holidays = []; var allDayOpen =[]; var exceptions = []; for(var i = 0; i < supportexceptions.length; i++){ var se = supportexceptions[i]; if(se.openAllDay){ allDayOpen.push(se.date); }else if(se.slots.length == 0){ holidays.push(se.date); }else{ var shifts= processShifts(se.slots); var j = getIndexofSimilarShift(exceptions,shifts); if(j !== -1){ exceptions[j].days.push(se.date); }else{ var opHours ={}; opHours.days=[se.date]; opHours.shifts = shifts; exceptions.push(opHours); } } if(allDayOpen.length!==0){ var opHours ={}; opHours.days=allDayOpen; opHours.shifts =[{\\\"start\\\": \\\"0001\\\" ,\\\"end\\\":\\\"2359\\\"}]; exceptions.push(opHours); } } return {\\\"holidays\\\" : holidays,\\\"exceptions\\\":exceptions}; } function getOperationalHours(supportweekdays){ var operationalHours = []; var days = [\\\"sunday\\\",\\\"monday\\\",\\\"tuesday\\\",\\\"wednesday\\\",\\\"thursday\\\",\\\"friday\\\",\\\"saturday\\\"]; var data = []; var allDayShift=[]; var weekoffs=[]; for(index = 0; index < supportweekdays.length; index++){ var day= supportweekdays[index]; var shifts=[]; var weekDay = days[index]; if(day.openAllDay){ allDayShift.push(weekDay); }else if(day.slots.length == 0){ weekoffs.push(weekDay); continue; }else{ var shifts= processShifts(day.slots); var j = getIndexofSimilarShift(operationalHours,shifts); if(j !== -1){ operationalHours[j].days.push(weekDay); }else{ var opHours ={}; opHours.days=[weekDay]; opHours.shifts = shifts; operationalHours.push(opHours); } } data.push(day.openAllDay); } if(allDayShift.length!==0){ var opHours ={}; opHours.days=allDayShift; opHours.shifts =[{\\\"start\\\": \\\"0001\\\" ,\\\"end\\\":\\\"2359\\\"}]; operationalHours.push(opHours); } return operationalHours; } function getIndexofSimilarShift(operationalHours , shifts){ var foundIndex = -1; for(var index = 0; index < operationalHours.length; index++){ var opHours= operationalHours[index]; if(shifts.length !== opHours.shifts.length) continue; var sameShiftCount=0; for(var i = 0; i < shifts.length; i++){ var shift = shifts[i]; var fS =find( opHours.shifts,function(s){ return s.start == shift.start}); if(!fS || fS.end !== shift.end ){ continue; } else ++sameShiftCount; } if(sameShiftCount === shifts.length){ foundIndex = index; } } return foundIndex; } function find(arr, cb ){ var found = arr.filter(cb); if (found.length == 0) return undefined; else return found[0]; } function processShifts(slots){ for(var i = 0; i < slots.length; i++){ var slot = slots[i]; slot.start = slot.start.split(\':\').map( function(item){return item.trim()}).join(\\\"\\\"); slot.end = slot.end.split(\':\').map(function(item){return item.trim()}).join(\\\"\\\"); } return slots; }\"}','Chathours','REST'),
(2,'default.user','2019-08-27 17:40:40.404653','default.user','2019-08-27 18:01:15.027865','{\"type\": \"REST\", \"method\": \"PUT\", \"headers\": {\"Content-Type\": \"application/json\"}, \"serviceId\": \"tieAction\", \"relativePath\": \"/${clientId}\", \"bodyDefinition\": {}, \"objectTranslator\": \"function translate( pageData, entityId,clientId , accountId, env){ var uiData= JSON.parse(pageData).tags_p0; var whiteList = env == \\\"TEST\\\" ? uiData.domainWhitelisting.stageWhitelist : uiData.domainWhitelisting.productionWhitelist; var tagData = {}; tagData.whitelistedDomains = whiteList; return JSON.stringify(tagData); }\"}','Tag whitelisting','REST'),
(3,'default.user','2019-08-26 13:13:15.527428','default.user','2019-08-26 16:46:57.805806','{\"type\": \"REST\", \"method\": \"POST\", \"headers\": { \"Content-Type\": \"application/json\", \"apikey\": \"xUopSTdZPmjOogbzH2wWkEYzDrePlRj8\" }, \"serviceId\": \"assist\", \"relativePath\": \"/v2/chat/configuration/v2/${clientId}/queue/${entity}/adf\", \"bodyDefinition\": {}, \"objectTranslator\": \"function translate(pageData) { var uiData = JSON.parse(pageData).adf_p0; var adfData = uiData.adf; adfData.i18n = uiData.i18n; return JSON.stringify(adfData); }\" }','Assist config push action','REST');

INSERT INTO `action_workflow` VALUES
(1,'default.user','2019-08-27 17:44:01.596456','default.user','2019-08-27 17:44:01.596456',1,'chathours'),
(2,'default.user','2019-08-27 17:44:15.136579','default.user','2019-08-27 17:44:15.136579',2,'tags'),
(3,'default.user','2019-08-27 17:44:15.136579','default.user','2019-08-27 17:44:15.136579',3,'adf');