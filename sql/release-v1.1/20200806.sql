/*CENTRAL-6437: Remove multi-queue selection from hoop*/
USE self_serve;
/*Queue Name field in HOOP*/
UPDATE page_template SET definition = '{\"schema\":{\"type\":\"object\",\"properties\":{\"queues\":{\"type\":\"string\",\"title\":\"Queue Name\",\"default\": \"\"},\"timezone\":{\"enum\":[],\"type\":\"string\",\"title\":\"Time Zone\",\"enumNames\":[]},\"supportweekdays\":{\"type\":\"array\",\"title\":\"Support Hours\",\"default\":[{\"slots\":[],\"openAllDay\":false},{\"slots\":[{\"end\":\"18:00\",\"start\":\"09:00\"}],\"openAllDay\":false},{\"slots\":[{\"end\":\"18:00\",\"start\":\"09:00\"}],\"openAllDay\":false},{\"slots\":[{\"end\":\"18:00\",\"start\":\"09:00\"}],\"openAllDay\":false},{\"slots\":[{\"end\":\"18:00\",\"start\":\"09:00\"}],\"openAllDay\":false},{\"slots\":[{\"end\":\"18:00\",\"start\":\"09:00\"}],\"openAllDay\":false},{\"slots\":[],\"openAllDay\":false}]},\"supportexceptionsSection\":{\"type\":\"object\",\"title\":\"\",\"properties\":{\"supportexceptions\":{\"type\":\"array\",\"default\":[]}},\"description\":\"Mark the days when chat hours would be overridden either due to holiday or exceptional working hours\"}}},\"uiSchema\":{\"queues\":{\"ui:field\":\"text\",\"ui:options\":{\"inputType\":\"text\",\"isDisabled\":true,\"fieldSize\":[6,8]}},\"timezone\":{\"ui:field\":\"select\",\"ui:options\":{\"fieldSize\":[6,8]}},\"supportweekdays\":{\"ui:field\":\"supportweekdays\",\"ui:options\":{\"fieldSize\":[6,8]}},\"supportexceptionsSection\":{\"supportexceptions\":{\"ui:field\":\"supportexceptions\",\"ui:options\":{\"fieldSize\":[6,8]}}}},\"viewUiSchema\":{\"queues\":{\"ui:field\":\"text\",\"ui:options\":{\"inputType\":\"text\",\"isDisabled\":true,\"fieldSize\":[6,8]}},\"timezone\":{\"ui:field\":\"select\",\"ui:options\":{\"isDisabled\":true,\"fieldSize\":[6,8]}},\"supportweekdays\":{\"ui:field\":\"supportweekdays\",\"ui:options\":{\"isDisabled\":true,\"fieldSize\":[6,8]}},\"supportexceptionsSection\":{\"supportexceptions\":{\"ui:field\":\"supportexceptions\",\"ui:options\":{\"isDisabled\":true,\"fieldSize\":[6,8]}}}},\"fetch\":{\"list\":{\"listTimezone\":\"timezone\"},\"page\":\"chathours_p0\"}}' WHERE (id = 'chathours_p0');
/*fetch config for filtering Messaging Queue for HOOP*/
INSERT INTO fetch_config_template (id, created_by, created_on, last_updated_by, last_updated_on, fetch_for, headers, params, relativeurl, resp_api_to_resp_ui, translator_type, type, service_id) VALUES ('26', 'default.user', '2019-06-13 12:24:46.000000', 'default.user', '2019-06-13 12:24:46.000000', 'msgQueue', '{\"apikey\": \"KtbDtdYYb7EUD4oajYCM8l9Nh7L0AgEc\"}', '{\"contexts\": [\"accountId\"], \"constants\": {}}', '/v1/ohs/adminEntity/listByAccount?entityType=queue&accountId=${accountId}-account-default', '{\"objectTranslator\": \"function translate(values){var entities=[]; var list=[]; try{values=JSON.parse(values); list=JSON.parse(values.data.list);}catch(e){return e.toString();} list.forEach(function(item){if(item.entityAttributes.queueType == \\\"Messaging\\\"){entities.push({name:item.entityBaseData.entityId, label: item.entityBaseData.entityDisplayName}); }});return JSON.stringify(entities);}\"}', 'JS', 'ENTITY_LISTING', 'ohs');
INSERT INTO entity_template (id, created_by, created_on, last_updated_by, last_updated_on, fetch_for, name) VALUES ('8', 'default.user', '2019-08-08 14:17:12.404294', 'default.user', '2019-08-08 14:17:12.404294', 'msgQueue', 'Messaging Queues');
UPDATE activity_template SET entity_template_id = '8' WHERE (id = 'chathours');
/*pagedata value for queuename*/
INSERT INTO fetch_config_template (id, created_by, created_on, last_updated_by, last_updated_on, fetch_for, headers, params, relativeurl, resp_api_to_resp_ui, translator_type, type, service_id) VALUES ('27', 'default.user', '2019-06-13 12:24:46.000000', 'default.user', '2019-06-13 12:24:46.000000', 'chathours_p0', '{\"apikey\": \"KtbDtdYYb7EUD4oajYCM8l9Nh7L0AgEc\"}', '{\"contexts\": [\"entity\"], \"constants\": {}}', '/v1/ohs/adminEntity/get?entityType=queue&entityId=${entity}', '{\"objectTranslator\": \"function translate(apiData){var uiData = {\\\"queues\\\":\\\"\\\"}; try{var val = JSON.parse(JSON.parse(apiData).data.entity);uiData.queues = val.entityBaseData.entityDisplayName;}catch(e){} return JSON.stringify(uiData);}\"}', 'JS', 'PAGE_DATA_VALUE', 'ohs');
