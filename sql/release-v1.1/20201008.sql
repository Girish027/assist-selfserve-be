use self_serve;

 -- update tag
UPDATE `action` SET `definition` = '{\"type\": \"REST\", \"method\": \"POST\", \"headers\": {\"apikey\": \"KtbDtdYYb7EUD4oajYCM8l9Nh7L0AgEc\", \"Content-Type\": \"application/x-www-form-urlencoded\"}, \"serviceId\": \"ohs\", \"relativePath\": \"/v1/ohs/adminEntity/update?entity=${body}\", \"bodyDefinition\": {}, \"requestBodyKey\": null, \"restClientType\": null, \"objectTranslator\": \"function translate(pageData, entityId, clientId, accountId, env, prefetch) { var uiData = JSON.parse(pageData).updateTags_p0; var apiData = [ { \\\"entityBaseData\\\": { \\\"accountId\\\": accountId + \\\"-account-default\\\", \\\"clientId\\\": \\\"nemo-client-\\\" + clientId, \\\"entityType\\\": \\\"tag\\\", \\\"entityId\\\": entityId, \\\"entityDisplayName\\\": uiData.tagName }, \\\"entityAttributes\\\": { \\\"tagName\\\": uiData.tagName, \\\"tagType\\\": uiData.tagType } } ]; if (env==\\\"LIVE\\\") { var pfd = JSON.parse(prefetch); var liveTags = pfd.liveTags; for(var i=0;i<liveTags.length; i++){ if(liveTags[i].label==uiData.tagName) {apiData[0].entityBaseData.entityId=liveTags[i].name; break;}}  } return JSON.stringify(apiData); }\", \"preFetchDefinition\": {\"liveTags\": {\"fetchFor\": \"listTag\", \"fetchType\": \"ENTITY_LISTING\", \"env\": \"LIVE\"}}}'
WHERE (`id` = '2');

 -- create team
UPDATE `action` SET `definition` = '{\"type\": \"REST\", \"method\": \"POST\", \"headers\": {\"apikey\": \"KtbDtdYYb7EUD4oajYCM8l9Nh7L0AgEc\", \"Content-Type\": \"application/x-www-form-urlencoded\"}, \"serviceId\": \"ohs\", \"relativePath\": \"/v1/ohs/adminEntity/create?entity=${body}\", \"bodyDefinition\": {}, \"objectTranslator\": \"function translate(pageData, entityId, clientId, accountId, env, prefetch) { var uiData = JSON.parse(pageData).createTeams_p0; var apiData = [{ \\\"entityBaseData\\\": { \\\"accountId\\\": accountId + \\\"-account-default\\\", \\\"clientId\\\": \\\"nemo-client-\\\" + clientId, \\\"entityType\\\": \\\"team\\\" }, \\\"entityAttributes\\\": { \\\"teamName\\\": uiData.teamName, \\\"accountId\\\": accountId + \\\"-account-default\\\" } }]; if (uiData.teamTags.join(\\\",\\\") !== \\\"\\\") { uiData.teamTags = updateTest2LiveTags(uiData.teamTags, env, prefetch); apiData[0].entityAttributes.tags = uiData.teamTags.join(\\\",\\\"); } return JSON.stringify(apiData); } function updateTest2LiveTags(tags, env, prefetch) {if (env == \\\"LIVE\\\") { var pfd = JSON.parse(prefetch); var liveTags = pfd.liveTags; var testTags = pfd.testTags; for (var l = 0; l < tags.length; l++) { var liveId = tags[l]; for (var i = 0; i < testTags.length; i++) { if ( testTags[i].name == tags[l]) { for (var j = 0; j < liveTags.length; j++) { if (testTags[i].label == liveTags[j].label) { liveId = liveTags[j].name; break; } } break; } } tags[l] = liveId; } } return tags} \", \"preFetchDefinition\": {\"liveTags\": {\"fetchFor\": \"listTag\", \"fetchType\": \"ENTITY_LISTING\", \"env\": \"LIVE\"},\"testTags\": {\"fetchFor\": \"listTag\", \"fetchType\": \"ENTITY_LISTING\", \"env\": \"TEST\"}}}'
WHERE (`id` = '4');

-- update team
UPDATE `action` SET `definition` = '{\"type\": \"REST\", \"method\": \"POST\", \"headers\": {\"apikey\": \"KtbDtdYYb7EUD4oajYCM8l9Nh7L0AgEc\", \"Content-Type\": \"application/x-www-form-urlencoded\"}, \"serviceId\": \"ohs\", \"relativePath\": \"/v1/ohs/adminEntity/update?entity=${body}\", \"bodyDefinition\": {}, \"requestBodyKey\": null, \"restClientType\": null, \"objectTranslator\": \"function translate( pageData, entityId,clientId , accountId, env, prefetch){ var uiData= JSON.parse(pageData).updateTeams_p0; var apiData=[{\\\"entityBaseData\\\":{\\\"accountId\\\": accountId+\\\"-account-default\\\", \\\"clientId\\\": \\\"nemo-client-\\\"+clientId, \\\"entityType\\\": \\\"team\\\", \\\"entityId\\\": entityId },\\\"entityAttributes\\\": {\\\"teamName\\\": uiData.teamName, \\\"accountId\\\": accountId+\\\"-account-default\\\" }}]; if(uiData.teamTags.join(\\\",\\\")!==\\\"\\\"){ uiData.teamTags = updateTest2LiveTags(uiData.teamTags, env, prefetch); apiData[0].entityAttributes.tags=uiData.teamTags.join(\\\",\\\") }; return JSON.stringify(apiData);} function updateTest2LiveTags(tags, env, prefetch) {if (env == \\\"LIVE\\\") { var pfd = JSON.parse(prefetch); var liveTags = pfd.liveTags; var testTags = pfd.testTags; for (var l = 0; l < tags.length; l++) { var liveId = tags[l]; for (var i = 0; i < testTags.length; i++) { if ( testTags[i].name == tags[l]) { for (var j = 0; j < liveTags.length; j++) { if (testTags[i].label == liveTags[j].label) { liveId = liveTags[j].name; break; } } break; } } tags[l] = liveId; } } return tags} \", \"preFetchDefinition\": {\"liveTags\": {\"fetchFor\": \"listTag\", \"fetchType\": \"ENTITY_LISTING\", \"env\": \"LIVE\"},\"testTags\": {\"fetchFor\": \"listTag\", \"fetchType\": \"ENTITY_LISTING\", \"env\": \"TEST\"}}}'
WHERE (`id` = '5');

-- create queue
UPDATE `action` SET `definition` = '{\"type\": \"REST\", \"method\": \"POST\", \"headers\": {\"apikey\": \"KtbDtdYYb7EUD4oajYCM8l9Nh7L0AgEc\", \"Content-Type\": \"application/x-www-form-urlencoded\"}, \"serviceId\": \"ohs\", \"relativePath\": \"/v1/ohs/adminEntity/create?entity=${body}\", \"bodyDefinition\": {}, \"objectTranslator\": \"function translate(pageData, entityId, clientId, accountId, env, prefetch) { var uiData = JSON.parse(pageData).createQueues_p0.tabsField; var uiDataB = uiData[0]; var apiData = [ { \\\"entityAttributes\\\": { \\\"accountId\\\": accountId + \\\"-account-default\\\", \\\"queueName\\\": uiDataB.queueName, \\\"queueDesc\\\": uiDataB.queueDesc, \\\"queueType\\\": uiDataB.queueType }, \\\"entityBaseData\\\": { \\\"accountId\\\": accountId + \\\"-account-default\\\", \\\"clientId\\\": \\\"nemo-client-\\\" + clientId, \\\"entityDisplayName\\\": uiDataB.queueName, \\\"entityType\\\": \\\"queue\\\" } } ]; if (uiDataB.queueTags && uiDataB.queueTags.join(\\\",\\\") !== \\\"\\\") { uiDataB.queueTags = updateTest2LiveTags(uiDataB.queueTags, env, prefetch); apiData[0].entityAttributes.tags = uiDataB.queueTags.join(\\\",\\\") }; return JSON.stringify(apiData);} function updateTest2LiveTags(tags, env, prefetch) {if (env == \\\"LIVE\\\") { var pfd = JSON.parse(prefetch); var liveTags = pfd.liveTags; var testTags = pfd.testTags; for (var l = 0; l < tags.length; l++) { var liveId = tags[l]; for (var i = 0; i < testTags.length; i++) { if ( testTags[i].name == tags[l]) { for (var j = 0; j < liveTags.length; j++) { if (testTags[i].label == liveTags[j].label) { liveId = liveTags[j].name; break; } } break; } } tags[l] = liveId; } } return tags} \", \"preFetchDefinition\": {\"liveTags\": {\"fetchFor\": \"listTag\", \"fetchType\": \"ENTITY_LISTING\", \"env\": \"LIVE\"},\"testTags\": {\"fetchFor\": \"listTag\", \"fetchType\": \"ENTITY_LISTING\", \"env\": \"TEST\"}}}'
WHERE (`id` = '12');

-- update queue
UPDATE `action` SET `definition` = '{\"type\": \"REST\", \"method\": \"POST\", \"headers\": {\"apikey\": \"D4oajYCM8l9Nh7L0AgEc\", \"Content-Type\": \"application/x-www-form-urlencoded\"}, \"serviceId\": \"ohs\", \"relativePath\": \"/v1/ohs/adminEntity/update?entity=${body}\", \"bodyDefinition\": {}, \"requestBodyKey\": null, \"restClientType\": null, \"objectTranslator\": \"function translate(pageData, entityId, clientId, accountId, env, prefetch) { var uiDataB = JSON.parse(pageData).updateQueues_p0.tabsField[0]; var uiDataA = JSON.parse(pageData).updateQueues_p0.tabsField[1].assistConfig; var apiData = [ { \\\"entityAttributes\\\": { \\\"accountId\\\": accountId + \\\"-account-default\\\", \\\"queueName\\\": uiDataB.queueName, \\\"queueDesc\\\": uiDataB.queueDesc, \\\"queueType\\\": uiDataA.queueType }, \\\"entityBaseData\\\": { \\\"accountId\\\": accountId + \\\"-account-default\\\", \\\"clientId\\\": \\\"nemo-client-\\\" + clientId, \\\"entityDisplayName\\\": uiDataB.queueName, \\\"entityType\\\": \\\"queue\\\", \\\"entityId\\\": uiDataB.queueId } } ]; if (uiDataB.queueTags && uiDataB.queueTags.join(\\\",\\\") !== \\\"\\\") { uiDataB.queueTags = updateTest2LiveTags(uiDataB.queueTags, env, prefetch); apiData[0].entityAttributes.tags = uiDataB.queueTags.join(\\\",\\\") }; return JSON.stringify(apiData);} function updateTest2LiveTags(tags, env, prefetch) {if (env == \\\"LIVE\\\") { var pfd = JSON.parse(prefetch); var liveTags = pfd.liveTags; var testTags = pfd.testTags; for (var l = 0; l < tags.length; l++) { var liveId = tags[l]; for (var i = 0; i < testTags.length; i++) { if ( testTags[i].name == tags[l]) { for (var j = 0; j < liveTags.length; j++) { if (testTags[i].label == liveTags[j].label) { liveId = liveTags[j].name; break; } } break; } } tags[l] = liveId; } } return tags} \", \"preFetchDefinition\": {\"liveTags\": {\"fetchFor\": \"listTag\", \"fetchType\": \"ENTITY_LISTING\", \"env\": \"LIVE\"},\"testTags\": {\"fetchFor\": \"listTag\", \"fetchType\": \"ENTITY_LISTING\", \"env\": \"TEST\"}}}'
WHERE (`id` = '16');

UPDATE `page_template` SET `definition` = '{ \"schema\": { \"type\": \"object\", \"required\": [ \"tagName\" ], \"properties\": { \"banner\": { \"type\": \"string\" }, \"tagId\": { \"type\": \"string\", \"title\": \"Tag Id\", \"default\": \"\" }, \"tagName\": { \"type\": \"string\", \"title\": \"Tag Name\", \"maxLength\": 50, \"pattern\": \"^[0-9a-zA-Z._ -]+[0-9a-zA-Z._-]+$\" }, \"tagType\": { \"type\": \"string\", \"title\": \"Tag Type\", \"default\": \"\", \"pattern\": \"^[0-9a-zA-Z._ -]+$\" } } }, \"uiSchema\": { \"banner\": { \"ui:field\": \"infobanner\", \"ui:options\": { \"size\": 10, \"bannerTitle\": \"Tags can be used to achieve restricted access to Team Reports.\", \"bannerDescription\": \"Associate Tags to Users and Teams to achieve restricted access to Team reports. Learn more at the <a href=\'https://engage.247.ai/docportal/Content/Assist/Assist.htm\' target=\'_blank\'>[24]7 Product Documentation</a>\" } }, \"tagId\": { \"ui:field\": \"plaintext\", \"ui:options\": { \"fieldSize\": [ 6, 8 ], \"styles\": { \"container\": { \"marginBottom\": \"15px\" }, \"label\": { \"marginBottom\": \"8px\" }, \"field\": { \"fontWeight\": \"normal\", \"border\": \"1px solid rgb(220, 225, 232)\", \"borderRadius\": 2, \"height\": 40, \"margin\": 0, \"padding\": 8, \"cursor\": \"not-allowed\", \"background-color\": \"rgb(235,235,228)\", \"opacity\": 1, \"line-height\": 24 } } } }, \"tagName\": { \"ui:field\": \"text\", \"ui:options\": { \"inputType\": \"text\", \"isDisabled\": true, \"fieldSize\": [ 6, 8 ], \"tooltipTrigger\": \"hover\", \"validationError\": \"Unique Tag Name. Cannot be longer than 50 characters and . _ - special characters are allowed\", \"styles\": { \"container\": { \"marginBottom\": \"15px\" }, \"label\": { \"marginBottom\": \"8px\" }, \"field\": {} } } }, \"tagType\": { \"ui:field\": \"text\", \"ui:options\": { \"inputType\": \"text\", \"fieldSize\": [ 6, 8 ], \"styles\": { \"container\": { \"marginBottom\": \"15px\" }, \"label\": { \"marginBottom\": \"8px\" }, \"field\": {} } } } }, \"viewUiSchema\": { \"banner\": { \"ui:field\": \"infobanner\", \"ui:options\": { \"size\": 10, \"bannerTitle\": \"Tags can be used to achieve restricted access to Team Reports.\", \"bannerDescription\": \"Associate Tags to Users and Teams to achieve restricted access to Team reports. Learn more at the <a href=\'https://engage.247.ai/docportal/Content/Assist/Assist.htm\' target=\'_blank\'>[24]7 Product Documentation</a>\" } }, \"tagId\": { \"ui:field\": \"plaintext\", \"ui:options\": { \"isDisabled\": true, \"fieldSize\": [ 6, 8 ], \"styles\": { \"container\": { \"marginBottom\": \"15px\" }, \"label\": { \"marginBottom\": \"8px\" }, \"field\": { \"fontWeight\": \"normal\", \"border\": \"1px solid rgb(220, 225, 232)\", \"borderRadius\": 2, \"height\": 40, \"margin\": 0, \"padding\": 8, \"cursor\": \"not-allowed\", \"background-color\": \"rgb(235,235,228)\", \"opacity\": 1, \"line-height\": 24 } } } }, \"tagName\": { \"ui:field\": \"text\", \"ui:options\": { \"inputType\": \"text\", \"isDisabled\": true, \"fieldSize\": [ 6, 8 ], \"styles\": { \"container\": { \"marginBottom\": \"15px\" }, \"label\": { \"marginBottom\": \"8px\" }, \"field\": {} } } }, \"tagType\": { \"ui:field\": \"text\", \"ui:options\": { \"inputType\": \"text\", \"isDisabled\": true, \"fieldSize\": [ 6, 8 ], \"styles\": { \"container\": { \"marginBottom\": \"15px\" }, \"label\": { \"marginBottom\": \"8px\" }, \"field\": {} } } } }, \"fetch\": { \"page\": \"updateTags_p0\" }, \"validation\": { \"enabled\" :true, \"type\" : \"onchange\" } }'
WHERE (`id` = 'updateTags_p0');