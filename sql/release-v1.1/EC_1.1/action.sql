use self_serve;

INSERT INTO `action` VALUES (1,'default.user','2019-08-26 13:13:15.527428','testup@247.ai','2020-10-07 15:56:11.240531','{\"type\": \"REST\", \"method\": \"POST\", \"headers\": {\"apikey\": \"KtbDtdYYb7EUD4oajYCM8l9Nh7L0AgEc\", \"Content-Type\": \"application/json\"}, \"serviceId\": \"ohs\", \"relativePath\": \"/v1/ohs/client/${clientId}/account/${accountId}/queue/${entity}/hoop\", \"bodyDefinition\": {\"holidays\": \"somelist.[0]\", \"timeZone\": \"name\", \"exceptions\": \"admins.name\", \"operationalHours\": \"admins.email\"}, \"requestBodyKey\": null, \"restClientType\": null, \"objectTranslator\": \"function translate(pageData, entityId) { var uiData = JSON.parse(pageData).chathours_p0; var ohsData = {}; ohsData.timeZone = uiData.timezone; ohsData.operationalHours = getOperationalHours(uiData.weekdays.supportweekdays); var allException = getHolidaysAndExceptions(uiData.exceptions.supportexceptionsSection.supportexceptions); ohsData.holidays = allException.holidays; ohsData.exceptions = allException.exceptions; return JSON.stringify(ohsData); } function getHolidaysAndExceptions(supportexceptions) { var holidays = []; var allDayOpen = []; var exceptions = []; for (var i = 0; i < supportexceptions.length; i++) { var se = supportexceptions[i ]; if (se.openAllDay) { allDayOpen.push(se.date); } else if (se.slots.length == 0) { holidays.push(se.date); } else { var shifts = processShifts(se.slots); var j = getIndexofSimilarShift(exceptions, shifts); if (j !== -1) { exceptions[j ].days.push(se.date); } else { var opHours = {}; opHours.days = [se.date ]; opHours.shifts = shifts; exceptions.push(opHours); } } } if (allDayOpen.length !== 0) { var opHours = {}; opHours.days = allDayOpen; opHours.shifts = [ { \\\"start\\\": \\\"0001\\\", \\\"end\\\": \\\"2359\\\" } ]; exceptions.push(opHours); } return { \\\"holidays\\\": holidays, \\\"exceptions\\\": exceptions }; } function getOperationalHours(supportweekdays) { var operationalHours = []; var days = [ \\\"sunday\\\", \\\"monday\\\", \\\"tuesday\\\", \\\"wednesday\\\", \\\"thursday\\\", \\\"friday\\\", \\\"saturday\\\" ]; var data = []; var allDayShift = []; var weekoffs = []; for (index = 0; index < supportweekdays.length; index++) { var day = supportweekdays[index ]; var shifts = []; var weekDay = days[index ]; if (day.openAllDay) { allDayShift.push(weekDay); } else if (day.slots.length == 0) { weekoffs.push(weekDay); continue; } else { var shifts = processShifts(day.slots); var j = getIndexofSimilarShift(operationalHours, shifts); if (j !== -1) { operationalHours[j ].days.push(weekDay); } else { var opHours = {}; opHours.days = [weekDay ]; opHours.shifts = shifts; operationalHours.push(opHours); } } data.push(day.openAllDay); } if (allDayShift.length !== 0) { var opHours = {}; opHours.days = allDayShift; opHours.shifts = [ { \\\"start\\\": \\\"0001\\\", \\\"end\\\": \\\"2359\\\" } ]; operationalHours.push(opHours); } return operationalHours; } function getIndexofSimilarShift(operationalHours, shifts) { var foundIndex = -1; for (var index = 0; index < operationalHours.length; index++) { var opHours = operationalHours[index ]; if (shifts.length !== opHours.shifts.length) continue; var sameShiftCount = 0; for (var i = 0; i < shifts.length; i++) { var shift = shifts[i ]; var fS = find(opHours.shifts, function (s) { return s.start == shift.start }); if (!fS || fS.end !== shift.end) { continue; } else ++sameShiftCount; } if (sameShiftCount === shifts.length) { foundIndex = index; } } return foundIndex; } function find(arr, cb) { var found = arr.filter(cb); if (found.length == 0) return undefined; else return found[ 0 ]; } function processShifts(slots) { for (var i = 0; i < slots.length; i++) { var slot = slots[i ]; slot.start = slot.start.split(\':\').map(function (item) { return item.trim() }).join(\\\"\\\"); slot.end = slot.end.split(\':\').map(function (item) { return item.trim(); }).join(\\\"\\\"); if (slot.end === \\\"0000\\\") { slot.end = \\\"2359\\\" } } return slots; }\"}','UPDATE','Chathours','REST');
INSERT INTO `action` VALUES (2,'default.user','2019-08-27 17:40:40.404653','Jonathan.Paul@247-inc.com','2020-10-07 14:38:13.157304','{\"type\": \"REST\", \"method\": \"POST\", \"headers\": {\"apikey\": \"KtbDtdYYb7EUD4oajYCM8l9Nh7L0AgEc\", \"Content-Type\": \"application/x-www-form-urlencoded\"}, \"serviceId\": \"ohs\", \"relativePath\": \"/v1/ohs/adminEntity/update?entity=${body}\", \"bodyDefinition\": {}, \"requestBodyKey\": null, \"restClientType\": null, \"objectTranslator\": \"function translate(pageData, entityId, clientId, accountId, env, prefetch) { var uiData = JSON.parse(pageData).updateTags_p0; var apiData = [ { \\\"entityBaseData\\\": { \\\"accountId\\\": accountId + \\\"-account-default\\\", \\\"clientId\\\": \\\"nemo-client-\\\" + clientId, \\\"entityType\\\": \\\"tag\\\", \\\"entityId\\\": entityId, \\\"entityDisplayName\\\": uiData.tagName }, \\\"entityAttributes\\\": { \\\"tagName\\\": uiData.tagName, \\\"tagType\\\": uiData.tagType } } ]; if (env==\\\"LIVE\\\") { var pfd = JSON.parse(prefetch); var liveTags = pfd.liveTags; for(var i=0;i<liveTags.length; i++){ if(liveTags[i].label==uiData.tagName) {apiData[0].entityBaseData.entityId=liveTags[i].name; break;}}  } return JSON.stringify(apiData); }\", \"preFetchDefinition\": {\"liveTags\": {\"env\": \"LIVE\", \"fetchFor\": \"listTag\", \"fetchType\": \"ENTITY_LISTING\"}}}','UPDATE','Update Tags','REST');
INSERT INTO `action` VALUES (3,'default.user','2019-08-26 13:13:15.527428','default.user','2019-08-26 16:46:57.805806','{\"type\": \"REST\", \"method\": \"POST\", \"headers\": {\"Content-Type\": \"application/json\"}, \"serviceId\": \"assist\", \"relativePath\": \"/en/rest/hierarchy/queue/${entity}/adf\", \"bodyDefinition\": {}, \"objectTranslator\": \"function translate(pageData) { var uiData = JSON.parse(pageData).adf_p0; var adfData = uiData.adf; adfData.i18n = uiData.i18n; return JSON.stringify(adfData); }\"}','UPDATE','Assist adf push action','REST');
INSERT INTO `action` VALUES (4,'default.user','2019-09-19 17:37:31.168947','testup@247.ai','2020-10-08 16:05:36.501803','{\"type\": \"REST\", \"method\": \"POST\", \"headers\": {\"apikey\": \"KtbDtdYYb7EUD4oajYCM8l9Nh7L0AgEc\", \"Content-Type\": \"application/x-www-form-urlencoded\"}, \"serviceId\": \"ohs\", \"relativePath\": \"/v1/ohs/adminEntity/create?entity=${body}\", \"bodyDefinition\": {}, \"objectTranslator\": \"function translate(pageData, entityId, clientId, accountId, env, prefetch) { var uiData = JSON.parse(pageData).createTeams_p0; var apiData = [{ \\\"entityBaseData\\\": { \\\"accountId\\\": accountId + \\\"-account-default\\\", \\\"clientId\\\": \\\"nemo-client-\\\" + clientId, \\\"entityType\\\": \\\"team\\\" }, \\\"entityAttributes\\\": { \\\"teamName\\\": uiData.teamName, \\\"accountId\\\": accountId + \\\"-account-default\\\" } }]; if (uiData.teamTags.join(\\\",\\\") !== \\\"\\\") { uiData.teamTags = updateTest2LiveTags(uiData.teamTags, env, prefetch); apiData[0].entityAttributes.tags = uiData.teamTags.join(\\\",\\\"); } return JSON.stringify(apiData); } function updateTest2LiveTags(tags, env, prefetch) {if (env == \\\"LIVE\\\") { var pfd = JSON.parse(prefetch); var liveTags = pfd.liveTags; var testTags = pfd.testTags; for (var l = 0; l < tags.length; l++) { var liveId = tags[l]; for (var i = 0; i < testTags.length; i++) { if ( testTags[i].name == tags[l]) { for (var j = 0; j < liveTags.length; j++) { if (testTags[i].label == liveTags[j].label) { liveId = liveTags[j].name; break; } } break; } } tags[l] = liveId; } } return tags} \", \"preFetchDefinition\": {\"liveTags\": {\"env\": \"LIVE\", \"fetchFor\": \"listTag\", \"fetchType\": \"ENTITY_LISTING\"}, \"testTags\": {\"env\": \"TEST\", \"fetchFor\": \"listTag\", \"fetchType\": \"ENTITY_LISTING\"}}}','CREATE','create team action','REST');
INSERT INTO `action` VALUES (5,'default.user','2019-09-19 17:37:31.168947','Jonathan.Paul@247-inc.com','2020-10-06 15:42:48.839491','{\"type\": \"REST\", \"method\": \"POST\", \"headers\": {\"apikey\": \"KtbDtdYYb7EUD4oajYCM8l9Nh7L0AgEc\", \"Content-Type\": \"application/x-www-form-urlencoded\"}, \"serviceId\": \"ohs\", \"relativePath\": \"/v1/ohs/adminEntity/update?entity=${body}\", \"bodyDefinition\": {}, \"requestBodyKey\": null, \"restClientType\": null, \"objectTranslator\": \"function translate( pageData, entityId,clientId , accountId, env, prefetch){ var uiData= JSON.parse(pageData).updateTeams_p0; var apiData=[{\\\"entityBaseData\\\":{\\\"accountId\\\": accountId+\\\"-account-default\\\", \\\"clientId\\\": \\\"nemo-client-\\\"+clientId, \\\"entityType\\\": \\\"team\\\", \\\"entityId\\\": entityId },\\\"entityAttributes\\\": {\\\"teamName\\\": uiData.teamName, \\\"accountId\\\": accountId+\\\"-account-default\\\" }}]; if(uiData.teamTags.join(\\\",\\\")!==\\\"\\\"){ uiData.teamTags = updateTest2LiveTags(uiData.teamTags, env, prefetch); apiData[0].entityAttributes.tags=uiData.teamTags.join(\\\",\\\") }; return JSON.stringify(apiData);} function updateTest2LiveTags(tags, env, prefetch) {if (env == \\\"LIVE\\\") { var pfd = JSON.parse(prefetch); var liveTags = pfd.liveTags; var testTags = pfd.testTags; for (var l = 0; l < tags.length; l++) { var liveId = tags[l]; for (var i = 0; i < testTags.length; i++) { if ( testTags[i].name == tags[l]) { for (var j = 0; j < liveTags.length; j++) { if (testTags[i].label == liveTags[j].label) { liveId = liveTags[j].name; break; } } break; } } tags[l] = liveId; } } return tags} \", \"preFetchDefinition\": {\"liveTags\": {\"env\": \"LIVE\", \"fetchFor\": \"listTag\", \"fetchType\": \"ENTITY_LISTING\"}, \"testTags\": {\"env\": \"TEST\", \"fetchFor\": \"listTag\", \"fetchType\": \"ENTITY_LISTING\"}}}','UPDATE','Update team action','REST');
INSERT INTO `action` VALUES (6,'default.user','2019-09-19 17:37:31.168947','Jonathan.Paul@247-inc.com','2020-10-07 13:26:40.833876','{\"type\": \"REST\", \"method\": \"POST\", \"headers\": {\"apikey\": \"KtbDtdYYb7EUD4oajYCM8l9Nh7L0AgEc\", \"Content-Type\": \"application/x-www-form-urlencoded\"}, \"serviceId\": \"ohs\", \"relativePath\": \"/v1/ohs/adminEntity/create?entity=${body}\", \"bodyDefinition\": {}, \"requestBodyKey\": null, \"restClientType\": null, \"objectTranslator\": \"function translate(pageData, entityId, clientId, accountId, env) { var uiData = JSON.parse(pageData).createTags_p0; var apiData = [ { \\\"entityBaseData\\\": { \\\"accountId\\\": accountId + \\\"-account-default\\\", \\\"clientId\\\": \\\"nemo-client-\\\" + clientId, \\\"entityType\\\": \\\"tag\\\", \\\"entityDisplayName\\\": uiData.tagName }, \\\"entityAttributes\\\": { \\\"tagName\\\": uiData.tagName, \\\"tagType\\\": uiData.tagType } }]; return JSON.stringify(apiData); }\"}','CREATE','Create tags action','REST');
INSERT INTO `action` VALUES (8,'default.user','2019-08-26 13:13:15.527428','default.user','2020-10-07 10:36:25.556387','{\"type\": \"REST\", \"method\": \"POST\", \"headers\": {\"Content-Type\": \"application/x-www-form-urlencoded\"}, \"serviceId\": \"assist\", \"relativePath\": \"/en/admin/rest/ohs/update?entity=${body}\", \"bodyDefinition\": {}, \"requestBodyKey\": null, \"restClientType\": null, \"objectTranslator\": \"function translate(pageData, entityId, clientId, accountId, env) { var uiData = JSON.parse(pageData).updateSkill_p0; var apiData = [ { \\\"entityBaseData\\\": { \\\"entityDisplayName\\\": uiData.skillName, \\\"entityId\\\": uiData.skillId, \\\"accountId\\\": accountId + \\\"-account-default\\\", \\\"clientId\\\": \\\"nemo-client\\\" + clientId, \\\"entityType\\\": \\\"skill\\\" }, \\\"entityAttributes\\\": { \\\"skillName\\\": uiData.skillName, \\\"skillDesc\\\": uiData.skillDesc, \\\"account\\\": accountId + \\\"-account-default\\\", \\\"users\\\": \\\"[]\\\" } } ]; return JSON.stringify(apiData); }\"}','UPDATE','Skill updation action','REST');
INSERT INTO `action` VALUES (9,'default.user','2019-08-26 13:13:15.527428','testup@247.ai','2020-10-06 03:04:26.126161','{\"type\": \"REST\", \"method\": \"POST\", \"headers\": {\"Content-Type\": \"application/x-www-form-urlencoded\"}, \"serviceId\": \"assist\", \"relativePath\": \"/en/admin/rest/ohs/create?entity=${body}\", \"bodyDefinition\": {}, \"requestBodyKey\": null, \"restClientType\": null, \"objectTranslator\": \"function translate( pageData, entityId, clientId, accountId, env ){ var uiData= JSON.parse(pageData).createSkills_p0; var apiData = [{\\\"entityBaseData\\\":{\\\"entityDisplayName\\\": uiData.skillName, \\\"entityId\\\":\\\"\\\", \\\"accountId\\\": accountId+\\\"-account-default\\\", \\\"clientId\\\": \\\"nemo-client\\\"+clientId, \\\"entityType\\\": \\\"skill\\\" }, \\\"entityAttributes\\\": {\\\"skillName\\\": uiData.skillName, \\\"skillDesc\\\": uiData.skillDesc, \\\"account\\\": accountId+\\\"-account-default\\\", \\\"users\\\":\\\"[]\\\" }}]; return JSON.stringify(apiData); }\"}','CREATE','Skill creation action','REST');
INSERT INTO `action` VALUES (12,'default.user','2019-08-26 13:13:15.527428','bhanu.atmuri@247-inc.com','2020-10-07 03:04:30.908253','{\"type\": \"REST\", \"method\": \"POST\", \"headers\": {\"apikey\": \"KtbDtdYYb7EUD4oajYCM8l9Nh7L0AgEc\", \"Content-Type\": \"application/x-www-form-urlencoded\"}, \"serviceId\": \"ohs\", \"relativePath\": \"/v1/ohs/adminEntity/create?entity=${body}\", \"bodyDefinition\": {}, \"objectTranslator\": \"function translate(pageData, entityId, clientId, accountId, env, prefetch) { var uiData = JSON.parse(pageData).createQueues_p0.tabsField; var uiDataB = uiData[0]; var apiData = [ { \\\"entityAttributes\\\": { \\\"accountId\\\": accountId + \\\"-account-default\\\", \\\"queueName\\\": uiDataB.queueName, \\\"queueDesc\\\": uiDataB.queueDesc, \\\"queueType\\\": uiDataB.queueType }, \\\"entityBaseData\\\": { \\\"accountId\\\": accountId + \\\"-account-default\\\", \\\"clientId\\\": \\\"nemo-client-\\\" + clientId, \\\"entityDisplayName\\\": uiDataB.queueName, \\\"entityType\\\": \\\"queue\\\" } } ]; if (uiDataB.queueTags && uiDataB.queueTags.join(\\\",\\\") !== \\\"\\\") { uiDataB.queueTags = updateTest2LiveTags(uiDataB.queueTags, env, prefetch); apiData[0].entityAttributes.tags = uiDataB.queueTags.join(\\\",\\\") }; return JSON.stringify(apiData);} function updateTest2LiveTags(tags, env, prefetch) {if (env == \\\"LIVE\\\") { var pfd = JSON.parse(prefetch); var liveTags = pfd.liveTags; var testTags = pfd.testTags; for (var l = 0; l < tags.length; l++) { var liveId = tags[l]; for (var i = 0; i < testTags.length; i++) { if ( testTags[i].name == tags[l]) { for (var j = 0; j < liveTags.length; j++) { if (testTags[i].label == liveTags[j].label) { liveId = liveTags[j].name; break; } } break; } } tags[l] = liveId; } } return tags} \", \"preFetchDefinition\": {\"liveTags\": {\"env\": \"LIVE\", \"fetchFor\": \"listTag\", \"fetchType\": \"ENTITY_LISTING\"}, \"testTags\": {\"env\": \"TEST\", \"fetchFor\": \"listTag\", \"fetchType\": \"ENTITY_LISTING\"}}}','CREATE','ohs queue creation action','REST');
INSERT INTO `action` VALUES (13,'default.user','2019-08-26 13:13:15.527428','bhanu.atmuri@247-inc.com','2020-10-07 03:04:30.963745','{\"type\": \"REST\", \"method\": \"POST\", \"headers\": {\"Content-Type\": \"application/json\"}, \"serviceId\": \"assist\", \"relativePath\": \"/en/admin/rest/ohs/notify\", \"bodyDefinition\": {}, \"requestBodyKey\": null, \"restClientType\": null, \"objectTranslator\": \"function translate(pageData) { return JSON.stringify(\\\"\\\"); }\"}','CREATE','assist notify action','REST');
INSERT INTO `action` VALUES (14,'default.user','2019-08-26 13:13:15.527428','default.user','2020-10-09 15:05:55.902649','{\"type\": \"REST\", \"method\": \"POST\", \"headers\": {\"Content-Type\": \"application/x-www-form-urlencoded\"}, \"serviceId\": \"assist\", \"relativePath\": \"/en/admin/rest/ohs/update\", \"bodyDefinition\": {}, \"requestBodyKey\": \"entity\", \"restClientType\": \"REST_TEMPLATE\", \"objectTranslator\": \"function translate(pageData, entityId, clientId, accountId, env) { var uiData = JSON.parse(pageData).updateQueues_p0.tabsField; var uiDataB = uiData[0]; var uiDataA = uiData[1].assistConfig; var apiData = [ { \\\"entityBaseData\\\": { \\\"accountId\\\": accountId + \\\"-account-default\\\", \\\"entityType\\\": \\\"chatQueue\\\", \\\"entityId\\\": uiDataB.queueId, \\\"entityDisplayName\\\": uiDataB.queueName, \\\"clientId\\\": clientId }, \\\"entityAttributes\\\": { \\\"queueLength\\\": uiDataA.queueLength, \\\"queueTimeOut\\\": uiDataA.queueTimeOut, \\\"resourceFree\\\": uiDataA.routeOn, \\\"conversationalInterval\\\": uiDataA.conversationalInterval, \\\"agentAffinityPeriod\\\": uiDataA.agentAffinityPeriod, \\\"visitorInactivityPeriod\\\": uiDataA.visitorInactivity, \\\"agentResponseTime\\\": uiDataA.agentResponse, \\\"typingEnabled\\\": uiDataA.typingEnabled == \\\"true\\\", \\\"typingTimeout\\\": uiDataA.typingTimeout, \\\"isAccountQueue\\\": uiDataA.isAccountQueue == \\\"true\\\", \\\"agentFTShare\\\": uiDataA.fileTransfer.FTVisitor, \\\"visitorMailerConfigKey\\\": uiDataA.mailer.visitorConfig, \\\"agentMailerConfigKey\\\": uiDataA.mailer.agentConfig, \\\"coViewEnabled\\\": uiDataA.coBrowse.coViewEnabled == \\\"true\\\", \\\"coBrowseEnabled\\\": uiDataA.coBrowse.coBrowseEnabled == \\\"true\\\", \\\"interLOBEnabled\\\": uiDataA.interLob.acceptInterLob == \\\"true\\\", \\\"isOutboundLOBQueueTransferEnabled\\\": uiDataA.interLob.outboundLob == \\\"true\\\", \\\"agentAffinityPeriod\\\": uiDataA.agentAffinityPeriod, \\\"conversationalInterval\\\": uiDataA.conversationalInterval, \\\"dispositionFormContent\\\": uiDataA.queueType === \\\"MESSAGING\\\" ? \\\"\\\" : uiDataA.dispositionForm, \\\"crmScriptContent\\\": uiDataA.crmIntg.crmScriptContent, \\\"crmDisplayText\\\": uiDataA.crmIntg.crmLaunchBtn, \\\"crmAppId\\\": uiDataA.crmIntg.crmAppId, \\\"isStandardWrapUpRequired\\\": \\\"false\\\", \\\"avgChatDuration\\\": \\\"10\\\", \\\"waitTimeBufferFactor\\\": \\\"1.0\\\", \\\"chatDurationRefreshFactor\\\": \\\"3.0\\\" } } ]; if (uiDataA.skill && uiDataA.skill.join(\\\",\\\") !== \\\"\\\") { apiData[0].entityAttributes.skill = uiDataA.skill.join(\\\",\\\") }; return JSON.stringify(apiData); }\", \"preFetchDefinition\": null}','UPDATE','assist queue update action','REST');
INSERT INTO `action` VALUES (15,'default.user','2019-08-26 13:13:15.527428','default.user','2020-10-09 15:05:54.650353','{\"type\": \"REST\", \"method\": \"POST\", \"headers\": {\"Content-Type\": \"application/json\"}, \"serviceId\": \"assist\", \"relativePath\": \"/en/admin/rest/ohs/notify\", \"bodyDefinition\": {}, \"requestBodyKey\": null, \"restClientType\": null, \"objectTranslator\": \"function translate(pageData) { return JSON.stringify(\\\"\\\"); }\", \"preFetchDefinition\": null}','UPDATE','assist notify action','REST');
INSERT INTO `action` VALUES (16,'default.user','2019-08-26 13:13:15.527428','default.user','2020-10-09 15:05:53.634800','{\"type\": \"REST\", \"method\": \"POST\", \"headers\": {\"apikey\": \"D4oajYCM8l9Nh7L0AgEc\", \"Content-Type\": \"application/x-www-form-urlencoded\"}, \"serviceId\": \"ohs\", \"relativePath\": \"/v1/ohs/adminEntity/update?entity=${body}\", \"bodyDefinition\": {}, \"requestBodyKey\": null, \"restClientType\": null, \"objectTranslator\": \"function translate(pageData, entityId, clientId, accountId, env, prefetch) { var uiDataB = JSON.parse(pageData).updateQueues_p0.tabsField[0]; var uiDataA = JSON.parse(pageData).updateQueues_p0.tabsField[1].assistConfig; var apiData = [ { \\\"entityAttributes\\\": { \\\"accountId\\\": accountId + \\\"-account-default\\\", \\\"queueName\\\": uiDataB.queueName, \\\"queueDesc\\\": uiDataB.queueDesc, \\\"queueType\\\": uiDataA.queueType }, \\\"entityBaseData\\\": { \\\"accountId\\\": accountId + \\\"-account-default\\\", \\\"clientId\\\": \\\"nemo-client-\\\" + clientId, \\\"entityDisplayName\\\": uiDataB.queueName, \\\"entityType\\\": \\\"queue\\\", \\\"entityId\\\": uiDataB.queueId } } ]; if (uiDataB.queueTags && uiDataB.queueTags.join(\\\",\\\") !== \\\"\\\") { uiDataB.queueTags = updateTest2LiveTags(uiDataB.queueTags, env, prefetch); apiData[0].entityAttributes.tags = uiDataB.queueTags.join(\\\",\\\") }; return JSON.stringify(apiData);} function updateTest2LiveTags(tags, env, prefetch) {if (env == \\\"LIVE\\\") { var pfd = JSON.parse(prefetch); var liveTags = pfd.liveTags; var testTags = pfd.testTags; for (var l = 0; l < tags.length; l++) { var liveId = tags[l]; for (var i = 0; i < testTags.length; i++) { if ( testTags[i].name == tags[l]) { for (var j = 0; j < liveTags.length; j++) { if (testTags[i].label == liveTags[j].label) { liveId = liveTags[j].name; break; } } break; } } tags[l] = liveId; } } return tags} \", \"preFetchDefinition\": {\"liveTags\": {\"env\": \"LIVE\", \"fetchFor\": \"listTag\", \"fetchType\": \"ENTITY_LISTING\"}, \"testTags\": {\"env\": \"TEST\", \"fetchFor\": \"listTag\", \"fetchType\": \"ENTITY_LISTING\"}}}','UPDATE','ohs update queue action','REST');
INSERT INTO `action` VALUES (17,'default.user','2019-08-26 13:13:15.527428','default.user','2019-08-26 16:46:57.805806','{\"type\": \"REST\", \"method\": \"POST\", \"headers\": {\"Content-Type\": \"application/x-www-form-urlencoded\"}, \"serviceId\": \"assist\", \"relativePath\": \"/en/admin/rest/ohs/update?entity=${body}\", \"bodyDefinition\": {}, \"objectTranslator\": \"function translate(pageData, entityId, clientId, accountId, env) { try{ var uiData = JSON.parse(pageData).STALive_p0; var ConfigMapper = uiData.ConfigMapper; var users = []; users = ConfigMapper.map(function (item) { var skillUser = item ? { userId: item.id, skillLevelId: uiData.skillId + \\\"-\\\" + (item.key ? item.key.toUpperCase() : \\\"HIGH\\\") } : null; return skillUser; }); var apiData = [ { \\\"entityBaseData\\\": { \\\"entityId\\\": uiData.skillId, \\\"accountId\\\": accountId + \\\"-account-default\\\", \\\"clientId\\\": \\\"nemo-client-\\\" + clientId, \\\"entityType\\\": \\\"skill\\\" }, \\\"entityAttributes\\\": { \\\"account\\\": accountId + \\\"-account-default\\\", \\\"skillName\\\": uiData.skillName, \\\"skillDesc\\\": uiData.skillDesc, \\\"users\\\": JSON.stringify(users) } } ]; return JSON.stringify(apiData); } catch (e) {} return null; }\"}','UPDATE','Skill to agents LIVE Update ','REST');
INSERT INTO `action` VALUES (18,'default.user','2019-08-26 13:13:15.527428','default.user','2019-08-26 16:46:57.805806','{\"type\": \"REST\", \"method\": \"POST\", \"headers\": {\"Content-Type\": \"application/x-www-form-urlencoded\"}, \"serviceId\": \"assist\", \"relativePath\": \"/en/admin/rest/ohs/update?entity=${body}\", \"bodyDefinition\": {}, \"objectTranslator\": \"function translate(pageData, entityId, clientId, accountId, env) { try{ var uiData = JSON.parse(pageData).STATest_p0; var ConfigMapper = uiData.ConfigMapper; var users = []; users = ConfigMapper.map(function (item) { var skillUser = item ? { userId: item.id, skillLevelId: uiData.skillId + \\\"-\\\" + (item.key ? item.key.toUpperCase() : \\\"HIGH\\\") } : null; return skillUser; }); var apiData = [ { \\\"entityBaseData\\\": { \\\"entityId\\\": uiData.skillId, \\\"accountId\\\": accountId + \\\"-account-default\\\", \\\"clientId\\\": \\\"nemo-client-\\\" + clientId, \\\"entityType\\\": \\\"skill\\\" }, \\\"entityAttributes\\\": { \\\"account\\\": accountId + \\\"-account-default\\\", \\\"skillName\\\": uiData.skillName, \\\"skillDesc\\\": uiData.skillDesc, \\\"users\\\": JSON.stringify(users) } } ]; return JSON.stringify(apiData); } catch (e) {} return null; }\"}','UPDATE','Skill to agents TEST Update ','REST');
