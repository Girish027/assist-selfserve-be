use self_serve;

-- add new node in node_group
INSERT INTO `node_group` 
(`id`, `created_by`, `created_on`, `last_updated_by`, `last_updated_on`, `title`, `ui_schema`) VALUES 
('6', 'default.user', '2020-08-24 12:24:46.000000', 'default.user', '2020-08-24 12:24:46.000000', 'Advanced Settings', '{\"menuGroupName\": \"nav\", \"icon\":\"interactionIcon\", \"toolTip\":\"\", \"dashboard\":true, \"display_order\":1, \"isActive\":true}');

INSERT INTO `node` 
(`id`, `created_by`, `created_on`, `last_updated_by`, `last_updated_on`, `node_id`, `node_type`, `parent_id`) VALUES 
('6', 'default.user', '2020-08-24 12:24:46.000000', 'default.user', '2020-08-24 12:24:46.000000', '6', 'GROUP', '-1');

INSERT INTO `menu` 
(`id`, `created_by`, `created_on`, `last_updated_by`, `last_updated_on`, `menu_group_name`, `seq`, `node_id`) VALUES 
('6', 'default.user', '2020-08-24 12:24:46.000000', 'defaullt.user', '2020-08-24 12:24:46.000000', 'nav', '1', '6');


INSERT INTO `node` 
(`id`, `created_by`, `created_on`, `last_updated_by`, `last_updated_on`, `node_id`, `node_type`, `parent_id`) 
VALUES 
('21', 'default.user', '2019-06-13 12:24:46.000000', 'default.user', '2019-06-13 12:24:46.000000', 'leadConsole', 'WORKFLOW', '6'),
('22', 'default.user', '2019-06-13 12:24:46.000000', 'default.user', '2019-06-13 12:24:46.000000', 'passwordPolicy', 'WORKFLOW', '6');

INSERT INTO `page_template` 
(`id`, `created_by`, `created_on`, `last_updated_by`, `last_updated_on`, `definition`, `description`, `title`, `type`) 
VALUES 
('createLeadConsole_p0', 'default.user', '2019-08-07 14:06:42.713766', 'default.user', '2020-03-03 16:36:01.079726', '{ \"schema\": { \"type\": \"object\", \"properties\": { \"accountId\": { \"title\": \"\", \"type\": \"string\" }, \"currTime\": { \"title\": \"Current GMT time - \", \"type\": \"string\" }, \"propType\": { \"title\": \"Property Type\", \"type\": \"string\", \"default\": \"Reset_Time\" }, \"time\": { \"type\": \"object\", \"title\": \"\", \"properties\": { \"hours\": { \"type\": \"string\", \"title\": \"Hours\", \"enum\": [ \"01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\", \"08\", \"09\", \"10\", \"11\", \"12\" ], \"enumNames\": [ \"01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\", \"08\", \"09\", \"10\", \"11\", \"12\" ], \"default\": \"01\" }, \"minutes\": { \"type\": \"string\", \"title\": \"Minutes\", \"enum\": [ \"00\", \"01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\", \"08\", \"09\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\", \"32\", \"33\", \"34\", \"35\", \"36\", \"37\", \"38\", \"39\", \"40\", \"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \"50\", \"51\", \"52\", \"53\", \"54\", \"55\", \"56\", \"57\", \"58\", \"59\" ], \"enumNames\": [ \"00\", \"01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\", \"08\", \"09\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\", \"32\", \"33\", \"34\", \"35\", \"36\", \"37\", \"38\", \"39\", \"40\", \"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \"50\", \"51\", \"52\", \"53\", \"54\", \"55\", \"56\", \"57\", \"58\", \"59\" ], \"default\": \"00\" }, \"meridian\": { \"enum\": [ \"AM\", \"PM\" ], \"type\": \"string\", \"title\": \"Meridian\", \"enumNames\": [ \"AM\", \"PM\" ], \"default\": \"AM\" } } }, \"note\": { \"type\": \"string\", \"title\": \"\", \"default\": \"*All times in GMT.\" } } }, \"uiSchema\": { \"accountId\": { \"ui:field\": \"plaintext\", \"ui:options\": { \"fieldSize\": [ 12, 0 ], \"size\": 6, \"styles\": { \"container\": { \"display\": \"none\" }, \"label\": {}, \"field\": {} } } }, \"currTime\": { \"ui:field\": \"plaintext\", \"ui:options\": { \"type\": \"timer\", \"timeFormat\": \"hh:mm\", \"fieldSize\": [ 9, 3 ], \"size\": 6, \"styles\": { \"container\": { \"marginBottom\": \"15px\", \"marginRight\": \"10px\", \"position\": \"absolute\", \"marginLeft\": \"220px\", \"width\": \"175px\" }, \"label\": { \"fontWeight\": \"bold\", \"color\": \"#333333\" }, \"field\": {} } } }, \"propType\": { \"ui:field\": \"plaintext\", \"ui:options\": { \"fieldSize\": [ 12, 12 ], \"size\": 6, \"styles\": { \"container\": { \"marginBottom\": \"15px\" }, \"label\": { \"marginBottom\": \"8px\" }, \"field\": { \"fontWeight\": \"normal\", \"fontSize\": 15, \"border\": \"1px solid rgb(220, 225, 232)\", \"borderRadius\": 2, \"height\": 40, \"margin\": 0, \"padding\": 8, \"cursor\": \"not-allowed\", \"background-color\": \"rgb(235,235,228)\", \"opacity\": 1, \"line-height\": 24 } } } }, \"time\": { \"ui:options\": { \"size\": 10, \"disableSeparator\": true }, \"hours\": { \"ui:field\": \"select\", \"ui:options\": { \"fieldSize\": [ 12, 12 ], \"size\": 2, \"styles\": { \"container\": { \"marginBottom\": \"15px\", \"marginRight\": \"20px\" }, \"label\": { \"marginBottom\": \"8px\" }, \"field\": {} } } }, \"minutes\": { \"ui:field\": \"select\", \"ui:options\": { \"fieldSize\": [ 12, 12 ], \"size\": 2, \"styles\": { \"container\": { \"marginBottom\": \"15px\", \"marginRight\": \"20px\" }, \"label\": { \"marginBottom\": \"8px\" }, \"field\": {} } } }, \"meridian\": { \"ui:field\": \"select\", \"ui:options\": { \"fieldSize\": [ 12, 12 ], \"size\": 2, \"styles\": { \"container\": { \"marginBottom\": \"15px\", \"marginRight\": \"20px\" }, \"label\": { \"marginBottom\": \"8px\" }, \"field\": {} } } } }, \"note\": { \"ui:field\": \"plaintext\", \"ui:options\": { \"fieldSize\": [ 0, 5 ], \"styles\": { \"container\": {}, \"label\": { \"padding\": \"0px\" }, \"field\": { \"fontWeight\": \"normal\" } } } } }, \"viewUiSchema\": { \"accountId\": { \"ui:field\": \"plaintext\", \"ui:options\": { \"fieldSize\": [ 12, 0 ], \"size\": 6, \"styles\": { \"container\": { \"display\": \"none\" }, \"label\": {}, \"field\": {} } } }, \"currTime\": { \"ui:field\": \"plaintext\", \"ui:options\": { \"isDisabled\": true, \"type\": \"timer\", \"timeFormat\": \"hh:mm\", \"fieldSize\": [ 9, 3 ], \"size\": 6, \"styles\": { \"container\": { \"marginBottom\": \"15px\", \"marginRight\": \"10px\", \"position\": \"absolute\", \"marginLeft\": \"220px\", \"width\": \"175px\" }, \"label\": { \"fontWeight\": \"bold\", \"color\": \"#333333\" }, \"field\": {} } } }, \"propType\": { \"ui:field\": \"plaintext\", \"ui:options\": { \"isDisabled\": true, \"fieldSize\": [ 12, 12 ], \"size\": 6, \"styles\": { \"container\": { \"marginBottom\": \"15px\" }, \"label\": { \"marginBottom\": \"8px\" }, \"field\": { \"fontWeight\": \"normal\", \"fontSize\": 15, \"border\": \"1px solid rgb(220, 225, 232)\", \"borderRadius\": 2, \"height\": 40, \"margin\": 0, \"padding\": 8, \"cursor\": \"not-allowed\", \"background-color\": \"rgb(235,235,228)\", \"opacity\": 1, \"line-height\": 24 } } } }, \"time\": { \"ui:options\": { \"size\": 10, \"disableSeparator\": true }, \"hours\": { \"ui:field\": \"select\", \"ui:options\": { \"isDisabled\": true, \"fieldSize\": [ 12, 12 ], \"size\": 2, \"styles\": { \"container\": { \"marginBottom\": \"15px\", \"marginRight\": \"20px\" }, \"label\": { \"marginBottom\": \"8px\" }, \"field\": {} } } }, \"minutes\": { \"ui:field\": \"select\", \"ui:options\": { \"isDisabled\": true, \"fieldSize\": [ 12, 12 ], \"size\": 2, \"styles\": { \"container\": { \"marginBottom\": \"15px\", \"marginRight\": \"20px\" }, \"label\": { \"marginBottom\": \"8px\" }, \"field\": {} } } }, \"meridian\": { \"ui:field\": \"select\", \"ui:options\": { \"isDisabled\": true, \"fieldSize\": [ 12, 12 ], \"size\": 2, \"styles\": { \"container\": { \"marginBottom\": \"15px\", \"marginRight\": \"20px\" }, \"label\": { \"marginBottom\": \"8px\" }, \"field\": {} } } } }, \"note\": { \"ui:field\": \"plaintext\", \"ui:options\": { \"isDisabled\": true, \"fieldSize\": [ 0, 5 ], \"styles\": { \"container\": {}, \"label\": { \"padding\": \"0px\" }, \"field\": { \"fontWeight\": \"normal\" } } } } }, \"fetch\": { \"page\": \"createLeadConsole_p0\" }, \"validation\": { \"enabled\": true, \"type\": \"onchange\" } }', 'Lead Console creation', 'create Lead Console Reset', 'CREATE'),
('updateLeadConsole_p0', 'default.user', '2019-08-07 14:06:42.713766', 'default.user', '2020-03-03 16:36:01.079726', '{ \"schema\": { \"type\": \"object\", \"properties\": { \"accountId\": { \"title\": \"\", \"type\": \"string\" }, \"currTime\": { \"title\": \"Current GMT time - \", \"type\": \"string\" }, \"propType\": { \"title\": \"Property Type\", \"type\": \"string\", \"default\": \"Reset_Time\" }, \"time\": { \"type\": \"object\", \"title\": \"\", \"properties\": { \"hours\": { \"type\": \"string\", \"title\": \"Hours\", \"enum\": [ \"01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\", \"08\", \"09\", \"10\", \"11\", \"12\" ], \"enumNames\": [ \"01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\", \"08\", \"09\", \"10\", \"11\", \"12\" ], \"default\": \"01\" }, \"minutes\": { \"type\": \"string\", \"title\": \"Minutes\", \"enum\": [ \"00\", \"01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\", \"08\", \"09\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\", \"32\", \"33\", \"34\", \"35\", \"36\", \"37\", \"38\", \"39\", \"40\", \"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \"50\", \"51\", \"52\", \"53\", \"54\", \"55\", \"56\", \"57\", \"58\", \"59\" ], \"enumNames\": [ \"00\", \"01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\", \"08\", \"09\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\", \"32\", \"33\", \"34\", \"35\", \"36\", \"37\", \"38\", \"39\", \"40\", \"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \"50\", \"51\", \"52\", \"53\", \"54\", \"55\", \"56\", \"57\", \"58\", \"59\" ], \"default\": \"00\" }, \"meridian\": { \"enum\": [ \"AM\", \"PM\" ], \"type\": \"string\", \"title\": \"Meridian\", \"enumNames\": [ \"AM\", \"PM\" ], \"default\": \"AM\" } } }, \"note\": { \"type\": \"string\", \"title\": \"\", \"default\": \"*All times in GMT.\" } } }, \"uiSchema\": { \"accountId\": { \"ui:field\": \"plaintext\", \"ui:options\": { \"fieldSize\": [ 12, 0 ], \"size\": 6, \"styles\": { \"container\": { \"display\": \"none\" }, \"label\": {}, \"field\": {} } } }, \"currTime\": { \"ui:field\": \"plaintext\", \"ui:options\": { \"type\": \"timer\", \"timeFormat\": \"hh:mm\", \"fieldSize\": [ 9, 3 ], \"size\": 6, \"styles\": { \"container\": { \"marginBottom\": \"15px\", \"marginRight\": \"10px\", \"position\": \"absolute\", \"marginLeft\": \"220px\", \"width\": \"175px\" }, \"label\": { \"fontWeight\": \"bold\", \"color\": \"#333333\" }, \"field\": {} } } }, \"propType\": { \"ui:field\": \"plaintext\", \"ui:options\": { \"fieldSize\": [ 12, 12 ], \"size\": 6, \"styles\": { \"container\": { \"marginBottom\": \"15px\" }, \"label\": { \"marginBottom\": \"8px\" }, \"field\": { \"fontWeight\": \"normal\", \"fontSize\": 15, \"border\": \"1px solid rgb(220, 225, 232)\", \"borderRadius\": 2, \"height\": 40, \"margin\": 0, \"padding\": 8, \"cursor\": \"not-allowed\", \"background-color\": \"rgb(235,235,228)\", \"opacity\": 1, \"line-height\": 24 } } } }, \"time\": { \"ui:options\": { \"size\": 10, \"disableSeparator\": true }, \"hours\": { \"ui:field\": \"select\", \"ui:options\": { \"fieldSize\": [ 12, 12 ], \"size\": 2, \"styles\": { \"container\": { \"marginBottom\": \"15px\", \"marginRight\": \"20px\" }, \"label\": { \"marginBottom\": \"8px\" }, \"field\": {} } } }, \"minutes\": { \"ui:field\": \"select\", \"ui:options\": { \"fieldSize\": [ 12, 12 ], \"size\": 2, \"styles\": { \"container\": { \"marginBottom\": \"15px\", \"marginRight\": \"20px\" }, \"label\": { \"marginBottom\": \"8px\" }, \"field\": {} } } }, \"meridian\": { \"ui:field\": \"select\", \"ui:options\": { \"fieldSize\": [ 12, 12 ], \"size\": 2, \"styles\": { \"container\": { \"marginBottom\": \"15px\", \"marginRight\": \"20px\" }, \"label\": { \"marginBottom\": \"8px\" }, \"field\": {} } } } }, \"note\": { \"ui:field\": \"plaintext\", \"ui:options\": { \"fieldSize\": [ 0, 5 ], \"styles\": { \"container\": {}, \"label\": { \"padding\": \"0px\" }, \"field\": { \"fontWeight\": \"normal\" } } } } }, \"viewUiSchema\": { \"accountId\": { \"ui:field\": \"plaintext\", \"ui:options\": { \"fieldSize\": [ 12, 0 ], \"size\": 6, \"styles\": { \"container\": { \"display\": \"none\" }, \"label\": {}, \"field\": {} } } }, \"currTime\": { \"ui:field\": \"plaintext\", \"ui:options\": { \"isDisabled\": true, \"type\": \"timer\", \"timeFormat\": \"hh:mm\", \"fieldSize\": [ 9, 3 ], \"size\": 6, \"styles\": { \"container\": { \"marginBottom\": \"15px\", \"marginRight\": \"10px\", \"position\": \"absolute\", \"marginLeft\": \"220px\", \"width\": \"175px\" }, \"label\": { \"fontWeight\": \"bold\", \"color\": \"#333333\" }, \"field\": {} } } }, \"propType\": { \"ui:field\": \"plaintext\", \"ui:options\": { \"isDisabled\": true, \"fieldSize\": [ 12, 12 ], \"size\": 6, \"styles\": { \"container\": { \"marginBottom\": \"15px\" }, \"label\": { \"marginBottom\": \"8px\" }, \"field\": { \"fontWeight\": \"normal\", \"fontSize\": 15, \"border\": \"1px solid rgb(220, 225, 232)\", \"borderRadius\": 2, \"height\": 40, \"margin\": 0, \"padding\": 8, \"cursor\": \"not-allowed\", \"background-color\": \"rgb(235,235,228)\", \"opacity\": 1, \"line-height\": 24 } } } }, \"time\": { \"ui:options\": { \"size\": 10, \"disableSeparator\": true }, \"hours\": { \"ui:field\": \"select\", \"ui:options\": { \"isDisabled\": true, \"fieldSize\": [ 12, 12 ], \"size\": 2, \"styles\": { \"container\": { \"marginBottom\": \"15px\", \"marginRight\": \"20px\" }, \"label\": { \"marginBottom\": \"8px\" }, \"field\": {} } } }, \"minutes\": { \"ui:field\": \"select\", \"ui:options\": { \"isDisabled\": true, \"fieldSize\": [ 12, 12 ], \"size\": 2, \"styles\": { \"container\": { \"marginBottom\": \"15px\", \"marginRight\": \"20px\" }, \"label\": { \"marginBottom\": \"8px\" }, \"field\": {} } } }, \"meridian\": { \"ui:field\": \"select\", \"ui:options\": { \"isDisabled\": true, \"fieldSize\": [ 12, 12 ], \"size\": 2, \"styles\": { \"container\": { \"marginBottom\": \"15px\", \"marginRight\": \"20px\" }, \"label\": { \"marginBottom\": \"8px\" }, \"field\": {} } } } }, \"note\": { \"ui:field\": \"plaintext\", \"ui:options\": { \"isDisabled\": true, \"fieldSize\": [ 0, 5 ], \"styles\": { \"container\": {}, \"label\": { \"padding\": \"0px\" }, \"field\": { \"fontWeight\": \"normal\" } } } } }, \"fetch\": { \"page\": \"updateLeadConsole_p0\" }, \"validation\": { \"enabled\": true, \"type\": \"onchange\" } }', 'Lead Console updation', 'update Lead Console Reset', 'UPDATE'),
('passwordPolicy_p0', 'default.user', '2019-08-07 14:06:42.713766', 'default.user', '2020-12-11 13:16:24.142080', '{ \"schema\": { \"type\": \"object\", \"properties\": { \"configs\": { \"type\": \"object\", \"title\": \"\", \"properties\": { \"prevPwd\": { \"type\": \"number\", \"title\": \"Previous Password\", \"enum\": [ 5, 6, 7, 8, 9, 10 ], \"enumNames\": [ \"Last 5\", \"Last 6\", \"Last 7\", \"Last 8\", \"Last 9\", \"Last 10\" ], \"default\": 5 }, \"pwdLength\": { \"type\": \"number\", \"title\": \"Password Length\", \"enum\": [ 8, 9, 10, 11, 12, 13, 14, 15, 16 ], \"enumNames\": [ \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\" ], \"default\": 8 }, \"pwdExpiry\": { \"type\": \"number\", \"title\": \"Password Expiry\", \"enum\": [ 30, 45, 60, 75, 90 ], \"enumNames\": [ \"30\", \"45\", \"60\", \"75\", \"90\" ], \"default\": 30 }, \"pwdAttempts\": { \"type\": \"number\", \"title\": \"Password Reset Attempts\", \"enum\": [ 3, 4, 5, 6 ], \"enumNames\": [ \"3\", \"4\", \"5\", \"6\" ], \"default\": 3 } } }, \"note\": { \"type\": \"string\", \"title\": \"*Configurations Value (Editable only for RegEx, Expiry, Length and History Policies.)\", \"default\": \"\" } } }, \"uiSchema\": { \"configs\": { \"ui:options\": { \"size\": 4, \"disableSeparator\": true }, \"prevPwd\": { \"ui:field\": \"select\", \"ui:options\": { \"fieldSize\": [ 12, 12 ], \"size\": 12, \"styles\": { \"container\": { \"marginBottom\": \"15px\", \"marginRight\": \"10px\" }, \"label\": { \"marginBottom\": \"8px\" }, \"field\": {} } } }, \"pwdLength\": { \"ui:field\": \"select\", \"ui:options\": { \"fieldSize\": [ 12, 12 ], \"size\": 12, \"styles\": { \"container\": { \"marginBottom\": \"15px\", \"marginRight\": \"10px\" }, \"label\": { \"marginBottom\": \"8px\" }, \"field\": {} } } }, \"pwdExpiry\": { \"ui:field\": \"select\", \"ui:options\": { \"fieldSize\": [ 12, 12 ], \"size\": 12, \"styles\": { \"container\": { \"marginBottom\": \"15px\", \"marginRight\": \"10px\" }, \"label\": { \"marginBottom\": \"8px\" }, \"field\": {} } } }, \"pwdAttempts\": { \"ui:field\": \"select\", \"ui:options\": { \"fieldSize\": [ 12, 12 ], \"size\": 12, \"styles\": { \"container\": { \"marginBottom\": \"15px\", \"marginRight\": \"10px\" }, \"label\": { \"marginBottom\": \"8px\" }, \"field\": {} } } } }, \"note\": { \"ui:field\": \"plaintext\", \"ui:options\": { \"fieldSize\": [ 10, 10 ], \"styles\": { \"label\": { \"padding\": \"0px\", \"fontWeight\": \"normal\" } } } } }, \"viewUiSchema\": { \"configs\": { \"ui:options\": { \"size\": 4, \"disableSeparator\": true }, \"prevPwd\": { \"ui:field\": \"select\", \"ui:options\": { \"isDisabled\": true, \"fieldSize\": [ 12, 12 ], \"size\": 12, \"styles\": { \"container\": { \"marginBottom\": \"15px\", \"marginRight\": \"10px\" }, \"label\": { \"marginBottom\": \"8px\" }, \"field\": {} } } }, \"pwdExpiry\": { \"ui:field\": \"select\", \"ui:options\": { \"isDisabled\": true, \"inputType\": \"number\", \"fieldSize\": [ 12, 12 ], \"size\": 12, \"styles\": { \"container\": { \"marginBottom\": \"15px\", \"marginRight\": \"10px\" }, \"label\": { \"marginBottom\": \"8px\" }, \"field\": {} } } }, \"pwdLength\": { \"ui:field\": \"select\", \"ui:options\": { \"isDisabled\": true, \"fieldSize\": [ 12, 12 ], \"size\": 12, \"styles\": { \"container\": { \"marginBottom\": \"15px\", \"marginRight\": \"10px\" }, \"label\": { \"marginBottom\": \"8px\" }, \"field\": {} } } }, \"pwdAttempts\": { \"ui:field\": \"select\", \"ui:options\": { \"isDisabled\": true, \"fieldSize\": [ 12, 12 ], \"size\": 12, \"styles\": { \"container\": { \"marginBottom\": \"15px\", \"marginRight\": \"10px\" }, \"label\": { \"marginBottom\": \"8px\" }, \"field\": {} } } } }, \"note\": { \"ui:field\": \"plaintext\", \"ui:options\": { \"fieldSize\": [ 10, 10 ], \"styles\": { \"container\": {}, \"label\": { \"padding\": \"0px\", \"fontWeight\": \"normal\" }, \"field\": {} } } } }, \"fetch\": { \"page\": \"passwordPolicy_p0\" } }', 'Password policy', 'Password policy', 'UPDATE');

INSERT INTO `entity_template` 
(`id`, `created_by`, `created_on`, `last_updated_by`, `last_updated_on`, `fetch_for`, `name`) 
VALUES 
('9', 'default.user', '2019-08-08 14:17:12.404294', 'default.user', '2019-08-08 14:17:12.404294', 'listLeadReset', 'Console Reset');

INSERT INTO `activity_template` 
(`id`, `created_by`, `created_on`, `last_updated_by`, `last_updated_on`, `description`, `entity_location`, `model`, `promotion_approval`, `title`, `type`, `ui_schema`, `entity_template_id`, `configs`) 
VALUES 
('leadConsole', 'default.user', '2019-08-07 13:50:29.862585', 'default.user', '2019-08-07 13:50:29.862585', 'lead Console', '{ \"CREATE\": { \"entityIdLocation\": \"createLeadConsole_p0.accountId\", \"entityLabelLocation\": \"createLeadConsole_p0.accountId\" }, \"UPDATE\": { \"entityIdLocation\": \"updateLeadConsole_p0.accountId\", \"entityLabelLocation\": \"updateLeadConsole_p0.accountId\" } }', 'MENU', b'1', 'Lead Console Reset', 'NON_SINGLETON','{\"menuGroupName\": \"nav\", \"icon\":\"\", \"toolTip\":\"\", \"dashboard\":true, \"display_order\":1, \"isActive\":true}', '9','{\"publishType\": \"DEFAULT\"}'),
('passwordPolicy', 'default.user','2019-08-07 13:50:29.862585', 'default.user', '2019-08-07 13:50:29.862585', 'Password Policy', '{}', 'MENU', b'1', 'Password Policy', 'NON_SINGLETON','{\"menuGroupName\": \"nav\", \"icon\":\"\", \"toolTip\":\"\", \"dashboard\":true, \"display_order\":1, \"isActive\":true}', '1','{\"publishType\": \"DEFAULT\"}');

INSERT INTO `activity_page` 
(`id`, `created_by`, `created_on`, `last_updated_by`, `last_updated_on`, `page_order`, `section_name`, `page_template_id`, `activity_template_id`) 
VALUES 
('23', 'default.user', '2020-07-28 09:24:46.000000', 'default.user', '2020-07-28 09:24:46.000000', '1', '', 'createLeadConsole_p0', 'leadConsole'),
('24', 'default.user', '2020-07-28 09:24:46.000000', 'default.user', '2020-07-28 09:24:46.000000', '1', '', 'updateLeadConsole_p0', 'leadConsole');
('15', 'default.user', '2020-01-24 11:24:15.262110', 'default.user', '2020-01-24 11:25:15.262110', '1', '', 'passwordPolicy_p0', 'passwordPolicy');

INSERT INTO `service` 
(`id`, `created_by`, `created_on`, `last_updated_by`, `last_updated_on`, `description`, `name`) 
VALUES 
('self', 'default.user', '2019-06-13 12:11:09.000000', 'default.user', '2019-06-13 12:11:09.000000', 'Self Serve ', 'Self Serve');

INSERT INTO `service_urls` 
(`id`, `created_by`, `created_on`, `last_updated_by`, `last_updated_on`, `baseurl`, `env`, `headers`, `service_id`) 
VALUES 
('11', 'default.user', '2019-06-13 12:13:02.000000', 'default.user', '2019-06-13 12:13:02.000000', 'http://localhost:8090/self-serve/api', 'TEST', '{}', 'self');

INSERT INTO `fetch_config_template` 
(`id`, `created_by`, `created_on`, `last_updated_by`, `last_updated_on`, `fetch_for`, `headers`, `params`, `relativeurl`, `resp_api_to_resp_ui`, `translator_type`, `type`, `service_id`) 
VALUES 
('31', 'default.user', '2019-06-13 12:24:46.000000', 'default.user', '2019-06-13 12:24:46.000000', 'createLeadConsole_p0', '{}', '{\"contexts\": [\"accountId\"], \"constants\": {}}', '/actuator/health', '{\"objectTranslator\": \"function translate(values, entity, context) { try { context  = JSON.parse(context); var uiData = { \\\"accountId\\\": context.accountId }; } catch (e) {} return JSON.stringify(uiData); }\"}', 'JS', 'PAGE_DATA_VALUE', 'self'),
('32', 'default.user', '2019-06-13 12:24:46.000000', 'default.user', '2019-06-13 12:24:46.000000', 'updateLeadConsole_p0', '{}', '{\"contexts\": [\"accountId\"], \"constants\": {}}', '/actuator/health', '{\"objectTranslator\": \"function translate(values, entity, context) { try { context  = JSON.parse(context); var uiData = { \\\"accountId\\\": context.accountId }; } catch (e) {} return JSON.stringify(uiData); }\"}', 'JS', 'PAGE_DATA_VALUE', 'self');

INSERT INTO `fetch_config_template`
(`id`, `created_by`, `created_on`, `last_updated_by`, `last_updated_on`, `fetch_for`, `headers`, `params`, `relativeurl`, `resp_api_to_resp_ui`, `translator_type`, `type`, `service_id`) VALUES
('29', 'default.user', '2019-06-13 12:24:46.000000', 'default.user', '2019-06-13 12:24:46.000000', 'passwordPolicy_p0', '{\"GenerateAuthToken\": \"Bearer \"}', '{\"contexts\": [\"clientId\", \"accountId\", \"entity\"], \"constants\": {}}', '/en/hierarchy/rest/clients/nemo-client-${clientId}/accounts/${accountId}-account-default/authpolicy', '{\"objectTranslator\": \"function translate(apiData) { var uiData = {\\\"configs\\\": {}}; var configs = { \\\"prevPwd\\\": 0, \\\"pwdLength\\\": 0, \\\"pwdExpiry\\\": 0, \\\"pwdAttempts\\\": 0 };  var items = JSON.parse(apiData).data.items; configs.prevPwd = getConfig(items, \\\"historyLength\\\"); configs.pwdLength = getConfig(items, \\\"passwordLength\\\"); configs.pwdExpiry = getConfig(items, \\\"expiryDays\\\"); configs.pwdAttempts = getConfig(items, \\\"retryCount\\\"); uiData.configs = configs; return JSON.stringify(uiData); } function getConfig(items, key) { var config = null; items.forEach(function(item){if(item.configKey==key){ config = item; }}); return config.configValue;}\"}', 'JS', 'PAGE_DATA_VALUE', 'assist'),
('30', 'default.user', '2019-06-13 12:24:46.000000', 'default.user', '2019-06-13 12:24:46.000000', 'listPasswordPolicy', '{\"GenerateAuthToken\": \"Bearer \"}', '{\"contexts\": [\"clientId\", \"accountId\", \"entity\"], \"constants\": {}}', '/en/hierarchy/rest/clients/nemo-client-${clientId}/accounts/${accountId}-account-default/authpolicy', '{\"objectTranslator\": \"function translate(apiData) { var uiData = [];  uiData = JSON.parse(apiData).data.items; return JSON.stringify(uiData); }\"}', 'JS', 'PAGE_DATA_VALUE', 'assist');

INSERT INTO `action`
(`id`, `created_by`, `created_on`, `last_updated_by`, `last_updated_on`, `definition`, `definition_type`, `description`, `type`, `response_definition`, `configs`) VALUES
('19', 'default.user', '2019-08-26 13:13:15.527428', 'jonathan.paul@247-inc.com', '2020-12-10 18:47:29.012112', '{\"type\": \"REST\", \"method\": \"POST\", \"headers\": {\"Content-Type\": \"application/x-www-form-urlencoded\", \"GenerateAuthToken\": \"Bearer \"}, \"serviceId\": \"assist\", \"idLookupKeys\": null, \"relativePath\": \"/en/hierarchy/rest/clients/nemo-client-${clientId}/accounts/${accountId}-account-default/authpolicy/update?entityObj=${body}\", \"bodyDefinition\": {}, \"requestBodyKey\": null, \"restClientType\": null, \"idLookupRequired\": false, \"objectTranslator\": \"function translate(pageData, entityId, clientId, accountId, env, prefetch) {  prefetch = JSON.parse(prefetch); var uiData = JSON.parse(pageData).passwordPolicy_p0.configs; var apiData = getConfig(prefetch.listPasswordPolicy, \\\"historyLength\\\"); apiData.configValue = uiData.prevPwd; return JSON.stringify(apiData); } function getConfig(items, key) { var config = null; for(var i=0;i<items.length;i++){var item=items[i]; if(item.configKey==key){ config = item; }} return config;}\", \"preFetchDefinition\": {\"listPasswordPolicy\": {\"fetchFor\": \"listPasswordPolicy\", \"fetchType\": \"PAGE_DATA_VALUE\"}}}', 'UPDATE', 'PasswordPolicy prevPwd', 'REST', '{\"entityResponseTranslator\": \"var ApiResponse = function(_status, _message){ this.status = _status; this.message = _message; }; function translate(responseData) { try{ if(!responseData){ return new ApiResponse(\'ERROR\', \'Error while processing your request\'); } var uiData = JSON.parse(responseData); if(uiData != null && uiData.status == \'SUCCESS\' && uiData.data != null){ return new ApiResponse(uiData.status, uiData.data.entityId); } else { return new ApiResponse(uiData.status, uiData.errorMessage); } }catch(e){ return new ApiResponse(\'ERROR\', \'Error while processing your request\'); } } \"}', '{}'),
('20', 'default.user', '2019-08-26 13:13:15.527428', 'jonathan.paul@247-inc.com', '2020-12-10 18:47:29.011113', '{\"type\": \"REST\", \"method\": \"POST\", \"headers\": {\"Content-Type\": \"application/x-www-form-urlencoded\", \"GenerateAuthToken\": \"Bearer \"}, \"serviceId\": \"assist\", \"idLookupKeys\": null, \"relativePath\": \"/en/hierarchy/rest/clients/nemo-client-${clientId}/accounts/${accountId}-account-default/authpolicy/update?entityObj=${body}\", \"bodyDefinition\": {}, \"requestBodyKey\": null, \"restClientType\": null, \"idLookupRequired\": false, \"objectTranslator\": \"function translate(pageData, entityId, clientId, accountId, env, prefetch) {  prefetch = JSON.parse(prefetch); var uiData = JSON.parse(pageData).passwordPolicy_p0.configs; var apiData = getConfig(prefetch.listPasswordPolicy, \\\"retryCount\\\"); apiData.configValue = uiData.pwdAttempts; return JSON.stringify(apiData); } function getConfig(items, key) { var config = null; for(var i=0;i<items.length;i++){var item=items[i]; if(item.configKey==key){ config = item; }} return config;}\", \"preFetchDefinition\": {\"listPasswordPolicy\": {\"fetchFor\": \"listPasswordPolicy\", \"fetchType\": \"PAGE_DATA_VALUE\"}}}', 'UPDATE', 'PasswordPolicy pwdAttempts', 'REST', '{\"entityResponseTranslator\": \"var ApiResponse = function(_status, _message){ this.status = _status; this.message = _message; }; function translate(responseData) { try{ if(!responseData){ return new ApiResponse(\'ERROR\', \'Error while processing your request\'); } var uiData = JSON.parse(responseData); if(uiData != null && uiData.status == \'SUCCESS\' && uiData.data != null){ return new ApiResponse(uiData.status, uiData.data.entityId); } else { return new ApiResponse(uiData.status, uiData.errorMessage); } }catch(e){ return new ApiResponse(\'ERROR\', \'Error while processing your request\'); } } \"}', '{}'),
('21', 'default.user', '2019-08-26 13:13:15.527428', 'jonathan.paul@247-inc.com', '2020-12-10 18:47:29.011113', '{\"type\": \"REST\", \"method\": \"POST\", \"headers\": {\"Content-Type\": \"application/x-www-form-urlencoded\", \"GenerateAuthToken\": \"Bearer \"}, \"serviceId\": \"assist\", \"idLookupKeys\": null, \"relativePath\": \"/en/hierarchy/rest/clients/nemo-client-${clientId}/accounts/${accountId}-account-default/authpolicy/update?entityObj=${body}\", \"bodyDefinition\": {}, \"requestBodyKey\": null, \"restClientType\": null, \"idLookupRequired\": false, \"objectTranslator\": \"function translate(pageData, entityId, clientId, accountId, env, prefetch) {  prefetch = JSON.parse(prefetch); var uiData = JSON.parse(pageData).passwordPolicy_p0.configs; var apiData = getConfig(prefetch.listPasswordPolicy, \\\"expiryDays\\\"); apiData.configValue = uiData.pwdExpiry; return JSON.stringify(apiData); } function getConfig(items, key) { var config = null; for(var i=0;i<items.length;i++){var item=items[i]; if(item.configKey==key){ config = item; }} return config;}\", \"preFetchDefinition\": {\"listPasswordPolicy\": {\"fetchFor\": \"listPasswordPolicy\", \"fetchType\": \"PAGE_DATA_VALUE\"}}}', 'UPDATE', 'PasswordPolicy pwdExpiry', 'REST', '{\"entityResponseTranslator\": \"var ApiResponse = function(_status, _message){ this.status = _status; this.message = _message; }; function translate(responseData) { try{ if(!responseData){ return new ApiResponse(\'ERROR\', \'Error while processing your request\'); } var uiData = JSON.parse(responseData); if(uiData != null && uiData.status == \'SUCCESS\' && uiData.data != null){ return new ApiResponse(uiData.status, uiData.data.entityId); } else { return new ApiResponse(uiData.status, uiData.errorMessage); } }catch(e){ return new ApiResponse(\'ERROR\', \'Error while processing your request\'); } } \"}', '{}'),
('22', 'default.user', '2019-08-26 13:13:15.527428', 'jonathan.paul@247-inc.com', '2020-12-10 18:47:29.011113', '{\"type\": \"REST\", \"method\": \"POST\", \"headers\": {\"Content-Type\": \"application/x-www-form-urlencoded\", \"GenerateAuthToken\": \"Bearer \"}, \"serviceId\": \"assist\", \"idLookupKeys\": null, \"relativePath\": \"/en/hierarchy/rest/clients/nemo-client-${clientId}/accounts/${accountId}-account-default/authpolicy/update?entityObj=${body}\", \"bodyDefinition\": {}, \"requestBodyKey\": null, \"restClientType\": null, \"idLookupRequired\": false, \"objectTranslator\": \"function translate(pageData, entityId, clientId, accountId, env, prefetch) {  prefetch = JSON.parse(prefetch); var uiData = JSON.parse(pageData).passwordPolicy_p0.configs; var apiData = getConfig(prefetch.listPasswordPolicy, \\\"passwordLength\\\"); apiData.configValue = uiData.pwdLength; return JSON.stringify(apiData); } function getConfig(items, key) { var config = null; for(var i=0;i<items.length;i++){var item=items[i]; if(item.configKey==key){ config = item; }} return config;}\", \"preFetchDefinition\": {\"listPasswordPolicy\": {\"fetchFor\": \"listPasswordPolicy\", \"fetchType\": \"PAGE_DATA_VALUE\"}}}', 'UPDATE', 'PasswordPolicy pwdLength', 'REST', '{\"entityResponseTranslator\": \"var ApiResponse = function(_status, _message){ this.status = _status; this.message = _message; }; function translate(responseData) { try{ if(!responseData){ return new ApiResponse(\'ERROR\', \'Error while processing your request\'); } var uiData = JSON.parse(responseData); if(uiData != null && uiData.status == \'SUCCESS\' && uiData.data != null){ return new ApiResponse(uiData.status, uiData.data.entityId); } else { return new ApiResponse(uiData.status, uiData.errorMessage); } }catch(e){ return new ApiResponse(\'ERROR\', \'Error while processing your request\'); } } \"}', '{}');

INSERT INTO `action_dependencies`
(`action_id`, `dependent_action_id`) VALUES
(20, 19), (21, 20), (22, 21);

INSERT INTO `action_workflow`
(`id`, `created_by`, `created_on`, `last_updated_by`, `last_updated_on`, `action_id`, `activity_template_id`) VALUES
('23', 'default.user', '2019-08-27 17:44:15.136579', 'default.user', '2019-08-27 17:44:15.136579', '19', 'passwordPolicy'),
('24', 'default.user', '2019-08-27 17:44:15.136579', 'default.user', '2019-08-27 17:44:15.136579', '20', 'passwordPolicy'),
('25', 'default.user', '2019-08-27 17:44:15.136579', 'default.user', '2019-08-27 17:44:15.136579', '21', 'passwordPolicy'),
('26', 'default.user', '2019-08-27 17:44:15.136579', 'default.user', '2019-08-27 17:44:15.136579', '22', 'passwordPolicy');
