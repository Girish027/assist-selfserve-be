use `self_serve`;

INSERT INTO `entity_template` (`id`, `created_by`, `created_on`, `last_updated_by`, `last_updated_on`, `fetch_for`, `name`) VALUES
('19', 'default.user', '2020-07-28 09:24:46.000000', 'default.user', '2020-07-28 09:24:46.000000', 'listPropertyValidation', 'Property Validation');

INSERT INTO `activity_template` (`id`, `created_by`, `created_on`, `last_updated_by`, `last_updated_on`, `description`, `entity_location`, `model`, `promotion_approval`, `title`, `type`, `ui_schema`, `entity_template_id`, `configs`) VALUES
('propertyValidation', 'default.user', '2020-07-28 09:24:46.000000', 'default.user', '2020-07-28 09:24:46.000000', 'Property Validation', '{\"UPDATE\": \"updatePropertyValidation_p0.key\", \"CREATE\": \"createPropertyValidation_p0.validatorName\"}', 'MENU', b'1', 'Property Validation', 'NON_SINGLETON', '{\"menuGroupName\": \"nav\", \"icon\":\"\", \"toolTip\":\"\", \"dashboard\":true, \"display_order\":1, \"isActive\":true}', '19', '{\"publishType\": \"DEFAULT\"}');

INSERT INTO `node` (`id`, `created_by`, `created_on`, `last_updated_by`, `last_updated_on`, `node_id`, `node_type`, `parent_id`) VALUES
('32', 'default.user', '2020-07-28 09:24:46.000000', 'default.user', '2020-07-28 09:24:46.000000', 'propertyValidation', 'WORKFLOW', '6');

INSERT INTO `fetch_config_template` (`id`, `created_by`, `created_on`, `last_updated_by`, `last_updated_on`, `fetch_for`, `headers`, `params`, `relativeurl`, `resp_api_to_resp_ui`, `translator_type`, `type`, `service_id`) VALUES
('58', 'default.user', '2019-06-13 12:24:46.000000', 'default.user', '2019-06-13 12:24:46.000000', 'listPropertyValidation', '{\"GenerateAuthToken\": \"Bearer \"}', '{\"contexts\": [\"clientId\", \"accountId\"], \"constants\": {}}', '/en/hierarchy/rest/clients/nemo-client-${clientId}/accounts/${accountId}-account-default/validator', '{\"objectTranslator\": \"function translate(values){var entities=[]; var list=[]; try{values=JSON.parse(values); list=values.data.items;}catch(e){return e.toString();} list.forEach(function(item){ entities.push({name:item.key, label: item.validatorName, secondaryLabel: item.validatorTypeLabel}); });return JSON.stringify(entities);}\"}', 'JS', 'ENTITY_LISTING', 'assist');

INSERT INTO `fetch_config_template` (`id`, `created_by`, `created_on`, `last_updated_by`, `last_updated_on`, `fetch_for`, `headers`, `params`, `relativeurl`, `resp_api_to_resp_ui`, `translator_type`, `type`, `service_id`) VALUES
('59', 'default.user', '2019-06-13 12:24:46.000000', 'default.user', '2019-06-13 12:24:46.000000', 'updatePropertyValidation_p0', '{\"GenerateAuthToken\": \"Bearer \"}', '{\"contexts\": [\"clientId\", \"entity\", \"accountId\"], \"constants\": {}}', '/en/hierarchy/rest/clients/nemo-client-${clientId}/accounts/${accountId}-account-default/validator/${entity}', '{\"objectTranslator\": \"function translate(values) { values = JSON.parse(values); var uiData = values.items; return JSON.stringify(uiData); }\"}', 'JS', 'PAGE_DATA_VALUE', 'assist');

INSERT INTO `page_template` (`id`, `created_by`, `created_on`, `last_updated_by`, `last_updated_on`, `definition`, `description`, `title`, `type`) VALUES
('createPropertyValidation_p0', 'default.user', '2020-07-28 09:24:46.000000', 'jonathan.paul@247-inc.com', '2021-02-03 22:08:14.397598', '{ \"schema\": { \"type\": \"object\", \"properties\": { \"banner\": { \"type\": \"string\" }, \"validatorName\": { \"type\": \"string\", \"title\": \"Name\" }, \"validatorType\": { \"type\": \"string\", \"title\": \"Type\", \"enum\": [ \"enum\", \"regex\" ], \"enumNames\": [ \"Enumerated\", \"Regular Expression\" ], \"default\": \"enum\" } }, \"dependencies\": { \"validatorType\": { \"oneOf\": [ { \"properties\": { \"validatorType\": { \"enum\": [ \"regex\" ] }, \"validatorRule\": { \"type\": \"string\", \"title\": \"Enter the snippet\" } } }, { \"properties\": { \"validatorType\": { \"enum\": [ \"enum\" ] }, \"enumValues\": { \"type\": \"array\", \"title\": \"Enumeration list\", \"items\": { \"type\": \"string\" } } } } ] } } }, \"uiSchema\": { \"banner\": { \"ui:field\": \"infobanner\", \"ui:options\": { \"size\": 10, \"bannerTitle\": \"PROPERTY_VALIDATION_BANNER_TITLE\", \"bannerDescription\": \"PROPERTY_VALIDATION_BANNER_DESCRIPTION\" } }, \"validatorName\": { \"ui:field\": \"text\", \"ui:options\": { \"inputType\": \"text\", \"fieldSize\": [ 6, 8 ], \"styles\": { \"container\": { \"marginBottom\": \"15px\" }, \"label\": { \"marginBottom\": \"8px\" }, \"field\": {} } } }, \"validatorType\": { \"ui:field\": \"select\", \"ui:options\": { \"fieldSize\": [ 6, 8 ], \"styles\": { \"container\": { \"marginBottom\": \"15px\" }, \"label\": { \"marginBottom\": \"8px\" }, \"field\": {} } } }, \"validatorRule\": { \"ui:field\": \"text\", \"ui:options\": { \"inputType\": \"text\", \"fieldSize\": [ 6, 8 ], \"styles\": { \"container\": { \"marginBottom\": \"15px\" }, \"label\": { \"marginBottom\": \"8px\" }, \"field\": {} } } }, \"enumValues\": { \"ui:options\": { \"fieldSize\": [ 6, 8 ], \"styles\": { \"container\": { \"marginBottom\": \"15px\" }, \"label\": { \"marginBottom\": \"8px\" }, \"field\": {} } }, \"items\": { \"ui:field\": \"text\", \"ui:options\": { \"inputType\": \"text\", \"fieldSize\": [ 6, 8 ], \"styles\": { \"container\": { \"marginBottom\": \"15px\" }, \"label\": { \"marginBottom\": \"8px\" }, \"field\": {} } } } } }, \"viewUiSchema\": { \"banner\": { \"ui:field\": \"infobanner\", \"ui:options\": { \"size\": 10, \"bannerTitle\": \"PROPERTY_VALIDATION_BANNER_TITLE\", \"bannerDescription\": \"PROPERTY_VALIDATION_BANNER_DESCRIPTION\" } }, \"validatorName\": { \"ui:field\": \"text\", \"ui:options\": { \"isDisabled\": true, \"inputType\": \"text\", \"fieldSize\": [ 6, 8 ], \"styles\": { \"container\": { \"marginBottom\": \"15px\" }, \"label\": { \"marginBottom\": \"8px\" }, \"field\": {} } } }, \"validatorType\": { \"ui:field\": \"select\", \"ui:options\": { \"isDisabled\": true, \"fieldSize\": [ 6, 8 ], \"styles\": { \"container\": { \"marginBottom\": \"15px\" }, \"label\": { \"marginBottom\": \"8px\" }, \"field\": {} } } }, \"validatorRule\": { \"ui:field\": \"text\", \"ui:options\": { \"isDisabled\": true, \"inputType\": \"text\", \"fieldSize\": [ 6, 8 ], \"styles\": { \"container\": { \"marginBottom\": \"15px\" }, \"label\": { \"marginBottom\": \"8px\" }, \"field\": {} } } }, \"enumValues\": { \"ui:options\": { \"isDisabled\": true, \"fieldSize\": [ 6, 8 ], \"styles\": { \"container\": { \"marginBottom\": \"15px\" }, \"label\": { \"marginBottom\": \"8px\" }, \"field\": {} } }, \"items\": { \"ui:field\":\"text\", \"ui:options\": { \"isDisabled\": true, \"inputType\": \"text\", \"fieldSize\": [ 6, 8 ], \"styles\": { \"container\": { \"marginBottom\": \"15px\" }, \"label\": { \"marginBottom\": \"8px\" }, \"field\": {} } } } } }, \"fetch\": { \"page\": \"createPropertyValidation_p0\" }, \"validation\": { \"enabled\": true, \"type\": \"onchange\" } }', 'Create Property Validation', 'Create Property Validation', 'CREATE');

INSERT INTO `page_template` (`id`, `created_by`, `created_on`, `last_updated_by`, `last_updated_on`, `definition`, `description`, `title`, `type`) VALUES
('updatePropertyValidation_p0', 'default.user', '2020-07-28 09:24:46.000000', 'jonathan.paul@247-inc.com', '2021-02-03 22:08:14.397598', '{ \"schema\": { \"type\": \"object\", \"properties\": { \"key\": { \"type\": \"string\", \"title\": \"key\" }, \"validatorName\": { \"type\": \"string\", \"title\": \"Name\" }, \"validatorType\": { \"type\": \"string\", \"title\": \"Type\", \"enum\": [ \"enum\", \"regex\" ], \"enumNames\": [ \"Enumerated\", \"Regular Expression\" ], \"default\": \"enum\" } }, \"dependencies\": { \"validatorType\": { \"oneOf\": [ { \"properties\": { \"validatorType\": { \"enum\": [ \"regex\" ] }, \"validatorRule\": { \"type\": \"string\", \"title\": \"Enter the snippet\" } } }, { \"properties\": { \"validatorType\": { \"enum\": [ \"enum\" ] }, \"enumValues\": { \"type\": \"array\", \"title\": \"Enumeration list\", \"items\": { \"title\": \"\", \"type\": \"string\" } } } } ] } } }, \"uiSchema\": { \"key\": { \"ui:field\": \"text\", \"ui:options\": { \"hidden\": true, \"inputType\": \"text\", \"fieldSize\": [ 6, 8 ], \"styles\": { \"container\": { \"marginBottom\": \"15px\" }, \"label\": { \"marginBottom\": \"8px\" }, \"field\": {} } } }, \"validatorName\": { \"ui:field\": \"text\", \"ui:options\": { \"inputType\": \"text\", \"fieldSize\": [ 6, 8 ], \"styles\": { \"container\": { \"marginBottom\": \"15px\" }, \"label\": { \"marginBottom\": \"8px\" }, \"field\": {} } } }, \"validatorType\": { \"ui:field\": \"select\", \"ui:options\": { \"fieldSize\": [ 6, 8 ], \"styles\": { \"container\": { \"marginBottom\": \"15px\" }, \"label\": { \"marginBottom\": \"8px\" }, \"field\": {} } } }, \"validatorRule\": { \"ui:field\": \"text\", \"ui:options\": { \"inputType\": \"text\", \"fieldSize\": [ 6, 8 ], \"styles\": { \"container\": { \"marginBottom\": \"15px\" }, \"label\": { \"marginBottom\": \"8px\" }, \"field\": {} } } }, \"enumValues\": { \"ui:options\": { \"fieldSize\": [ 6, 8 ], \"styles\": { \"container\": { \"marginBottom\": \"15px\" }, \"label\": { \"marginBottom\": \"8px\" }, \"field\": {} } }, \"items\": { \"ui:field\": \"text\", \"ui:options\": { \"inputType\": \"text\", \"fieldSize\": [ 6, 8 ], \"styles\": { \"container\": { \"marginBottom\": \"15px\" }, \"label\": { \"marginBottom\": \"8px\" }, \"field\": {} } } } } }, \"viewUiSchema\": { \"key\": { \"ui:field\": \"text\", \"ui:options\": { \"isDisabled\": true, \"hidden\": true, \"inputType\": \"text\", \"fieldSize\": [ 6, 8 ], \"styles\": { \"container\": { \"marginBottom\": \"15px\" }, \"label\": { \"marginBottom\": \"8px\" }, \"field\": {} } } }, \"validatorName\": { \"ui:field\": \"text\", \"ui:options\": { \"isDisabled\": true, \"inputType\": \"text\", \"fieldSize\": [ 6, 8 ], \"styles\": { \"container\": { \"marginBottom\": \"15px\" }, \"label\": { \"marginBottom\": \"8px\" }, \"field\": {} } } }, \"validatorType\": { \"ui:field\": \"select\", \"ui:options\": { \"isDisabled\": true, \"fieldSize\": [ 6, 8 ], \"styles\": { \"container\": { \"marginBottom\": \"15px\" }, \"label\": { \"marginBottom\": \"8px\" }, \"field\": {} } } }, \"validatorRule\": { \"ui:field\": \"text\", \"ui:options\": { \"isDisabled\": true, \"inputType\": \"text\", \"fieldSize\": [ 6, 8 ], \"styles\": { \"container\": { \"marginBottom\": \"15px\" }, \"label\": { \"marginBottom\": \"8px\" }, \"field\": {} } } }, \"enumValues\": { \"ui:options\": { \"isDisabled\": true, \"fieldSize\": [ 6, 8 ], \"styles\": { \"container\": { \"marginBottom\": \"15px\" }, \"label\": { \"marginBottom\": \"8px\" }, \"field\": {} } }, \"items\": { \"ui:field\": \"text\", \"ui:options\": { \"isDisabled\": true, \"inputType\": \"text\", \"fieldSize\": [ 6, 8 ], \"styles\": { \"container\": { \"marginBottom\": \"15px\" }, \"label\": { \"marginBottom\": \"8px\" }, \"field\": {} } } } } }, \"fetch\": { \"page\": \"updatePropertyValidation_p0\" }, \"validation\": { \"enabled\": true, \"type\": \"onchange\" } }', 'Update Property Validation', 'Update Property Validation', 'UPDATE');

INSERT INTO `activity_page` (`id`, `created_by`, `created_on`, `last_updated_by`, `last_updated_on`, `page_order`, `section_name`, `page_template_id`, `activity_template_id`) VALUES
('35', 'default.user', '2020-07-28 09:24:46.000000', 'default.user', '2020-07-28 09:24:46.000000', '1', '', 'updatePropertyValidation_p0', 'propertyValidation');

INSERT INTO `activity_page` (`id`, `created_by`, `created_on`, `last_updated_by`, `last_updated_on`, `page_order`, `section_name`, `page_template_id`, `activity_template_id`) VALUES
('36', 'default.user', '2020-07-28 09:24:46.000000', 'default.user', '2020-07-28 09:24:46.000000', '1', '', 'createPropertyValidation_p0', 'propertyValidation');

INSERT INTO `action` (`id`, `created_by`, `created_on`, `last_updated_by`, `last_updated_on`, `definition`, `definition_type`, `description`, `type`, `response_definition`, `configs`) VALUES
('42', 'default.user', '2019-08-26 13:13:15.527428', 'jonathan.paul@247-inc.com', '2021-02-18 18:28:06.835502', '{\"type\": \"REST\", \"method\": \"POST\", \"headers\": {\"Content-Type\": \"application/x-www-form-urlencoded\", \"GenerateAuthToken\": \"Bearer \"}, \"serviceId\": \"assist\", \"idLookupKeys\": null, \"relativePath\": \"/en/hierarchy/rest/clients/nemo-client-${clientId}/accounts/${accountId}-account-default/validator/update?entityObj=${body}\", \"bodyDefinition\": {}, \"requestBodyKey\": null, \"restClientType\": null, \"idLookupRequired\": false, \"objectTranslator\": \"function translate(pageData, entityId, clientId, accountId, env, prefetch) { var apiData = JSON.parse(pageData).updatePropertyValidation_p0; if(!apiData.validatorRule) {apiData.validatorRule=\\\"\\\"} if(!apiData.enumValues) {apiData.enumValues=[]}  return JSON.stringify(apiData); }\", \"preFetchDefinition\": {}}', 'UPDATE', 'assist accountConfig update action', 'REST', '{\"entityResponseTranslator\": \"var ApiResponse = function(_status, _message){ this.status = _status; this.message = _message; }; function translate(responseData) { try{ if(!responseData){ return new ApiResponse(\'ERROR\', \'Error while processing your request\'); } var uiData = JSON.parse(responseData); if(uiData != null && uiData.validatorId){ return new ApiResponse(\'SUCCESS\', uiData.validatorId); } else { return new ApiResponse(\'ERROR\', uiData.errorMessage); } }catch(e){ return new ApiResponse(\'ERROR\', \'Error while processing your request\'); } } \"}', '{}');

INSERT INTO `action` (`id`, `created_by`, `created_on`, `last_updated_by`, `last_updated_on`, `definition`, `definition_type`, `description`, `type`, `response_definition`, `configs`) VALUES
('43', 'default.user', '2019-08-26 13:13:15.527428', 'jonathan.paul@247-inc.com', '2021-02-18 18:24:49.491852', '{\"type\": \"REST\", \"method\": \"POST\", \"headers\": {\"Content-Type\": \"application/x-www-form-urlencoded\", \"GenerateAuthToken\": \"Bearer \"}, \"serviceId\": \"assist\", \"idLookupKeys\": null, \"relativePath\": \"/en/hierarchy/rest/clients/nemo-client-${clientId}/accounts/${accountId}-account-default/validator?entityObj=${body}\", \"bodyDefinition\": {}, \"requestBodyKey\": null, \"restClientType\": null, \"idLookupRequired\": false, \"objectTranslator\": \"function translate(pageData, entityId, clientId, accountId, env, prefetch) { var apiData = JSON.parse(pageData).createPropertyValidation_p0; apiData.key=\\\"\\\"; if(!apiData.validatorRule) {apiData.validatorRule=\\\"\\\"} if(!apiData.enumValues) {apiData.enumValues=[\\\"\\\"]}  return JSON.stringify(apiData); }\", \"preFetchDefinition\": {}}', 'CREATE', 'assist accountConfig create action', 'REST', '{\"entityResponseTranslator\": \"var ApiResponse = function(_status, _message){ this.status = _status; this.message = _message; }; function translate(responseData) { try{ if(!responseData){ return new ApiResponse(\'ERROR\', \'Error while processing your request\'); } var uiData = JSON.parse(responseData); if(uiData != null && uiData.validatorId){ return new ApiResponse(\'SUCCESS\', uiData.validatorId); } else { return new ApiResponse(\'ERROR\', uiData.errorMessage); } }catch(e){ return new ApiResponse(\'ERROR\', \'Error while processing your request\'); } } \"}', '{}');

INSERT INTO `action_workflow` (`id`, `created_by`, `created_on`, `last_updated_by`, `last_updated_on`, `action_id`, `activity_template_id`) VALUES
('45', 'default.user', '2019-08-27 17:44:15.136579', 'default.user', '2019-08-27 17:44:15.136579', '42', 'propertyValidation');

INSERT INTO `action_workflow` (`id`, `created_by`, `created_on`, `last_updated_by`, `last_updated_on`, `action_id`, `activity_template_id`) VALUES
('46', 'default.user', '2019-08-27 17:44:15.136579', 'default.user', '2019-08-27 17:44:15.136579', '43', 'propertyValidation');
