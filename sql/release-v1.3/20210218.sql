-- add new screen authorised urls

use self_serve;

INSERT INTO `node` (`id`, `created_by`, `created_on`, `last_updated_by`, `last_updated_on`, `node_id`, `node_type`, `parent_id`)
VALUES ('33', 'default.user', '2020-08-24 12:24:46.000000', 'default.user', '2020-08-24 12:24:46.000000', 'authorisedUrls', 'WORKFLOW', '6');

INSERT INTO `page_template` (`id`, `created_by`, `created_on`, `last_updated_by`, `last_updated_on`, `definition`, `description`, `title`, `type`)
VALUES ('authorisedUrls_p0', 'default.user', '2019-08-07 14:06:42.713766', 'Gangeyula.Chandra@247-inc.com', '2021-01-21 15:23:03.889963', '{ \"schema\": { \"type\": \"object\", \"properties\": { \"key\": { \"type\": \"string\", \"title\": \"\" }, \"accountId\": { \"type\": \"string\", \"title\": \"\" }, \"scopeType\": { \"type\": \"string\", \"title\": \"\" }, \"scopeValue\": { \"type\": \"string\", \"title\": \"\" }, \"filterType\": { \"type\": \"string\", \"title\": \"Filter Type\", \"enum\": [ \"blacklist\", \"whitelist\" ], \"enumNames\": [ \"Blacklist\", \"Whitelist\" ], \"default\": \"blacklist\" }, \"enabled\": { \"type\": \"string\", \"title\": \"Enabled\", \"default\": \"true\", \"enum\": [ \"true\", \"false\" ], \"enumNames\": [ \"True\", \"False\" ] }, \"filterConfig\": { \"type\": \"array\", \"minItems\": 1, \"title\": \"\", \"items\": { \"properties\": { \"urlFilterConfigId\": { \"type\": \"string\", \"title\": \"\" }, \"filterText\": { \"title\": \"Filter Text\", \"type\": \"string\", \"default\": \"\" }, \"filterOptions\": { \"title\": \"Filter Options\", \"type\": \"string\", \"enum\": [ \"STARTS_WITH\", \"REGEX\", \"EXACT_MATCH\" ], \"enumNames\": [ \"Starts with\", \"Reg Ex\", \"Exact match\" ], \"default\": \"STARTS_WITH\" }, \"urlConfigDeleted\": { \"type\": \"string\", \"enum\": [ \"true\", \"false\" ], \"enumNames\": [ \"True\", \"False\" ], \"default\": \"false\" } } } } } }, \"uiSchema\": { \"key\": { \"ui:field\": \"text\", \"ui:options\": { \"hidden\": true } }, \"accountId\": { \"ui:field\": \"text\", \"ui:options\": { \"hidden\": true } }, \"scopeType\": { \"ui:field\": \"text\", \"ui:options\": { \"hidden\": true } }, \"scopeValue\": { \"ui:field\": \"text\", \"ui:options\": { \"hidden\": true } }, \"filterType\": { \"ui:field\": \"select\", \"ui:options\": { \"fieldSize\": [ 10, 12 ], \"size\": 2, \"styles\": { \"container\": { \"marginBottom\": \"15px\", \"marginRight\": \"20px\" }, \"label\": { \"marginBottom\": \"8px\" }, \"field\": {} } } }, \"enabled\": { \"ui:field\": \"select\", \"ui:options\": { \"fieldSize\": [ 10, 12 ], \"size\": 2, \"styles\": { \"container\": { \"marginBottom\": \"15px\", \"marginRight\": \"20px\" }, \"label\": { \"marginBottom\": \"8px\" }, \"field\": {} } } }, \"filterConfig\": { \"items\": { \"urlFilterConfigId\": { \"ui:field\": \"text\", \"ui:options\": { \"hidden\": true } }, \"filterText\": { \"ui:field\": \"text\", \"ui:options\": { \"inputType\": \"text\", \"fieldSize\": [ 10, 12 ], \"size\": 9, \"styles\": { \"container\": { \"marginBottom\": \"15px\", \"marginRight\": \"20px\" }, \"label\": { \"marginBottom\": \"8px\" }, \"field\": {} } } }, \"filterOptions\": { \"ui:field\": \"select\", \"ui:options\": { \"fieldSize\": [ 10, 12 ], \"size\": 3, \"styles\": { \"container\": { \"marginBottom\": \"15px\", \"marginRight\": \"20px\" }, \"label\": { \"marginBottom\": \"8px\" }, \"field\": {} } } }, \"urlConfigDeleted\": { \"ui:field\": \"text\", \"ui:options\": { \"hidden\": true } }, \"ui:options\": { \"disableSeparator\": true } }, \"ui:options\": { \"disableSeparator\": true, \"styles\": { \"addButton\": {}, \"removeButton\": {} } } } }, \"viewUiSchema\": { \"key\": { \"ui:field\": \"text\", \"ui:options\": { \"hidden\": true } }, \"accountId\": { \"ui:field\": \"text\", \"ui:options\": { \"hidden\": true } }, \"scopeType\": { \"ui:field\": \"text\", \"ui:options\": { \"hidden\": true } }, \"scopeValue\": { \"ui:field\": \"text\", \"ui:options\": { \"hidden\": true } }, \"filterType\": { \"ui:field\": \"select\", \"ui:options\": { \"isDisabled\": true, \"fieldSize\": [ 10, 12 ], \"size\": 2, \"styles\": { \"container\": { \"marginBottom\": \"15px\", \"marginRight\": \"20px\" }, \"label\": { \"marginBottom\": \"8px\" }, \"field\": {} } } }, \"enabled\": { \"ui:field\": \"select\", \"ui:options\": { \"isDisabled\": true, \"fieldSize\": [ 10, 12 ], \"size\": 2, \"styles\": { \"container\": { \"marginBottom\": \"15px\", \"marginRight\": \"20px\" }, \"label\": { \"marginBottom\": \"8px\" }, \"field\": {} } } }, \"filterConfig\": { \"items\": { \"urlFilterConfigId\": { \"ui:field\": \"text\", \"ui:options\": { \"hidden\": true } }, \"filterText\": { \"ui:field\": \"text\", \"ui:options\": { \"inputType\": \"text\", \"fieldSize\": [ 10, 12 ], \"size\": 9, \"isDisabled\": true, \"styles\": { \"container\": { \"marginBottom\": \"15px\", \"marginRight\": \"20px\" }, \"label\": { \"marginBottom\": \"8px\" }, \"field\": {} } } }, \"filterOptions\": { \"ui:field\": \"select\", \"ui:options\": { \"fieldSize\": [ 10, 12 ], \"size\": 3, \"isDisabled\": true, \"styles\": { \"container\": { \"marginBottom\": \"15px\", \"marginRight\": \"20px\" }, \"label\": { \"marginBottom\": \"8px\" }, \"field\": {} } } }, \"urlConfigDeleted\": { \"ui:field\": \"text\", \"ui:options\": { \"hidden\": true } }, \"ui:options\": { \"disableSeparator\": true } }, \"ui:options\": { \"disableSeparator\": true, \"isDisabled\": true, \"styles\": { \"addButton\": {}, \"removeButton\": {} } } } }, \"fetch\": { \"page\": \"authorisedUrls_p0\" }, \"validation\": { \"enabled\": true, \"type\": \"onchange\" } }', 'Authorised Urls', 'Authorised Urls', 'UPDATE');

INSERT INTO `activity_template` (`id`, `created_by`, `created_on`, `last_updated_by`, `last_updated_on`, `description`, `entity_location`, `model`, `promotion_approval`, `title`, `type`, `ui_schema`, `entity_template_id`, `configs`)
VALUES ('authorisedUrls', 'default.user', '2019-08-07 13:50:29.862585', 'default.user', '2019-08-07 13:50:29.862585', 'Authorised urls', '{}', 'MENU', b'1', 'Authorised Urls', 'NON_SINGLETON', '{\"menuGroupName\": \"nav\", \"icon\":\"\", \"toolTip\":\"\", \"dashboard\":true, \"display_order\":1, \"isActive\":true}', b'1', '{\"publishType\": \"DEFAULT\"}');

INSERT INTO `activity_page` (`id`, `created_by`, `created_on`, `last_updated_by`, `last_updated_on`, `page_order`, `section_name`, `page_template_id`, `activity_template_id`, `entity_location`)
VALUES ('37', 'default.user', '2020-01-24 11:24:15.262110', 'default.user', '2020-01-24 11:25:15.262110', '1', '', 'authorisedUrls_p0', 'authorisedUrls', '');

INSERT INTO `fetch_config_template` (`id`, `created_by`, `created_on`, `last_updated_by`, `last_updated_on`, `fetch_for`, `headers`, `params`, `relativeurl`, `resp_api_to_resp_ui`, `translator_type`, `type`, `service_id`)
VALUES ('60', 'default.user', '2019-06-13 12:24:46.000000', 'default.user', '2019-06-13 12:24:46.000000', 'authorisedUrls_p0', '{\"GenerateAuthToken\": \"Bearer \"}', '{\"contexts\": [\"clientId\", \"accountId\", \"entity\"], \"constants\": {}}', '/en/hierarchy/rest/clients/nemo-client-${clientId}/accounts/${accountId}-account-default/urlfilterconfig', '{\"objectTranslator\": \"function translate(apiData) { values = JSON.parse(apiData).data.items[0]; items = values.filterConfig; filtersList = []; items.forEach(function (item) { if (item.urlConfigDeleted) { filtersList.push({ urlFilterConfigId: item.urlFilterConfigId, filterText: item.filterText, filterOptions: item.filterOptions, urlConfigDeleted: false }); } }); var uiData = { \\\"key\\\": values.key, \\\"accountId\\\": values.accountId, \\\"scopeType\\\": values.scopeType, \\\"scopeValue\\\": values.scopeValue, \\\"enabled\\\": values.enabled.toString(), \\\"filterType\\\": values.urlFilterListingType, \\\"filterConfig\\\": filtersList }; return JSON.stringify(uiData); }\"}', 'JS', 'PAGE_DATA_VALUE', 'assist');

INSERT INTO `action` (`id`, `created_by`, `created_on`, `last_updated_by`, `last_updated_on`, `definition`, `definition_type`, `description`, `type`, `response_definition`, `configs`)
VALUES ('44', 'default.user', '2020-10-16 13:13:15.527428', 'Gangeyula.Chandra@247-inc.com', '2021-02-22 18:10:55.836923', '{\"type\": \"REST\", \"method\": \"POST\", \"headers\": {\"Content-Type\": \"application/x-www-form-urlencoded\", \"GenerateAuthToken\": \"Bearer \"}, \"serviceId\": \"assist\", \"idLookupKeys\": null, \"relativePath\": \"/en/hierarchy/rest/clients/nemo-client-${clientId}/accounts/${accountId}-account-default/urlfilterconfig/update?entityObj=${body}\", \"bodyDefinition\": {}, \"requestBodyKey\": null, \"restClientType\": null, \"idLookupRequired\": false, \"objectTranslator\": \"function translate(pageData, entityId, clientId, accountId, env, prefetch) { pageData = JSON.parse(pageData).authorisedUrls_p0; prefetch = JSON.parse(prefetch); var apiData = {}; apiData.key = pageData.key; apiData.accountId = pageData.accountId; apiData.scopeType = pageData.scopeType; apiData.scopeValue = pageData.scopeValue; apiData.urlFilterListingType = pageData.filterType; apiData.enabled = pageData.enabled == \\\"true\\\"; apiData.filterConfig = prefetch.enabledUrls.filterConfig; pageData.filterConfig.forEach(function (pageDataFilter) { urlId = pageDataFilter.urlFilterConfigId; if (urlId != undefined) { apiData.filterConfig.forEach(function (apiFilter) { if (urlId === apiFilter.urlFilterConfigId) { apiFilter.filterText = pageDataFilter.filterText; apiFilter.filterOptions = pageDataFilter.filterOptions; apiFilter.urlConfigDeleted = true; } }); } else { apiData.filterConfig.push({ urlFilterConfigId: pageData.key, filterText: pageDataFilter.filterText, filterOptions: pageDataFilter.filterOptions, urlConfigDeleted: true }); } }); return JSON.stringify(apiData) } \", \"preFetchDefinition\": {\"enabledUrls\": {\"fetchFor\": \"authorisedUrls_p0\", \"fetchType\": \"PAGE_DATA_VALUE\"}}}', 'UPDATE', 'Update Authorised Urls', 'REST', '{\"entityResponseTranslator\": \"var ApiResponse = function(_status, _message){ this.status = _status; this.message = _message; }; function translate(responseData) { try{ if(!responseData){ return new ApiResponse(\'ERROR\', \'Error while processing your request\'); } var uiData = JSON.parse(responseData); if(uiData != null && uiData.status == \'SUCCESS\' && uiData.data != null){ return new ApiResponse(uiData.status, uiData.data.entityId); } else { return new ApiResponse(uiData.status, uiData.errorMessage||\'System error while publishing\'); } }catch(e){ return new ApiResponse(\'ERROR\', \'Error while processing your request\'); } } \"}', '{}');

INSERT INTO `action_workflow` (`id`, `created_by`, `created_on`, `last_updated_by`, `last_updated_on`, `action_id`, `activity_template_id`)
VALUES ('47', 'default.user', '2019-08-27 17:44:15.136579', 'default.user', '2019-08-27 17:44:15.136579', '44', 'authorisedUrls');

