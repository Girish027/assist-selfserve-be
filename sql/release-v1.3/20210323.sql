--agent referer fix

use self_serve;
UPDATE `action` SET `definition` = '{ \"type\": \"REST\", \"method\": \"POST\", \"headers\": { \"Referer\": \"https://test-default.portal.assist.staging.247-inc.net/en/console\", \"Content-Type\": \"application/x-www-form-urlencoded\", \"GenerateAuthToken\": \"Bearer \" }, \"serviceId\": \"assist\", \"idLookupKeys\": null, \"relativePath\": \"/en/hierarchy/rest/clients/nemo-client-${clientId}/accounts/${accountId}-account-default/agents?entityObj=${body}\", \"bodyDefinition\": {}, \"requestBodyKey\": null, \"restClientType\": null, \"idLookupRequired\": false, \"objectTranslator\": \"function translate(pageData, entityId, clientId, accountId, env, prefetch) { var uiData = JSON.parse(pageData).createUserLive_p0; var t0 = uiData.tabsField[ 0 ]; var t1 = uiData.tabsField[ 1 ]; var t2 = uiData.tabsField[ 2 ]; var roles = []; if (t0.roleId == \\\"superlead_role_id\\\") { roles.push(\\\"lead_role_id\\\", \\\"agent_role_id\\\"); } else { roles.push(t0.roleId); } var apiData = { \\\"key\\\": \\\"\\\", \\\"userName\\\": t0.userName, \\\"firstName\\\": t0.firstName, \\\"lastName\\\": t0.lastName, \\\"displayName\\\": t0.displayName, \\\"email\\\": t0.email, \\\"activeChatLimits\\\": t0.activeChatLimits, \\\"autoAcceptChats\\\": t0.autoAcceptChats, \\\"teamId\\\": t0.teamId, \\\"timezone\\\": \\\"GMT0\\\", \\\"roleIds\\\": roles, \\\"authenticationType\\\": t0.authenticationType || \\\"LOCAL_AUTH\\\", \\\"status\\\": t0.status, \\\"samlUserName\\\": \\\"\\\", \\\"skillLevels\\\": t1.ConfigMapper && t1.ConfigMapper.map(function (skill) { var skLvl = skill ? { skillId: skill.id, skillLevelId: skill.id + \\\"-\\\" + (skill.key ? skill.key.toUpperCase() : \\\"HIGH\\\") } : []; return skLvl; }) || [], \\\"monitoringTeamIds\\\": t2.ConfigMapper && t2.ConfigMapper.map(function (team) { return ({ teamId: team.id }) }) || [], \\\"metadataMap\\\": { \\\"employeeId\\\": t0.employeeId } }; if (t0.newPassword !== \\\"\\\") { apiData.newPassword = t0.newPassword; apiData.confirmPassword = t0.confirmPassword; } return JSON.stringify(apiData); }\", \"preFetchDefinition\": {} }'
WHERE (`id` = '38');

UPDATE `action` SET `definition` = '{ \"type\": \"REST\", \"method\": \"POST\", \"headers\": { \"Referer\": \"https://test-default.portal.assist.staging.247-inc.net/en/console\", \"Content-Type\": \"application/x-www-form-urlencoded\", \"GenerateAuthToken\": \"Bearer \" }, \"serviceId\": \"assist\", \"uploadFile\": false, \"idLookupKeys\": null, \"relativePath\": \"/en/hierarchy/rest/clients/nemo-client-${clientId}/accounts/${accountId}-account-default/agents?entityObj=${body}\", \"bodyDefinition\": {}, \"requestBodyKey\": null, \"restClientType\": null, \"idLookupRequired\": false, \"objectTranslator\": \"function translate(pageData, entityId, clientId, accountId, env, prefetch) { var uiData = JSON.parse(pageData).createUserTest_p0; var t0 = uiData.tabsField[ 0 ]; var t1 = uiData.tabsField[ 1 ]; var t2 = uiData.tabsField[ 2 ]; var roles = []; if (t0.roleId == \\\"superlead_role_id\\\") { roles.push(\\\"lead_role_id\\\", \\\"agent_role_id\\\"); } else { roles.push(t0.roleId); } var apiData = { \\\"key\\\": \\\"\\\", \\\"userName\\\": t0.userName, \\\"firstName\\\": t0.firstName, \\\"lastName\\\": t0.lastName, \\\"displayName\\\": t0.displayName, \\\"email\\\": t0.email, \\\"activeChatLimits\\\": t0.activeChatLimits, \\\"autoAcceptChats\\\": t0.autoAcceptChats, \\\"teamId\\\": t0.teamId, \\\"timezone\\\": \\\"GMT0\\\", \\\"roleIds\\\": roles, \\\"authenticationType\\\": t0.authenticationType || \\\"LOCAL_AUTH\\\", \\\"status\\\": t0.status, \\\"samlUserName\\\": \\\"\\\", \\\"skillLevels\\\": t1.ConfigMapper && t1.ConfigMapper.map(function (skill) { var skLvl = skill ? { skillId: skill.id, skillLevelId: skill.id + \\\"-\\\" + (skill.key ? skill.key.toUpperCase() : \\\"HIGH\\\") } : []; return skLvl; }) || [], \\\"monitoringTeamIds\\\": t2.ConfigMapper && t2.ConfigMapper.map(function (team) { return ({ teamId: team.id }) }) || [], \\\"metadataMap\\\": { \\\"employeeId\\\": t0.employeeId } }; if (t0.newPassword !== \\\"\\\") { apiData.newPassword = t0.newPassword; apiData.confirmPassword = t0.confirmPassword; } return JSON.stringify(apiData); }\", \"preFetchDefinition\": {} }' 
WHERE (`id` = '36');

UPDATE `activity_template` SET `entity_location` = '{ \"CREATE\": { \"entityIdLocation\": \"createUserTest_p0.tabsField.0.userName\", \"entityLabelLocation\": \"createUserTest_p0.tabsField.0.userName\" }, \"UPDATE\": { \"entityIdLocation\": \"updateUserTest_p0.tabsField.0.key\", \"entityLabelLocation\": \"updateUserTest_p0.tabsField.0.userName\" } }' 
WHERE (`id` = 'userTest');

UPDATE `activity_template` SET `entity_location` = '{ \"CREATE\": { \"entityIdLocation\": \"createUserLive_p0.tabsField.0.userName\", \"entityLabelLocation\": \"createUserLive_p0.tabsField.0.userName\" }, \"UPDATE\": { \"entityIdLocation\": \"updateUserLive_p0.tabsField.0.key\", \"entityLabelLocation\": \"updateUserLive_p0.tabsField.0.userName\" } }'
WHERE (`id` = 'userLive');
