USE `self_serve`;

SET FOREIGN_KEY_CHECKS=0;

UPDATE `config` SET `value` = '{\"value\": \"e2d1acc451f85921d7d6d6ba6e046d9b\" }' 
WHERE (`code` = 'cache_apikey');

UPDATE `config` SET `value` = 'listSkill,updateSmartResponse_p0'
WHERE (`code` = 'exclude_cache_fetchfor');

INSERT INTO `config` VALUES
('excluded_fetchfor_list','default.user','2020-11-03 00:34:55.000000',NULL,NULL,1,'BACKEND','{\"chathours_p0\": {\"fetchFor\":\"chathours_p0\", \"status\": [404]}}');




INSERT INTO `clients_config` VALUES
(1,'client','test-default','BLACKLISTED_GROUPS','Disabling UI access to particular groups ','[\"5\"]',0,'default.user','2021-03-22 11:30:15.129995',NULL,NULL),
(2,'client','test-default','BLACKLISTED_ACTIVITIES','Disabling UI access to particular activities ','[]',0,'default.user','2021-03-22 11:10:14.129995',NULL,NULL),
(3,'client','salesdemo','BLACKLISTED_GROUPS','Disabling UI access to particular groups ','[\"5\"]',0,'default.user','2021-03-22 11:30:15.129995',NULL,NULL),
(4,'client','salesdemo','BLACKLISTED_ACTIVITIES','Disabling UI access to particular activities ','[]',0,'default.user','2021-03-22 11:10:14.129995',NULL,NULL),
(5,'client','all','BLACKLISTED_GROUPS','Default UI access for clients to groups ','[\"1\", \"7\"]',0,'default.user','2021-03-22 11:18:14.129995',NULL,NULL),
(6,'client','all','BLACKLISTED_ACTIVITIES','Default UI access for clients to activities','[]',0,'default.user','2021-03-22 11:08:14.129995',NULL,NULL),
(7,'client','ec-training','BLACKLISTED_GROUPS','Disabling UI access to particular groups ','[\"5\"]',0,'default.user','2021-03-22 11:30:15.129995',NULL,NULL),
(8,'client','ec-training','BLACKLISTED_ACTIVITIES','Disabling UI access to particular activities ','[]',0,'default.user','2021-03-22 11:10:14.129995',NULL,NULL),
(9,'client','pedemo','BLACKLISTED_GROUPS','Disabling UI access to particular groups ','[\"5\"]',0,'default.user','2021-03-22 11:30:15.129995',NULL,NULL),
(10,'client','pedemo','BLACKLISTED_ACTIVITIES','Disabling UI access to particular activities ','[]',0,'default.user','2021-03-22 11:10:14.129995',NULL,NULL),
(11,'client','tfsinc','BLACKLISTED_GROUPS','Disabling UI access to particular groups ','[\"5\"]',0,'default.user','2021-03-22 11:30:15.129995',NULL,NULL),
(12,'client','tfsinc','BLACKLISTED_ACTIVITIES','Disabling UI access to particular activities ','[]',0,'default.user','2021-03-22 11:10:14.129995',NULL,NULL),
(13,'client','tfsinc','BLACKLISTED_GROUPS','Disabling UI access to particular groups ','[\"5\"]',0,'default.user','2021-03-22 11:30:15.129995',NULL,NULL),
(14,'client','tfsinc','BLACKLISTED_ACTIVITIES','Disabling UI access to particular activities ','[]',0,'default.user','2021-03-22 11:10:14.129995',NULL,NULL),
(15,'client','tfscorp','BLACKLISTED_GROUPS','Disabling UI access to particular groups ','[\"5\"]',0,'default.user','2021-03-22 11:30:15.129995',NULL,NULL),
(16,'client','tfscorp','BLACKLISTED_ACTIVITIES','Disabling UI access to particular activities ','[]',0,'default.user','2021-03-22 11:10:14.129995',NULL,NULL),
(17,'client','tfscustomer','BLACKLISTED_GROUPS','Disabling UI access to particular groups ','[\"5\"]',0,'default.user','2021-03-22 11:30:15.129995',NULL,NULL),
(18,'client','tfscustomer','BLACKLISTED_ACTIVITIES','Disabling UI access to particular activities ','[]',0,'default.user','2021-03-22 11:10:14.129995',NULL,NULL);




INSERT INTO `service` VALUES
('self','default.user','2019-06-13 12:11:09.000000','default.user','2019-06-13 12:11:09.000000','Self Serve ','Self Serve'),
('vcc','default.user','2020-10-15 12:11:09.000000','default.user','2020-10-15 12:11:09.000000','VCC calls','VCC');

UPDATE `service_urls` SET `headers` = '{\"GenerateAuthToken\": \"Bearer \"}' WHERE `service_id` = 'assist';

INSERT INTO `service_urls` VALUES
(11,'default.user','2019-06-13 12:13:02.000000','default.user','2019-06-13 12:13:02.000000','http://localhost:8090/self-serve/api','TEST','{}','self'),
(12,'default.user','2020-10-16 14:11:04.000000','default.user','2020-10-16 14:11:04.000000','https://api.247-inc.net','LIVE','{\"apikey\": \"UojPvBy7wy2a60fBDN9dcVHinI9W48f2\"}','vcc'),
(13,'default.user','2020-10-16 14:11:04.000000','default.user','2020-10-16 14:11:04.000000','https://staging.api.247-inc.net','TEST','{\"apikey\": \"UojPvBy7wy2a60fBDN9dcVHinI9W48f2\"}','vcc');




DELETE FROM `fetch_config_template`
WHERE id!=0;

INSERT INTO `fetch_config_template` VALUES
(1,'default.user','2019-06-13 12:24:46.000000','default.user','2019-06-13 12:24:46.000000','tags_p0','{}','{\"contexts\": [\"clientId\", \"accountId\"], \"constants\": {\"env\": \"DEV\"}}','/adminconsole/rest/tagsfile?client=${clientId}&account=${accountId}&environment=${env}','[{\"name\": \"tie.stageTag\", \"uiRespPath\": \"websiteTag.stageTag\", \"apiRespPath\": \"jsContent\"}]','JSON','PAGE_DATA_VALUE','tie'),
(2,'default.user','2019-06-13 12:24:46.000000','default.user','2019-06-13 12:24:46.000000','tags_p0','{}','{\"contexts\": [\"clientId\", \"accountId\"], \"constants\": {\"env\": \"PRODUCTION\"}}','/adminconsole/rest/tagsfile?client=${clientId}&account=${accountId}&environment=${env}','[{\"name\": \"tie.prodTag\", \"uiRespPath\": \"websiteTag.productionTag\", \"apiRespPath\": \"jsContent\"}]','JSON','PAGE_DATA_VALUE','tie'),
(3,'default.user','2019-06-13 12:24:46.000000','default.user','2019-06-13 12:24:46.000000','listQueue','{\"apikey\": \"KtbDtdYYb7EUD4oajYCM8l9Nh7L0AgEc\"}','{\"contexts\": [\"accountId\"], \"constants\": {}}','/v1/ohs/adminEntity/listByAccount?entityType=queue&accountId=${accountId}-account-default','{\"objectTranslator\": \"function translate(values){var queues={enum:[\\\"\\\"], enumNames:[\\\"Select Queue\\\"]}; var list=[]; try{values=JSON.parse(values); list=JSON.parse(values.data.list);}catch(e){return e.toString();} list.forEach(function(item){ queues.enum.push(item.entityBaseData.entityId); queues.enumNames.push(item.entityBaseData.entityDisplayName); });return JSON.stringify(queues);}\"}','JS','FIELD_OPTIONS','ohs'),
(4,'default.user','2019-06-13 12:24:46.000000','default.user','2019-06-13 12:24:46.000000','listTimezone','{}','{\"contexts\": [], \"constants\": {}}','/timezones','{\"objectTranslator\": \"function translate(values) { var timezones = { enum: [], enumNames: [] }; try { values = JSON.parse(values); if (Array.isArray(values)) { timezones.enum = values; timezones.enumNames = values; } } catch (e) { return e.toString(); }; return JSON.stringify(timezones); }\"}','JS','FIELD_OPTIONS','cobp'),
(5,'default.user','2019-06-13 12:24:46.000000','default.user','2019-06-13 12:24:46.000000','chathours_p1','{\"apikey\": \"KtbDtdYYb7EUD4oajYCM8l9Nh7L0AgEc\"}','{\"contexts\": [\"clientId\"], \"constants\": {}}','/v1/ohs/client/nemo-client-${clientId}','{\"objectTranslator\": \"function translate(values, entity){var uiData = { \\\"timezone\\\": [], \\\"queues\\\": entity.entityBaseData.entityDisplayName }; try{var apiData = JSON.parse(values); uiData.timezone = apiData.timezone||\\\"Asia/Calcutta\\\"; }catch(e){} return JSON.stringify(uiData); }\"}','JS','PAGE_DATA_VALUE','ohs'),
(6,'default.user','2019-06-13 12:24:46.000000','default.user','2019-06-13 12:24:46.000000','adf_p0','{}','{\"contexts\": [\"clientId\", \"entity\"], \"constants\": {}}','/en/rest/hierarchy/queue/${entity}/adf','{\"objectTranslator\": \"function translate(values, entity){var uiData = {\\\"adf\\\": {}, i18n: {}, \\\"queues\\\": [entity]}; try{var apiData = JSON.parse(values).data; uiData.adf = JSON.parse(apiData.dispostionFormContent); uiData.i18n=uiData.adf.i18n; }catch(e){} return JSON.stringify(uiData);}\"}','JS','PAGE_DATA_VALUE','assist'),
(7,'default.user','2019-06-13 12:24:46.000000','default.user','2019-06-13 12:24:46.000000','listTag','{\"apikey\": \"KtbDtdYYb7EUD4oajYCM8l9Nh7L0AgEc\"}','{\"contexts\": [\"accountId\"], \"constants\": {}}','/v1/ohs/adminEntity/listByAccount?entityType=tag&accountId=${accountId}-account-default','{\"objectTranslator\": \"function translate(values){var queues={enum:[], enumNames:[]}; var list=[]; try{values=JSON.parse(values); list=JSON.parse(values.data.list);}catch(e){return e.toString();} list.forEach(function(item){ queues.enum.push(item.entityBaseData.entityId); queues.enumNames.push(item.entityBaseData.entityDisplayName); }); if(list.length==0){queues.enum.push(\\\"\\\"); queues.enumNames.push(\\\"Select\\\");} return JSON.stringify(queues);}\"}','JS','FIELD_OPTIONS','ohs'),
(8,'default.user','2019-06-13 12:24:46.000000','default.user','2019-06-13 12:24:46.000000','listTeam','{\"apikey\": \"KtbDtdYYb7EUD4oajYCM8l9Nh7L0AgEc\"}','{\"contexts\": [\"accountId\"], \"constants\": {}}','/v1/ohs/adminEntity/listByAccount?entityType=team&accountId=${accountId}-account-default','{\"objectTranslator\": \"function translate(values){var teams={enum:[\\\"\\\"], enumNames:[\\\"Select Team\\\"]}; var list=[]; try{values=JSON.parse(values); list=JSON.parse(values.data.list); list.forEach(function(item){ teams.enum.push(item.entityBaseData.entityId);teams.enumNames.push(item.entityBaseData.entityDisplayName); }); }catch(e){} return JSON.stringify(teams);}\"}','JS','FIELD_OPTIONS','ohs'),
(9,'default.user','2019-06-13 12:24:46.000000','default.user','2019-06-13 12:24:46.000000','updateTeams_p0','{\"apikey\": \"KtbDtdYYb7EUD4oajYCM8l9Nh7L0AgEc\"}','{\"contexts\": [\"entity\"], \"constants\": {}}','/v1/ohs/adminEntity/get?entityId=${entity}&entityType=team','{\"objectTranslator\": \"function translate(values){values=JSON.parse(JSON.parse(values).data.entity); var uiData = {}; uiData.teamId=values.entityBaseData.entityId; uiData.teamName=values.entityBaseData.entityDisplayName; var tags = values.entityAttributes.tags; uiData.teamTags=tags.length>0?values.entityAttributes.tags.split(\\\",\\\"):[]; return JSON.stringify(uiData);}\"}','JS','PAGE_DATA_VALUE','ohs'),
(10,'default.user','2019-06-13 12:24:46.000000','default.user','2019-06-13 12:24:46.000000','listSkill','{}','{\"contexts\": [\"clientId\", \"accountId\"], \"constants\": {}}','/en/admin/rest/ohs/listByAccount?entityType=skill&accountId=${accountId}-account-default','{\"objectTranslator\": \"function translate(values){var entities={enum:[\\\"\\\"], enumNames:[\\\"Select\\\"]}; var list=[]; try{values=JSON.parse(values); list=JSON.parse(values.data.list);}catch(e){return e.toString();} list.forEach(function(item){ entities.enum.push(item.entityBaseData.entityId); entities.enumNames.push(item.entityBaseData.entityDisplayName||item.entityBaseData.entityId); }); return JSON.stringify(entities);}\"}','JS','FIELD_OPTIONS','assist'),
(11,'default.user','2019-06-13 12:24:46.000000','default.user','2019-06-13 12:24:46.000000','updateQueues_p0','{\"apikey\": \"KtbDtdYYb7EUD4oajYCM8l9Nh7L0AgEc\"}','{\"contexts\": [\"entity\"], \"constants\": {}}','/v1/ohs/adminEntity/get?entityType=queue&entityId=${entity}','{\"objectTranslator\": \"function translate(apiData) { var val = JSON.parse(JSON.parse(apiData).data.entity); var ea = val.entityAttributes; var ebd = val.entityBaseData; var uiData = { \\\"tabsField\\\": [ { \\\"queueList\\\": ebd.entityId, \\\"queueName\\\": ebd.entityDisplayName, \\\"queueId\\\": ebd.entityId, \\\"queueDesc\\\": ea.queueDesc, \\\"queueTags\\\": [] }, { \\\"assistConfig\\\": { \\\"queueType\\\": ea.queueType } } ] }; if (ea.tags && ea.tags.split(\\\",\\\") !== \\\"\\\") { uiData.tabsField[0].queueTags = ea.tags.split(\\\",\\\"); } return JSON.stringify(uiData); } \"}','JS','PAGE_DATA_VALUE','ohs'),
(12,'default.user','2019-06-13 12:24:46.000000','default.user','2019-06-13 12:24:46.000000','updateQueues_p0','{}','{\"contexts\": [\"clientId\", \"entity\"], \"constants\": {}}','/en/admin/rest/ohs/get?entityId=${entity}&entityType=chatQueue','{\"objectTranslator\": \"function translate(apiData, entity) { var val = JSON.parse(JSON.parse(apiData).data.entity); var ea = val.entityAttributes; var ebd = val.entityBaseData; var uiData = { \\\"tabsField\\\": [ {}, { \\\"assistConfig\\\": { \\\"useStandardWrapUp\\\": ea.isStandardWrapUpRequired? ea.isStandardWrapUpRequired.toString(): \\\"false\\\", \\\"skill\\\": [], \\\"queueTimeOut\\\": Number(ea.queueTimeOut), \\\"queueLength\\\": Number(ea.queueLength), \\\"routeOn\\\": ea.resourceFree, \\\"agentAffinityPeriod\\\": Number(ea.agentAffinityPeriod), \\\"conversationalInterval\\\": Number(ea.conversationalInterval), \\\"visitorInactivity\\\": Number(ea.visitorInactivityPeriod), \\\"agentResponse\\\": Number(ea.agentResponseTime), \\\"typingEnabled\\\": ea.typingEnabled ? ea.typingEnabled.toString() : \\\"false\\\", \\\"typingTimeout\\\": Number(ea.typingTimeout), \\\"isAccountQueue\\\": ea.isAccountQueue ? ea.isAccountQueue.toString(): \\\"false\\\", \\\"fileTransfer\\\": { \\\"FTVisitor\\\": ea.agentFTShare }, \\\"mailer\\\": { \\\"visitorConfig\\\": isUndefinedOrNull(ea.visitorMailerConfigKey), \\\"agentConfig\\\": isUndefinedOrNull(ea.agentMailerConfigKey) }, \\\"coBrowse\\\": { \\\"coBrowseEnabled\\\": ea.coBrowseEnabled ? ea.coBrowseEnabled.toString() : \\\"false\\\", \\\"coViewEnabled\\\": ea.coViewEnabled ? ea.coViewEnabled.toString() : \\\"false\\\" }, \\\"crmIntg\\\": { \\\"crmScriptContent\\\": ea.crmScriptContent, \\\"crmLaunchBtn\\\": ea.crmDisplayText, \\\"crmAppId\\\": ea.crmAppId }, \\\"interLob\\\": { \\\"outboundLob\\\": ea.isOutboundLOBQueueTransferEnabled ? ea.isOutboundLOBQueueTransferEnabled.toString() : \\\"false\\\", \\\"acceptInterLob\\\": ea.interLOBEnabled ? ea.interLOBEnabled.toString() : \\\"false\\\" } } } ] }; if (ea.skill && ea.skill.split(\\\",\\\") !== \\\"\\\") { uiData.tabsField[1].assistConfig.skill = ea.skill.split(\\\",\\\"); }; return JSON.stringify(uiData); } function isUndefinedOrNull(obj) { if (obj === undefined || obj === null || obj === \\\"null\\\" || obj === NaN) { return undefined; } else return obj; }\"}','JS','PAGE_DATA_VALUE','assist'),
(13,'default.user','2019-06-13 12:24:46.000000','default.user','2019-06-13 12:24:46.000000','mailerConfigKey','{}','{\"contexts\": [\"clientId\", \"accountId\"], \"constants\": {}}','/en/admin/rest/ohs/listByAccount?entityType=mailerConfigKey&accountId=${accountId}-account-default','{\"objectTranslator\": \"function translate(values){var mailerConfigKeys={enum:[], enumNames:[]}; var list=[]; try{values=JSON.parse(values); list=JSON.parse(values.data.list); list.forEach(function(item){ mailerConfigKeys.enum.push(item.entityBaseData.entityId); mailerConfigKeys.enumNames.push(item.entityBaseData.entityDisplayName); }); }catch(e){} return JSON.stringify(mailerConfigKeys);}\"}','JS','FIELD_OPTIONS','assist'),
(14,'default.user','2019-06-13 12:24:46.000000','default.user','2019-06-13 12:24:46.000000','resourceFree','{}','{\"contexts\": [\"clientId\", \"accountId\"], \"constants\": {}}','/en/admin/rest/ohs/listByAccount?entityType=resourceFree&accountId=${accountId}-account-default','{\"objectTranslator\": \"function translate(values){var resourceFree={enum:[], enumNames:[]}; var list=[]; try{values=JSON.parse(values); list=JSON.parse(values.data.list); list.forEach(function(item){ resourceFree.enum.push(item.entityBaseData.entityId);resourceFree.enumNames.push(item.entityBaseData.entityDisplayName); }); }catch(e){} return JSON.stringify(resourceFree);}\"}','JS','FIELD_OPTIONS','assist'),
(16,'default.user','2019-06-13 12:24:46.000000','default.user','2019-06-13 12:24:46.000000','listQueue','{\"apikey\": \"KtbDtdYYb7EUD4oajYCM8l9Nh7L0AgEc\"}','{\"contexts\": [\"accountId\"], \"constants\": {}}','/v1/ohs/adminEntity/listByAccount?entityType=queue&accountId=${accountId}-account-default','{\"objectTranslator\": \"function translate(values){var entities=[]; var list=[]; try{values=JSON.parse(values); list=JSON.parse(values.data.list);  list.forEach(function(item){ entities.push({name:item.entityBaseData.entityId, label: item.entityBaseData.entityDisplayName}); }); }catch(e){}return JSON.stringify(entities);}\"}','JS','ENTITY_LISTING','ohs'),
(17,'default.user','2019-06-13 12:24:46.000000','default.user','2019-06-13 12:24:46.000000','listTeam','{\"apikey\": \"KtbDtdYYb7EUD4oajYCM8l9Nh7L0AgEc\"}','{\"contexts\": [\"accountId\"], \"constants\": {}}','/v1/ohs/adminEntity/listByAccount?entityType=team&accountId=${accountId}-account-default','{\"objectTranslator\": \"function translate(values){var entities=[]; var list=[]; try{values=JSON.parse(values); list=JSON.parse(values.data.list);  list.forEach(function(item){ entities.push({name:item.entityBaseData.entityId, label: item.entityBaseData.entityDisplayName}); }); }catch(e){}return JSON.stringify(entities);}\"}','JS','ENTITY_LISTING','ohs'),
(18,'default.user','2019-06-13 12:24:46.000000','default.user','2019-06-13 12:24:46.000000','updateSkill_p0','{}','{\"contexts\": [\"clientId\", \"entity\"], \"constants\": {}}','/en/admin/rest/ohs/get?entityId=${entity}&entityType=skill','{\"objectTranslator\": \"function translate(apiData){var val=JSON.parse(JSON.parse(apiData).data.entity);var configMapper=JSON.parse(val.entityAttributes.users);var users=[];users=configMapper.map(function(item){var keywords=item.skillLevelId.split(\\\"-\\\");var key=keywords[keywords.length-1].toLowerCase();return({id:item.userId,name:item.userId,key:key})});var uiData={skillName:val.entityBaseData.entityDisplayName,skillId:val.entityBaseData.entityId,skillDesc:val.entityAttributes.skillDesc,ConfigMapper:users};return JSON.stringify(uiData)}\"}','JS','PAGE_DATA_VALUE','assist'),
(19,'default.user','2019-06-13 12:24:46.000000','default.user','2019-06-13 12:24:46.000000','listSkill','{}','{\"contexts\": [\"clientId\", \"accountId\"], \"constants\": {}}','/en/admin/rest/ohs/listByAccount?entityType=skill&accountId=${accountId}-account-default','{\"objectTranslator\": \"function translate(values){var entities=[]; var list=[]; try{values=JSON.parse(values); list=JSON.parse(values.data.list);  list.forEach(function(item){ entities.push({name:item.entityBaseData.entityId, label: item.entityBaseData.entityDisplayName}); }); }catch(e){}return JSON.stringify(entities);}\"}','JS','ENTITY_LISTING','assist'),
(20,'default.user','2019-06-13 12:24:46.000000','default.user','2019-06-13 12:24:46.000000','listUser','{}','{\"contexts\": [\"clientId\", \"accountId\"], \"constants\": {}}','/en/admin/rest/ohs/listByAccount?entityType=chatUser&accountId=${accountId}-account-default','{\"objectTranslator\": \"function translate(values){var users={enum:[], enumNames:[]}; var list=[]; try{values=JSON.parse(values); list=JSON.parse(values.data.list); list.forEach(function(item){ users.enum.push(item.entityBaseData.entityId); users.enumNames.push(item.entityBaseData.entityDisplayName||item.entityBaseData.entityId); }); }catch(e){} return JSON.stringify(users);}\"}','JS','FIELD_OPTIONS','assist'),
(21,'default.user','2019-06-13 12:24:46.000000','default.user','2019-06-13 12:24:46.000000','chathours_p0','{\"apikey\": \"KtbDtdYYb7EUD4oajYCM8l9Nh7L0AgEc\"}','{\"contexts\": [\"clientId\", \"accountId\", \"entity\"], \"constants\": {}}','/v1/ohs/client/${clientId}/account/${accountId}/queue/${entity}/hoop','{\"objectTranslator\": \"function translate(values, entity) { var weekdays = { \\\"sunday\\\": 0, \\\"monday\\\": 1, \\\"tuesday\\\": 2, \\\"wednesday\\\": 3, \\\"thursday\\\": 4, \\\"friday\\\": 5, \\\"saturday\\\": 6 }; var uiData = { \\\"timezone\\\": [], \\\"weekdays\\\": { \\\"supportweekdays\\\": [ { \\\"openAllDay\\\": false, \\\"slots\\\": [] }, { \\\"openAllDay\\\": false, \\\"slots\\\": [] }, { \\\"openAllDay\\\": false, \\\"slots\\\": [] }, { \\\"openAllDay\\\": false, \\\"slots\\\": [] }, { \\\"openAllDay\\\": false, \\\"slots\\\": [] }, { \\\"openAllDay\\\": false, \\\"slots\\\": [] }, { \\\"openAllDay\\\": false, \\\"slots\\\": [] } ], }, \\\"exceptions\\\": { \\\"supportexceptionsSection\\\": { \\\"supportexceptions\\\": [] } } }; try { var apiData = JSON.parse(values); uiData.timezone = apiData.timeZone || \\\"Asia/Calcutta\\\"; for (var i = 0; i < apiData.operationalHours.length; i++) { var opHr = apiData.operationalHours[i]; var openAllDay = false; if (opHr.shifts[0].start == \\\"0001\\\" && opHr.shifts[0].end == \\\"2359\\\") { openAllDay = true; } else if (opHr.shifts[0 ].end == \\\"2359\\\") { opHr.shifts[ 0].end = \\\"0000\\\"; } var slots = []; if (!openAllDay) { for (var k = 0; k < opHr.shifts.length; k++) { var shift = opHr.shifts[k ]; shift.start = shift.start.substring(0, 2) + \\\":\\\" + shift.start.substring(2, 4); shift.end = shift.end.substring(0, 2) + \\\":\\\" + shift.end.substring(2, 4); slots.push(shift); } } for (var j = 0; j < opHr.days.length; j++) { var day = opHr.days[j]; var dayData = { \\\"openAllDay\\\": openAllDay, \\\"slots\\\": slots }; uiData.weekdays.supportweekdays[weekdays[day]] = dayData; } } if (apiData.exceptions) { for (var i = 0; i < apiData.exceptions.length; i++) { var opHr = apiData.exceptions[i ]; var openAllDay = false; if (opHr.shifts[ 0 ].start == \\\"0001\\\" && opHr.shifts[ 0 ].end == \\\"2359\\\") { openAllDay = true; } else if (opHr.shifts[ 0 ].end == \\\"2359\\\") { opHr.shifts[ 0 ].end = \\\"0000\\\"; } var slots = []; if (!openAllDay) { for (var k = 0; k < opHr.shifts.length; k++) { var shift = opHr.shifts[k ]; shift.start = shift.start.substring(0, 2) + \\\":\\\" + shift.start.substring(2, 4); shift.end = shift.end.substring(0, 2) + \\\":\\\" + shift.end.substring(2, 4); slots.push(shift); } } for (var j = 0; j < opHr.days.length; j++) { var dayData = { \\\"date\\\": opHr.days[j ], \\\"openAllDay\\\": openAllDay, \\\"slots\\\": slots }; uiData.exceptions.supportexceptionsSection.supportexceptions.push(dayData); } } } if (apiData.holidays) { var holidays = apiData.holidays; for( var i =0; i<holidays.length; i++) { var dayData = { \\\"date\\\": holidays[i], \\\"openAllDay\\\": false, \\\"slots\\\": [] }; uiData.exceptions.supportexceptionsSection.supportexceptions.push(dayData); } } } catch (e) { } return JSON.stringify(uiData); }\"}','JS','PAGE_DATA_VALUE','ohs'),
(22,'default.user','2019-06-13 12:24:46.000000','default.user','2019-06-13 12:24:46.000000','listTag','{\"apikey\": \"KtbDtdYYb7EUD4oajYCM8l9Nh7L0AgEc\"}','{\"contexts\": [\"accountId\"], \"constants\": {}}','/v1/ohs/adminEntity/listByAccount?entityType=tag&accountId=${accountId}-account-default','{\"objectTranslator\": \"function translate(values){var entities=[]; var list=[]; try{values=JSON.parse(values); list=JSON.parse(values.data.list);  list.forEach(function(item){ entities.push({name:item.entityBaseData.entityId, label: item.entityBaseData.entityDisplayName}); }); }catch(e){}return JSON.stringify(entities);}\"}','JS','ENTITY_LISTING','ohs'),
(23,'default.user','2019-06-13 12:24:46.000000','default.user','2019-06-13 12:24:46.000000','updateTags_p0','{\"apikey\": \"KtbDtdYYb7EUD4oajYCM8l9Nh7L0AgEc\"}','{\"contexts\": [\"entity\"], \"constants\": {}}','/v1/ohs/adminEntity/get?entityId=${entity}&entityType=tag','{\"objectTranslator\": \"function translate(values) { values = JSON.parse(JSON.parse(values).data.entity); var uiData = {}; uiData.tagId = values.entityBaseData.entityId; uiData.tagName = values.entityAttributes.tagName; uiData.tagType = values.entityAttributes.tagType; return JSON.stringify(uiData); }\"}','JS','PAGE_DATA_VALUE','ohs'),
(24,'default.user','2019-06-13 12:24:46.000000','default.user','2019-06-13 12:24:46.000000','STATest_p0','{}','{\"contexts\": [\"clientId\", \"entity\"], \"constants\": {}}','/en/admin/rest/ohs/get?entityId=${entity}&entityType=skill','{\"objectTranslator\": \"function translate(apiData) { try{ var val = JSON.parse(JSON.parse(apiData).data.entity); var configMapper = JSON.parse(val.entityAttributes.users); var users = []; users = configMapper.map(function (item) { var keywords = item.skillLevelId.split(\\\"-\\\"); var key = keywords[keywords.length - 1 ].toUpperCase(); return ({ id: item.userId, name: item.userId, key: key })}); var uiData = {\\\"skillId\\\": val.entityBaseData.entityId, \\\"skillName\\\": val.entityBaseData.entityDisplayName, \\\"skillDesc\\\": val.entityAttributes.skillDesc, \\\"ConfigMapper\\\":users }; return JSON.stringify(uiData); } catch (e) {} return null; }\"}','JS','PAGE_DATA_VALUE','assist'),
(25,'default.user','2019-06-13 12:24:46.000000','default.user','2019-06-13 12:24:46.000000','STALive_p0','{}','{\"contexts\": [\"clientId\", \"entity\"], \"constants\": {}}','/en/admin/rest/ohs/get?entityId=${entity}&entityType=skill','{\"objectTranslator\": \"function translate(apiData) { try{ var val = JSON.parse(JSON.parse(apiData).data.entity); var configMapper = JSON.parse(val.entityAttributes.users); var users = []; users = configMapper.map(function (item) { var keywords = item.skillLevelId.split(\\\"-\\\"); var key = keywords[keywords.length - 1 ].toUpperCase(); return ({ id: item.userId, name: item.userId, key: key })}); var uiData = {\\\"skillId\\\": val.entityBaseData.entityId, \\\"skillName\\\": val.entityBaseData.entityDisplayName, \\\"skillDesc\\\": val.entityAttributes.skillDesc, \\\"ConfigMapper\\\":users }; return JSON.stringify(uiData); } catch (e) {} return null; }\"}','JS','PAGE_DATA_VALUE','assist'),
(26,'default.user','2019-06-13 12:24:46.000000','default.user','2019-06-13 12:24:46.000000','msgQueue','{\"apikey\": \"KtbDtdYYb7EUD4oajYCM8l9Nh7L0AgEc\"}','{\"contexts\": [\"accountId\"], \"constants\": {}}','/v1/ohs/adminEntity/listByAccount?entityType=queue&accountId=${accountId}-account-default','{\"objectTranslator\": \"function translate(values){var entities=[]; var list=[]; try{values=JSON.parse(values); list=JSON.parse(values.data.list); list.forEach(function(item){if(item.entityAttributes.queueType && item.entityAttributes.queueType.toLocaleUpperCase() == \\\"MESSAGING\\\"){entities.push({name:item.entityBaseData.entityId, label: item.entityBaseData.entityDisplayName}); }});}catch(e){}return JSON.stringify(entities);}\"}','JS','ENTITY_LISTING','ohs'),
(27,'default.user','2019-06-13 12:24:46.000000','default.user','2019-06-13 12:24:46.000000','chathours_p0','{\"apikey\": \"KtbDtdYYb7EUD4oajYCM8l9Nh7L0AgEc\"}','{\"contexts\": [\"entity\"], \"constants\": {}}','/v1/ohs/adminEntity/get?entityType=queue&entityId=${entity}','{\"objectTranslator\": \"function translate(apiData) { var uiData = { \\\"queues\\\": \\\"\\\", \\\"queueName\\\": \\\"\\\" }; try { var val = JSON.parse(JSON.parse(apiData).data.entity); uiData.queueName = val.entityBaseData.entityDisplayName; uiData.queues = val.entityBaseData.entityId; } catch (e) { } return JSON.stringify(uiData); }\"}','JS','PAGE_DATA_VALUE','ohs'),
(28,'default.user','2019-06-13 12:24:46.000000','default.user','2019-06-13 12:24:46.000000','updateQueues_p0','{}','{\"contexts\": [\"clientId\", \"entity\"], \"constants\": {}}','/en/rest/hierarchy/queue/${entity}/adf?responseContent=application/html','{\"objectTranslator\": \"function translate(values, entity) { var uiData = { \\\"tabsField\\\": [ {},{ \\\"assistConfig\\\": {} } ] }; var apiData = {\\\"dispostionFormContent\\\": \\\"\\\"}; try {  apiData = JSON.parse(values).data; } catch(e) {} uiData.tabsField[ 1 ].assistConfig.dispositionForm = apiData.dispostionFormContent; return JSON.stringify(uiData); }\"}','JS','PAGE_DATA_VALUE','assist'),
(29,'default.user','2019-06-13 12:24:46.000000','default.user','2019-06-13 12:24:46.000000','passwordPolicy_p0','{\"GenerateAuthToken\": \"Bearer \"}','{\"contexts\": [\"clientId\", \"accountId\", \"entity\"], \"constants\": {}}','/en/hierarchy/rest/clients/nemo-client-${clientId}/accounts/${accountId}-account-default/authpolicy','{\"objectTranslator\": \"function translate(apiData) { var uiData = {\\\"configs\\\": {}}; var configs = { \\\"prevPwd\\\": 0, \\\"pwdLength\\\": 0, \\\"pwdExpiry\\\": 0, \\\"pwdAttempts\\\": 0 };  var items = JSON.parse(apiData).data.items; configs.prevPwd = getConfig(items, \\\"historyLength\\\"); configs.pwdLength = getConfig(items, \\\"passwordLength\\\"); configs.pwdExpiry = getConfig(items, \\\"expiryDays\\\"); configs.pwdAttempts = getConfig(items, \\\"retryCount\\\"); uiData.configs = configs; return JSON.stringify(uiData); } function getConfig(items, key) { var config = null; items.forEach(function(item){if(item.configKey==key){ config = item; }}); return config.configValue;}\"}','JS','PAGE_DATA_VALUE','assist'),
(30,'default.user','2019-06-13 12:24:46.000000','default.user','2019-06-13 12:24:46.000000','listPasswordPolicy','{\"GenerateAuthToken\": \"Bearer \"}','{\"contexts\": [\"clientId\", \"accountId\", \"entity\"], \"constants\": {}}','/en/hierarchy/rest/clients/nemo-client-${clientId}/accounts/${accountId}-account-default/authpolicy','{\"objectTranslator\": \"function translate(apiData) { var uiData = [];  uiData = JSON.parse(apiData).data.items; return JSON.stringify(uiData); }\"}','JS','PAGE_DATA_VALUE','assist'),
(31,'default.user','2019-06-13 12:24:46.000000','default.user','2019-06-13 12:24:46.000000','createLeadConsole_p0','{}','{\"contexts\": [\"accountId\"], \"constants\": {}}','/actuator/health','{\"objectTranslator\": \"function translate(values, entity, context) { try { context  = JSON.parse(context); var uiData = { \\\"accountId\\\": context.accountId }; } catch (e) {} return JSON.stringify(uiData); }\"}','JS','PAGE_DATA_VALUE','self'),
(32,'default.user','2019-06-13 12:24:46.000000','default.user','2019-06-13 12:24:46.000000','updateLeadConsole_p0','{}','{\"contexts\": [\"accountId\"], \"constants\": {}}','/actuator/health','{\"objectTranslator\": \"function translate(values, entity, context) { try { context  = JSON.parse(context); var uiData = { \\\"accountId\\\": context.accountId }; } catch (e) {} return JSON.stringify(uiData); }\"}','JS','PAGE_DATA_VALUE','self'),
(33,'default.user','2020-10-15 12:24:56.000000','default.user','2020-10-15 12:24:56.000000','listActiveCards','{\"GenerateAuthToken\": \"Bearer \"}','{\"contexts\": [\"clientId\", \"accountId\"], \"constants\": {}}','/en/hierarchy/rest/clients/nemo-client-${clientId}/accounts/${accountId}-account-default/smartcommand','{\"objectTranslator\": \"function translate(values){ values = JSON.parse(values); var items = values.data.items; var entities = []; try{items.forEach(function(item){if(item.commandName.indexOf(\'/f\') !== -1){entities.push({name:item.key, label:item.commandName.replace(\'/f \', \'\')});} }) }catch(e){}return JSON.stringify(entities); }\"}','JS','ENTITY_LISTING','assist'),
(34,'default.user','2020-10-15 12:24:56.000000','default.user','2020-10-15 12:24:56.000000','listActiveCardsFromVCC','{\"apikey\": \"OTRGkEIX1eZGwM75Gs5pYdDnBQ40V7et\"}','{\"contexts\": [\"clientId\", \"accountId\"], \"constants\": {}}','/crs/v1/clients/${clientId}/accounts/${accountId}/activecards/meta?view=live&channel=CHAT','{\"objectTranslator\": \"function translate(values){values = JSON.parse(values);var card={enum:[\\\"\\\"], enumNames:[\\\"Select Card\\\"]};values.forEach(function(item){ card.enum.push(item.artifactName); card.enumNames.push(item.artifactName); });return JSON.stringify(card);}\"}','JS','FIELD_OPTIONS','vcc'),
(35,'default.user','2020-10-15 12:24:56.000000','default.user','2020-10-15 12:24:56.000000','updateActiveCards_p0','{\"GenerateAuthToken\": \"Bearer \"}','{\"contexts\": [\"clientId\", \"accountId\", \"entity\"], \"constants\": {}}','/en/hierarchy/rest/clients/nemo-client-${clientId}/accounts/${accountId}-account-default/smartcommand/${entity}','{\"objectTranslator\": \"function translate(values){values = JSON.parse(values); var items = values.items; items.commandName =items.commandName.replace(\'/f \', \'\');items.enabled =items.enabled.toString();return JSON.stringify(items)}\"}','JS','PAGE_DATA_VALUE','assist'),
(36,'default.user','2019-06-13 12:24:46.000000','default.user','2019-06-13 12:24:46.000000','listProperty','{\"GenerateAuthToken\": \"Bearer \"}','{\"contexts\": [\"clientId\", \"accountId\"], \"constants\": {}}','/en/hierarchy/rest/clients/nemo-client-${clientId}/accounts/${accountId}-account-default/propertyconfiguration','{\"objectTranslator\": \"function translate(values){ values = JSON.parse(values); var items = values.data.items; var entities = []; try{items.forEach(function(item){entities.push({name:item.key, label:item.varName, secondaryLabel: item.varType,secondaryLabelState: item.varType}); }) }catch(e){ }return JSON.stringify(entities); }\"}','JS','ENTITY_LISTING','assist'),
(37,'default.user','2019-06-13 12:24:46.000000','default.user','2019-06-13 12:24:46.000000','updatePropertyConfig_p0','{\"GenerateAuthToken\": \"Bearer \"}','{\"contexts\": [\"clientId\", \"accountId\", \"entity\"], \"constants\": {}}','/en/hierarchy/rest/clients/nemo-client-${clientId}/accounts/${accountId}-account-default/propertyconfiguration/${entity}','{\"objectTranslator\": \"function translate(values){values = JSON.parse(values); values.scope = {} ;if(values.scopeType === \'queue\'){values.scope.queueScope = values.scopeId;}else{values.scope.accountId=values.scopeId;} values.scope.scopeType = values.scopeType;values.propertyType = values.varGroup;values.order = values.order.toString(); values.editableFlag = values.editableFlag.toString(); values.mandatoryFlag = values.mandatoryFlag.toString(); values.maskableFlag =values.maskableFlag.toString();if( values.validatorId !== undefined){values.propertyType = values.validatorId;}else{values.propertyType = \'\';}; return JSON.stringify(values)}\"}','JS','PAGE_DATA_VALUE','assist'),
(38,'default.user','2019-06-13 12:24:46.000000','default.user','2019-06-13 12:24:46.000000','listPropertyValidations','{\"GenerateAuthToken\": \"Bearer \"}','{\"contexts\": [\"clientId\", \"accountId\"], \"constants\": {}}','/en/hierarchy/rest/clients/nemo-client-${clientId}/accounts/${accountId}-account-default/validator','{\"objectTranslator\": \"function translate(values){values = JSON.parse(values).data.items;var validator={enum:[\\\"\\\"], enumNames:[\\\"Select\\\"]};values.forEach(function(item){ validator.enum.push(item.key); validator.enumNames.push(item.validatorName); });return JSON.stringify(validator);}\"}','JS','FIELD_OPTIONS','assist'),
(39,'default.user','2019-06-13 12:24:46.000000','default.user','2019-06-13 12:24:46.000000','updateMaskingPatterns_p0','{\"GenerateAuthToken\": \"Bearer \"}','{\"contexts\": [\"clientId\", \"accountId\", \"entity\"], \"constants\": {}}','/en/hierarchy/rest/clients/nemo-client-${clientId}/accounts/${accountId}-account-default/messagepolicy/${entity}','{\"objectTranslator\": \"function translate(values){values = JSON.parse(values)[0];if(values.scopeType === \'queue\'){values.queueScope = values.scopeId;}else{values.accountScope = values.accountId;} values.enabled = values.enabled.toString();return JSON.stringify(values)}\"}','JS','PAGE_DATA_VALUE','assist'),
(40,'default.user','2019-06-13 12:24:46.000000','default.user','2019-06-13 12:24:46.000000','listDataMaskingPattern','{\"GenerateAuthToken\": \"Bearer \"}','{\"contexts\": [\"clientId\", \"accountId\"], \"constants\": {}}','/en/hierarchy/rest/clients/nemo-client-${clientId}/accounts/${accountId}-account-default/messagepolicy','{\"objectTranslator\": \"function translate(values){ values = JSON.parse(values); var items = values.data.items; var entities = []; items.forEach(function(item){entities.push({name:item.key, label:item.piiMaskName});} ); return JSON.stringify(entities); }\"}','JS','ENTITY_LISTING','assist'),
(41,'default.user','2019-06-13 12:24:46.000000','default.user','2019-06-13 12:24:46.000000','createPropertyConfig_p0','{}','{\"contexts\": [\"accountId\"], \"constants\": {}}','/actuator/health','{\"objectTranslator\": \"function translate(values, entity, context) {context  = JSON.parse(context); var uiData ={}; uiData.accountId = context.accountId+\\\"-account-default\\\"; return JSON.stringify(uiData); }\"}','JS','PAGE_DATA_VALUE','self'),
(42,'default.user','2019-06-13 12:24:46.000000','default.user','2019-06-13 12:24:46.000000','updateQueues_p0','{\"GenerateAuthToken\": \"Bearer \"}','{\"contexts\": [\"clientId\", \"accountId\", \"entity\"], \"constants\": {}}','/en/hierarchy/rest/clients/nemo-client-${clientId}/accounts/${accountId}-account-default/invitemanagement/${entity}','{\"objectTranslator\": \"function translate(values) { values = JSON.parse(values)[0]; var uiData = { \\\"tabsField\\\": [ {}, { \\\"assistConfig\\\": { \\\"inviteMgmt\\\": { \\\"expiryInterval\\\": values.expiryInterval, \\\"invites\\\": Number(values.acceptanceRate), \\\"safetyfactor\\\": values.safetyfactor, \\\"caModelType\\\": \\\"INVITE_MODEL\\\", \\\"key\\\": values.key } } } ] }; return JSON.stringify(uiData);}\"}','JS','PAGE_DATA_VALUE','assist'),
(43,'default.user','2019-06-13 12:24:46.000000','default.user','2019-06-13 12:24:46.000000','createMaskingPatterns_p0','{}','{\"contexts\": [\"accountId\"], \"constants\": {}}','/actuator/health','{\"objectTranslator\": \"function translate(values, entity, context) {context  = JSON.parse(context); var uiData ={}; uiData.accountId = context.accountId+\\\"-account-default\\\"; return JSON.stringify(uiData); }\"}','JS','PAGE_DATA_VALUE','self'),
(44,'default.user','2019-06-13 12:24:46.000000','default.user','2019-06-13 12:24:46.000000','listLeadReset','{\"GenerateAuthToken\": \"Bearer \"}','{\"contexts\": [\"clientId\", \"accountId\"], \"constants\": {}}','/en/hierarchy/rest/clients/nemo-client-${clientId}/accounts/${accountId}-account-default/monitoringconfig','{\"objectTranslator\": \"function translate(values) {values = JSON.parse(values); var items = values.data.items; var entities = []; try { items.forEach(function(item) { entities.push({ name: item.key, label: item.applicationValue }); }) } catch (e) {} return JSON.stringify(entities); }\"}','JS','ENTITY_LISTING','assist'),
(45,'default.user','2019-06-13 12:24:46.000000','default.user','2019-06-13 12:24:46.000000','updateLeadConsole_p0','{\"GenerateAuthToken\": \"Bearer \"}','{\"contexts\": [\"clientId\", \"accountId\", \"entity\"], \"constants\": {}}','/en/hierarchy/rest/clients/nemo-client-${clientId}/accounts/${accountId}-account-default/monitoringconfig/${entity}','{\"objectTranslator\": \"function translate(values) { values = JSON.parse(values)[0];var uiData = { \\\"key\\\": values.key, \\\"time\\\":{ \\\"hours\\\": values.hours, \\\"minutes\\\": values.minutes, \\\"meridian\\\": values.meridiem },\\\"applicationValue\\\": values.applicationValue}; return JSON.stringify(uiData); }\"}','JS','PAGE_DATA_VALUE','assist'),
(46,'default.user','2019-06-13 12:24:46.000000','default.user','2019-06-13 12:24:46.000000','listMailerConfig','{\"GenerateAuthToken\": \"Bearer \"}','{\"contexts\": [\"clientId\", \"accountId\"], \"constants\": {}}','/en/hierarchy/rest/clients/nemo-client-${clientId}/accounts/${accountId}-account-default/mailerconfig','{\"objectTranslator\": \"function translate(values){ values = JSON.parse(values); var items = values.data.items; var entities = []; items.forEach(function(item){entities.push({name:item.key, label:item.configKey});} ) ;return JSON.stringify(entities); }\"}','JS','ENTITY_LISTING','assist'),
(47,'default.user','2019-06-13 12:24:46.000000','default.user','2019-06-13 12:24:46.000000','updateMailer_p0','{\"GenerateAuthToken\": \"Bearer \"}','{\"contexts\": [\"clientId\", \"accountId\", \"entity\"], \"constants\": {}}','/en/hierarchy/rest/clients/nemo-client-${clientId}/accounts/${accountId}-account-default/mailerconfig/${entity}','{\"objectTranslator\": \"function translate(values) { values = JSON.parse(values)[0]; var uiData = {}; var mailConfigAccordionTabs = {}; mailConfigAccordionTabs.isSsl = values.isSSL.toString(); mailConfigAccordionTabs.key = values.key; mailConfigAccordionTabs.bccEmail = values.bccId; mailConfigAccordionTabs.fromName = values.fromName; mailConfigAccordionTabs.smtpPort = values.smtpPort; mailConfigAccordionTabs.smtpHost = values.smtpHost; mailConfigAccordionTabs.configKey = values.configKey; mailConfigAccordionTabs.debugEnable = values.debugEnabled.toString(); mailConfigAccordionTabs.fromEmailId = values.fromEmail; mailConfigAccordionTabs.mailSubject = values.mailSubject; mailConfigAccordionTabs.fromPassword = values.fromPassword; var tabsField = [];  var baseConfigurationAccordionTabs = []; var themeObj = {}; if (values.templateConfig !== undefined) { var templateConfig = values.templateConfig; themeObj.themeSelector = {}; themeObj.themeSelector.theme = templateConfig.themeName; themeObj.themeSelector.bgColor = templateConfig.themeBgCol; themeObj.themeSelector.linkColor = templateConfig.themeLinkCol; themeObj.themeSelector.buttonColor = templateConfig.themeBtnCol; baseConfigurationAccordionTabs.push(themeObj); var headerObj = {}; headerObj.extendedSubject = templateConfig.header !== \\\"null\\\" ? templateConfig.header : \\\"\\\"; headerObj.companyLogo = templateConfig.LogoURL !== \\\"null\\\" ? templateConfig.LogoURL : undefined; headerObj.logoPosition = templateConfig.logoPosition !== \\\"null\\\" ? templateConfig.logoPosition : \\\"\\\"; headerObj.logoBackground = templateConfig.logoThemeBtnCol !== \\\"null\\\" ? templateConfig.logoThemeBtnCol : \\\"\\\"; headerObj.greetings = templateConfig.greetingMessage !== \\\"null\\\" ? templateConfig.greetingMessage : \\\"\\\"; headerObj.showCustomerName = templateConfig.appendName !== \\\"null\\\" ? templateConfig.appendName : \\\"\\\"; headerObj.message = templateConfig.headerMessage !== \\\"null\\\" ? templateConfig.headerMessage : \\\"\\\"; baseConfigurationAccordionTabs.push(headerObj); var c2cObj = {}; c2cObj.showClick = templateConfig.appendClickToChat; c2cObj.clickToChatMsg = templateConfig.c2CMessage !== \\\"null\\\" ? templateConfig.c2CMessage : \\\"\\\"; c2cObj.buttonLabel = templateConfig.c2CButtonText !== \\\"null\\\" ? templateConfig.c2CButtonText : \\\"\\\"; c2cObj.buttonUrl = templateConfig.c2CButtonURL !== \\\"null\\\" ? templateConfig.c2CButtonURL : undefined; baseConfigurationAccordionTabs.push(c2cObj); var footerObj = {}; footerObj.showSignOff = templateConfig.appendSignOff; footerObj.signOffMsg = templateConfig.signOffMessage !== \\\"null\\\" ? templateConfig.signOffMessage : \\\"\\\"; footerObj.showSignature = templateConfig.appendSignature !== \\\"null\\\" ? templateConfig.appendSignature : \\\"\\\"; footerObj.signatureText = templateConfig.signatureMessage !== \\\"null\\\" ? templateConfig.signatureMessage : \\\"\\\"; footerObj.footerMessage = templateConfig.footerMessage !== \\\"null\\\" ? templateConfig.footerMessage : \\\"\\\"; var footer = []; var labels = [\\\"Two\\\", \\\"Three\\\", \\\"Four\\\", \\\"Five\\\"]; footer.push({ showFooterLink: templateConfig.footerLinkOne, label: templateConfig.footerLinkOneText, linkUrl: templateConfig.footerLinkOneURL }); for (var i = 0; i < labels.length; i++) { var label = labels[i]; if (templateConfig[\\\"footerLink\\\" + label] === true) { footer.push({ showFooterLink: templateConfig[\\\"footerLink\\\" + label], label: templateConfig[\\\"footerLink\\\" + label + \\\"Text\\\"] !== \\\"null\\\"? templateConfig[\\\"footerLink\\\" + label + \\\"Text\\\"]: \\\"\\\", linkUrl: templateConfig[\\\"footerLink\\\" + label + \\\"URL\\\"] !== \\\"null\\\" ? templateConfig[\\\"footerLink\\\" + label + \\\"URL\\\"]: \\\"\\\" }); } else { if (templateConfig[\\\"footerLink\\\" + label + \\\"Text\\\"] !== \\\"\\\" || templateConfig[\\\"footerLink\\\" + label + \\\"URL\\\"] !== \\\"\\\") { footer.push({ showFooterLink: templateConfig[\\\"footerLink\\\" + label], label: templateConfig[\\\"footerLink\\\" + label + \\\"Text\\\"] !== \\\"null\\\"? templateConfig[\\\"footerLink\\\" + label + \\\"Text\\\"]: \\\"\\\", linkUrl: templateConfig[\\\"footerLink\\\" + label + \\\"URL\\\"] !== \\\"null\\\" ? templateConfig[\\\"footerLink\\\" + label + \\\"URL\\\"]: \\\"\\\" }); } } } footerObj.footer = footer; baseConfigurationAccordionTabs.push(footerObj); } tabsField.push({\\\"baseConfigurationAccordionTabs\\\": baseConfigurationAccordionTabs}); tabsField.push({\\\"mailerPreview\\\": {}}); uiData.mailConfigAccordionTabs = [mailConfigAccordionTabs]; uiData.tabsField = tabsField; return JSON.stringify(uiData);}\"}','JS','PAGE_DATA_VALUE','assist'),
(48,'default.user','2019-06-13 12:24:46.000000','default.user','2019-06-13 12:24:46.000000','listKeywords','{\"GenerateAuthToken\": \"Bearer \"}','{\"contexts\": [\"clientId\", \"accountId\"], \"constants\": {}}','/en/hierarchy/rest/clients/nemo-client-${clientId}/accounts/${accountId}-account-default/notificationconfig','{\"objectTranslator\": \"function translate(values){ values = JSON.parse(values); var items = values.data.items; var entities = []; items.forEach(function(item){entities.push({name:item.key, label:item.notificationType});} ) ;return JSON.stringify(entities); }\"}','JS','ENTITY_LISTING','assist'),
(49,'default.user','2019-06-13 12:24:46.000000','default.user','2019-06-13 12:24:46.000000','updateMsgFilter_p0','{\"GenerateAuthToken\": \"Bearer \"}','{\"contexts\": [\"clientId\", \"accountId\", \"entity\"], \"constants\": {}}','/en/hierarchy/rest/clients/nemo-client-${clientId}/accounts/${accountId}-account-default/notificationconfig/${entity}','{\"objectTranslator\": \"function translate(values){values = JSON.parse(values);values.notificationStatus = values.notificationStatus.toString();return JSON.stringify(values);}\"}','JS','PAGE_DATA_VALUE','assist'),
(50,'default.user','2021-03-01 12:24:46.000000','default.user','2021-03-01 12:24:46.000000','updateUserTest_p0','{\"GenerateAuthToken\": \"Bearer \"}','{\"contexts\": [\"clientId\", \"accountId\", \"entity\"], \"constants\": {}}','/en/hierarchy/rest/clients/nemo-client-${clientId}/accounts/${accountId}-account-default/agents/${entity}','{\"objectTranslator\": \"function translate(apiData) { var uiData = {\\\"tabsField\\\": [{},{},{}]}; var u = JSON.parse(apiData).items; var t0 = uiData.tabsField[0]; t0.key = u.key; t0.userName = u.userName; t0.employeeId = u.metadataMap && u.metadataMap.employeeId; t0.firstName = u.firstName; t0.lastName = u.lastName; t0.displayName = u.displayName; t0.email = u.email; t0.activeChatLimits = u.activeChatLimits.toString(); t0.autoAcceptChats = u.autoAcceptChats.toString(); t0.teamId = u.teamId; if(u.roleIds.length > 1) { t0.roleId = \\\"superlead_role_id\\\"; } else { t0.roleId = u.roleIds.toString(); } t0.authenticationType = u.authenticationType; t0.status = u.status; var t1 = uiData.tabsField[1]; t1.ConfigMapper={}; t1.ConfigMapper = u.skillLevels.map(function(sklvl){var keywords = sklvl.skillLevelId.split(\\\"-\\\"); var key = keywords[keywords.length-1].toUpperCase(); return({ id: sklvl.skillId, name: sklvl.skillId, key: key })}); var t2 = uiData.tabsField[2]; t2.ConfigMapper={}; t2.ConfigMapper = u.monitoringTeamIds ? u.monitoringTeamIds.map(function(tId){ return({ id: tId.teamId, name: tId.teamId, key: \\\"\\\" })}): [];  return JSON.stringify(uiData); }\"}','JS','PAGE_DATA_VALUE','assist'),
(51,'default.user','2021-03-01 12:24:46.000000','default.user','2021-03-01 12:24:46.000000','updateUserLive_p0','{\"GenerateAuthToken\": \"Bearer \"}','{\"contexts\": [\"clientId\", \"accountId\", \"entity\"], \"constants\": {}}','/en/hierarchy/rest/clients/nemo-client-${clientId}/accounts/${accountId}-account-default/agents/${entity}','{\"objectTranslator\": \"function translate(apiData) { var uiData = {\\\"tabsField\\\": [{},{},{}]}; var u = JSON.parse(apiData).items; var t0 = uiData.tabsField[0]; t0.key = u.key; t0.userName = u.userName; t0.employeeId = u.metadataMap && u.metadataMap.employeeId; t0.firstName = u.firstName; t0.lastName = u.lastName; t0.displayName = u.displayName; t0.email = u.email; t0.activeChatLimits = u.activeChatLimits.toString(); t0.autoAcceptChats = u.autoAcceptChats.toString(); t0.teamId = u.teamId; if(u.roleIds.length > 1) { t0.roleId = \\\"superlead_role_id\\\"; } else { t0.roleId = u.roleIds.toString(); } t0.authenticationType = u.authenticationType; t0.status = u.status; var t1 = uiData.tabsField[1]; t1.ConfigMapper={}; t1.ConfigMapper = u.skillLevels.map(function(sklvl){var keywords = sklvl.skillLevelId.split(\\\"-\\\"); var key = keywords[keywords.length-1].toUpperCase(); return({ id: sklvl.skillId, name: sklvl.skillId, key: key })}); var t2 = uiData.tabsField[2]; t2.ConfigMapper={}; t2.ConfigMapper = u.monitoringTeamIds ? u.monitoringTeamIds.map(function(tId){ return({ id: tId.teamId, name: tId.teamId, key: \\\"\\\" })}): [];  return JSON.stringify(uiData); }\"}','JS','PAGE_DATA_VALUE','assist'),
(52,'default.user','2019-06-13 12:24:46.000000','default.user','2019-06-13 12:24:46.000000','createSmartResponse_p0','{}','{\"contexts\": [\"accountId\"], \"constants\": {}}','/actuator/health','{\"objectTranslator\": \"function translate(values, entity, context) { try { context  = JSON.parse(context); var timestamp = new Date().getTime(); var uiData = { \\\"accountId\\\": context.accountId+timestamp}; } catch (e) {} return JSON.stringify(uiData); }\"}','JS','PAGE_DATA_VALUE','self'),
(53,'default.user','2019-06-13 12:24:46.000000','default.user','2019-06-13 12:24:46.000000','listSmartResponses','{\"GenerateAuthToken\": \"Bearer \"}','{\"contexts\": [\"clientId\", \"accountId\"], \"constants\": {}}','/en/hierarchy/rest/clients/nemo-client-${clientId}/accounts/${accountId}-account-default/smartresponse','{\"objectTranslator\": \"function translate(values){ values = JSON.parse(values); var items = values.data.items; var entities = []; items.forEach(function(item){entities.push({name:item.key, label:item.smartresponseText});} ) ;return JSON.stringify(entities); }\"}','JS','ENTITY_LISTING','assist'),
(54,'default.user','2019-06-13 12:24:46.000000','default.user','2019-06-13 12:24:46.000000','updateSmartResponse_p0','{\"GenerateAuthToken\": \"Bearer \"}','{\"contexts\": [\"clientId\", \"accountId\"], \"constants\": {}}','/en/hierarchy/rest/clients/nemo-client-${clientId}/accounts/${accountId}-account-default/smartresponse','{\"objectTranslator\": \"function translate(values, entity) { values = JSON.parse(values).data.items[entity]; var uiData = { \\\"id\\\": values.smartResponseId, \\\"scope\\\": values.scope.toLowerCase(), \\\"scopeId\\\": values.scopeId, \\\"tag\\\": values.tags, \\\"responseText\\\": values.smartresponseText, }; return JSON.stringify(uiData); }\"}','JS','PAGE_DATA_VALUE','assist'),
(55,'default.user','2021-03-01 12:24:46.000000','default.user','2021-03-01 12:24:46.000000','listUser','{\"GenerateAuthToken\": \"Bearer \"}','{\"contexts\": [\"clientId\", \"accountId\"], \"constants\": {}}','/en/hierarchy/rest/clients/nemo-client-${clientId}/accounts/${accountId}-account-default/agents','{\"objectTranslator\": \"function translate(values) { var entities=[]; var list=[]; try{ values=JSON.parse(values); list=values.data.items; } catch(e){ return e.toString(); } list.forEach(function(item){ entities.push({ name:item.key, label: item.userName, labelState: item.status }); }); return JSON.stringify(entities);}\"}','JS','ENTITY_LISTING','assist'),
(56,'default.user','2019-06-13 12:24:46.000000','default.user','2019-06-13 12:24:46.000000','listAccountConfig','{\"GenerateAuthToken\": \"Bearer \"}','{\"contexts\": [\"clientId\", \"accountId\"], \"constants\": {}}','/en/hierarchy/rest/clients/nemo-client-${clientId}/accounts/${accountId}-account-default/clientstartupconfig','{\"objectTranslator\": \"function translate(values){var entities=[]; var list=[]; try{values=JSON.parse(values); list=values.data.items;}catch(e){return e.toString();} list.forEach(function(item){ entities.push({name:item.key, label: item.description}); });return JSON.stringify(entities);}\"}','JS','ENTITY_LISTING','assist'),
(57,'default.user','2019-06-13 12:24:46.000000','default.user','2019-06-13 12:24:46.000000','updateAccountConfig_p0','{\"GenerateAuthToken\": \"Bearer \"}','{\"contexts\": [\"clientId\", \"entity\", \"accountId\"], \"constants\": {}}','/en/hierarchy/rest/clients/nemo-client-${clientId}/accounts/${accountId}-account-default/clientstartupconfig/${entity}','{\"objectTranslator\": \"function translate(values) { values = JSON.parse(values); var uiData = values; return JSON.stringify(uiData); }\"}','JS','PAGE_DATA_VALUE','assist'),
(58,'default.user','2019-06-13 12:24:46.000000','default.user','2019-06-13 12:24:46.000000','listPropertyValidation','{\"GenerateAuthToken\": \"Bearer \"}','{\"contexts\": [\"clientId\", \"accountId\"], \"constants\": {}}','/en/hierarchy/rest/clients/nemo-client-${clientId}/accounts/${accountId}-account-default/validator','{\"objectTranslator\": \"function translate(values){var entities=[]; var list=[]; try{values=JSON.parse(values); list=values.data.items;}catch(e){return e.toString();} list.forEach(function(item){ entities.push({name:item.key, label: item.validatorName, secondaryLabel: item.validatorTypeLabel === \\\"Regular Expression\\\" ? \\\"RegEx\\\" : item.validatorTypeLabel}); });return JSON.stringify(entities);}\"}','JS','ENTITY_LISTING','assist'),
(59,'default.user','2019-06-13 12:24:46.000000','default.user','2019-06-13 12:24:46.000000','updatePropertyValidation_p0','{\"GenerateAuthToken\": \"Bearer \"}','{\"contexts\": [\"clientId\", \"entity\", \"accountId\"], \"constants\": {}}','/en/hierarchy/rest/clients/nemo-client-${clientId}/accounts/${accountId}-account-default/validator/${entity}','{\"objectTranslator\": \"function translate(values) { values = JSON.parse(values); var uiData = values.items; if(Array.isArray(uiData.enumValues) && uiData.enumValues.length==1 && uiData.enumValues[0]==\'\'){uiData.enumValues=[]} return JSON.stringify(uiData); }\"}','JS','PAGE_DATA_VALUE','assist'),
(60,'default.user','2019-06-13 12:24:46.000000','default.user','2019-06-13 12:24:46.000000','authorisedUrls_p0','{\"GenerateAuthToken\": \"Bearer \"}','{\"contexts\": [\"clientId\", \"accountId\", \"entity\"], \"constants\": {}}','/en/hierarchy/rest/clients/nemo-client-${clientId}/accounts/${accountId}-account-default/urlfilterconfig','{\"objectTranslator\": \"function translate(apiData) { values = JSON.parse(apiData).data.items[0]; items = values.filterConfig; filtersList = []; items.forEach(function (item) { if (item.urlConfigDeleted) { filtersList.push({ urlFilterConfigId: item.urlFilterConfigId, filterText: item.filterText, filterOptions: item.filterOptions, urlConfigDeleted: false }); } }); var uiData = { \\\"key\\\": values.key, \\\"accountId\\\": values.accountId, \\\"scopeType\\\": values.scopeType, \\\"scopeValue\\\": values.scopeValue, \\\"enabled\\\": values.enabled.toString(), \\\"filterType\\\": values.urlFilterListingType, \\\"filterConfig\\\": filtersList }; return JSON.stringify(uiData); }\"}','JS','PAGE_DATA_VALUE','assist'),
(61,'default.user','2019-06-13 12:24:46.000000','default.user','2019-06-13 12:24:46.000000','updateSessionTimeout_p0','{\"GenerateAuthToken\": \"Bearer \"}','{\"contexts\": [\"clientId\", \"accountId\", \"entity\"], \"constants\": {}}','/en/hierarchy/rest/clients/nemo-client-${clientId}/accounts/${accountId}-account-default/timeoutconfig/${entity}','{\"objectTranslator\": \"function translate(values) { values = JSON.parse(values);var uiData = { \\\"key\\\": values.key,\\\"expression\\\": values.expression, \\\"timeout\\\": values.timeOut}; return JSON.stringify(uiData); }\"}','JS','PAGE_DATA_VALUE','assist'),
(62,'default.user','2020-10-15 12:24:56.000000','default.user','2020-10-15 12:24:56.000000','listsessiontimeout','{\"GenerateAuthToken\": \"Bearer \"}','{\"contexts\": [\"clientId\", \"accountId\"], \"constants\": {}}','/en/hierarchy/rest/clients/nemo-client-${clientId}/accounts/${accountId}-account-default/timeoutconfig','{\"objectTranslator\": \"function translate(values){ values = JSON.parse(values); var items = values.data.items; var entities = []; items.forEach(function(item){entities.push({name:item.key, label:item.expression, secondaryLabel:item.timeOut});} ); return JSON.stringify(entities); }\"}','JS','ENTITY_LISTING','assist'),
(63,'default.user','2019-06-13 12:24:46.000000','default.user','2019-06-13 12:24:46.000000','listProperty','{\"GenerateAuthToken\": \"Bearer \"}','{\"contexts\": [\"clientId\", \"accountId\"], \"constants\": {}}','/en/hierarchy/rest/clients/nemo-client-${clientId}/accounts/${accountId}-account-default/propertyconfiguration','{\"objectTranslator\": \"function translate(values){ values = JSON.parse(values); var items = values.data.items; var properties={enum:[\\\"\\\"], enumNames:[\\\"Select\\\"]}; try{ items.forEach(function (item){ properties.enum.push(item.key); properties.enumNames.push(item.varName); }) }    catch(e){} return JSON.stringify(properties); }\"}','JS','FIELD_OPTIONS','assist'),
(64,'default.user','2019-06-13 12:24:46.000000','default.user','2019-06-13 12:24:46.000000','getSmartResponseExcel','{\"GenerateAuthToken\": \"Bearer \"}','{\"contexts\": [\"accountId\", \"clientId\"], \"constants\": {}}','/en/hierarchy/rest/clients/nemo-client-${clientId}/accounts/${accountId}-account-default/smartresponse/downloadexcel','{\"objectTranslator\": \"function translate(apiData) { return apiData; }\"}','NONE','PAGE_DATA_VALUE','assist'),
(65,'default.user','2019-06-13 12:24:46.000000','default.user','2019-06-13 12:24:46.000000','listTeamForConfigMapper','{\"apikey\": \"KtbDtdYYb7EUD4oajYCM8l9Nh7L0AgEc\"}','{\"contexts\": [\"accountId\"], \"constants\": {}}','/v1/ohs/adminEntity/listByAccount?entityType=team&accountId=${accountId}-account-default','{\"objectTranslator\": \"function translate(values){var teams={enum:[], enumNames:[]}; var list=[]; try{values=JSON.parse(values); list=JSON.parse(values.data.list); list.forEach(function(item){ teams.enum.push(item.entityBaseData.entityId);teams.enumNames.push(item.entityBaseData.entityDisplayName); }); }catch(e){} return JSON.stringify(teams);}\"}','JS','FIELD_OPTIONS','ohs'),
(66,'default.user','2019-06-13 12:24:46.000000','default.user','2019-06-13 12:24:46.000000','listTeamForConfigMapper','{\"apikey\": \"KtbDtdYYb7EUD4oajYCM8l9Nh7L0AgEc\"}','{\"contexts\": [\"accountId\"], \"constants\": {}}','/v1/ohs/adminEntity/listByAccount?entityType=team&accountId=${accountId}-account-default','{\"objectTranslator\": \"function translate(values){var teams={enum:[], enumNames:[]}; var list=[]; try{values=JSON.parse(values); list=JSON.parse(values.data.list); list.forEach(function(item){ teams.enum.push(item.entityBaseData.entityId);teams.enumNames.push(item.entityBaseData.entityDisplayName); }); }catch(e){} return JSON.stringify(teams);}\"}','JS','FIELD_OPTIONS','ohs');


INSERT INTO `entity_template` VALUES
(9,'default.user','2019-08-08 14:17:12.404294','default.user','2019-08-08 14:17:12.404294','listLeadReset','Reset Times'),
(11,'default.user','2021-03-01 09:24:46.000000','default.user','2021-03-01 09:24:46.000000','listUser','Agents'),
(12,'default.user','2019-08-08 14:17:12.404294','default.user','2019-08-08 14:17:12.404294','listActiveCards','Active Cards'),
(13,'default.user','2020-08-24 09:24:46.000000','default.user','2020-08-24 09:24:46.000000','listProperty','Property Configurations'),
(14,'default.user','2020-10-24 09:24:46.000000','default.user','2020-10-24 09:24:46.000000','listDataMaskingPattern','Data Masking Patterns'),
(15,'default.user','2020-08-24 09:24:46.000000','default.user','2020-08-24 09:24:46.000000','listMailerConfig','Mailer Configurations'),
(16,'default.user','2020-08-24 09:24:46.000000','default.user','2020-08-24 09:24:46.000000','listKeywords','Keyword Alerts'),
(17,'default.user','2020-08-24 09:24:46.000000','default.user','2020-08-24 09:24:46.000000','listSmartResponses','Smart Responses'),
(18,'default.user','2020-07-28 09:24:46.000000','default.user','2020-07-28 09:24:46.000000','listAccountConfig','Account Configurations'),
(19,'default.user','2020-07-28 09:24:46.000000','default.user','2020-07-28 09:24:46.000000','listPropertyValidation','Property Validations'),
(20,'default.user','2019-08-08 14:17:12.404294','default.user','2019-08-08 14:17:12.404294','listsessiontimeout','Session Timeouts');



DELETE FROM `action_workflow`
WHERE id!=0;

DELETE FROM `activity_template`
WHERE id!='';

INSERT INTO `activity_template` VALUES
('accountConfig','default.user','2020-07-28 09:24:46.000000','default.user','2020-07-28 09:24:46.000000','Account Configurations','{\"UPDATE\": {\"entityIdLocation\": \"updateAccountConfig_p0.key\", \"entityLabelLocation\": \"updateAccountConfig_p0.description\"}}','MENU',_binary '','Account Configurations','NON_SINGLETON','{\"menuGroupName\": \"nav\", \"icon\":\"\", \"toolTip\":\"\", \"dashboard\":true, \"display_order\":1, \"isActive\":true}',18,'{\"publishType\": \"DEFAULT\"}'),('activeCards','default.user','2019-08-07 16:23:27.677031','default.user','2019-08-07 16:23:27.677031','Active Cards','{\"CREATE\": {\"entityIdLocation\": \"createActiveCards_p0.card\", \"entityLabelLocation\": \"createActiveCards_p0.card\"}, \"UPDATE\": {\"entityIdLocation\": \"updateActiveCards_p0.key\", \"entityLabelLocation\": \"updateActiveCards_p0.commandName\"}}','MENU',_binary '','Active Cards','NON_SINGLETON','{\"menuGroupName\": \"nav\", \"icon\":\"\", \"toolTip\":\"\", \"dashboard\":true, \"display_order\":1, \"isActive\":true}',12,'{\"publishType\": \"DEFAULT\"}'),('authorisedUrls','default.user','2019-08-07 13:50:29.862585','default.user','2019-08-07 13:50:29.862585','Authorised urls','{}','MENU',_binary '','Authorised Urls','NON_SINGLETON','{\"menuGroupName\": \"nav\", \"icon\":\"\", \"toolTip\":\"\", \"dashboard\":true, \"display_order\":1, \"isActive\":true}',1,'{\"publishType\": \"DEFAULT\"}'),('chathours','default.user','2019-08-07 16:23:27.677031','default.user','2019-08-07 16:23:27.677031','Chat Hours and Calendar','{\"UPDATE\": {\"entityIdLocation\": \"chathours_p0.queues\", \"entityLabelLocation\": \"chathours_p0.queueName\"}}','MENU',_binary '\0','Hours of Operation','NON_SINGLETON','{\"menuGroupName\": \"nav\", \"icon\":\"\", \"toolTip\":\"\", \"dashboard\":true, \"display_order\":1, \"isActive\":true}',8,'{\"publishType\": \"DEFAULT\"}'),('keywordAlerts','default.user','2019-08-07 13:50:29.862585','default.user','2019-08-07 13:50:29.862585','Keyword Alerts','{\"UPDATE\": {\"entityIdLocation\": \"updateMsgFilter_p0.key\", \"entityLabelLocation\": \"updateMsgFilter_p0.notificationType\"}}','MENU',_binary '','Keyword Alerts','NON_SINGLETON','{\"menuGroupName\": \"nav\", \"icon\":\"\", \"toolTip\":\"\", \"dashboard\":true, \"display_order\":1, \"isActive\":true}',16,'{\"publishType\": \"DEFAULT\"}'),('leadConsole','default.user','2019-08-07 13:50:29.862585','default.user','2019-08-07 13:50:29.862585','lead Console','{\"CREATE\": {\"entityIdLocation\": \"createLeadConsole_p0.applicationVal\", \"entityLabelLocation\": \"createLeadConsole_p0.applicationVal\"}, \"UPDATE\": {\"entityIdLocation\": \"updateLeadConsole_p0.key\", \"entityLabelLocation\": \"updateLeadConsole_p0.applicationValue\"}}','MENU',_binary '','Lead Console Reset','NON_SINGLETON','{\"menuGroupName\": \"nav\", \"icon\":\"\", \"toolTip\":\"\", \"dashboard\":true, \"display_order\":1, \"isActive\":true}',9,'{\"publishType\": \"DEFAULT\"}'),('mailer','default.user','2020-08-24 09:24:46.000000','default.user','2020-08-24 09:24:46.000000','Mailer','{\"CREATE\": {\"entityIdLocation\": \"createMailer_p0.mailConfigAccordionTabs.0.configKey\", \"entityLabelLocation\": \"createMailer_p0.mailConfigAccordionTabs.0.configKey\"}, \"UPDATE\": {\"entityIdLocation\": \"updateMailer_p0.mailConfigAccordionTabs.0.key\", \"entityLabelLocation\": \"updateMailer_p0.mailConfigAccordionTabs.0.configKey\"}}','MENU',_binary '','Mailer Configurations','NON_SINGLETON','{\"menuGroupName\": \"nav\", \"icon\":\"\", \"toolTip\":\"\", \"dashboard\":true, \"display_order\":1, \"isActive\":true}',15,'{\"publishType\": \"DEFAULT\"}'),('maskingPatterns','default.user','2019-08-07 13:50:29.862585','default.user','2019-08-07 13:50:29.862585','Data Masking Patterns','{\"CREATE\": {\"entityIdLocation\": \"createMaskingPatterns_p0.piiMaskName\", \"entityLabelLocation\": \"createMaskingPatterns_p0.piiMaskName\"}, \"UPDATE\": {\"entityIdLocation\": \"updateMaskingPatterns_p0.key\", \"entityLabelLocation\": \"updateMaskingPatterns_p0.piiMaskName\"}}','MENU',_binary '','Data Masking Patterns','NON_SINGLETON','{\"menuGroupName\": \"nav\", \"icon\":\"\", \"toolTip\":\"\", \"dashboard\":true, \"display_order\":1, \"isActive\":true}',14,'{\"publishType\": \"DEFAULT\"}'),('passwordPolicy','default.user','2019-08-07 13:50:29.862585','default.user','2019-08-07 13:50:29.862585','Password Policy','{}','MENU',_binary '','Password Policy','NON_SINGLETON','{\"menuGroupName\": \"nav\", \"icon\":\"\", \"toolTip\":\"\", \"dashboard\":true, \"display_order\":1, \"isActive\":true}',1,'{\"publishType\": \"DEFAULT\"}'),('propertyConfig','default.user','2020-08-24 09:24:46.000000','default.user','2020-08-24 09:24:46.000000','Property','{\"CREATE\": {\"entityIdLocation\": \"createPropertyConfig_p0.varName\", \"entityLabelLocation\": \"createPropertyConfig_p0.varName\"}, \"UPDATE\": {\"entityIdLocation\": \"updatePropertyConfig_p0.key\", \"entityLabelLocation\": \"updatePropertyConfig_p0.varName\"}}','MENU',_binary '','Property Configurations','NON_SINGLETON','{ \"menuGroupName\": \"nav\", \"icon\": \"\", \"toolTip\": \"\", \"dashboard\": true, \"display_order\": 1, \"isActive\": true, \"uiOptions\": { \"entityList\": { \"entityHeader\": { \"label\": \"Name\", \"secondaryLabel\": \"Property Panel\" } } } }',13,'{\"publishType\": \"DEFAULT\"}'),('propertyValidation','default.user','2020-07-28 09:24:46.000000','default.user','2020-07-28 09:24:46.000000','Property Validations','{\"CREATE\": {\"entityIdLocation\": \"createPropertyValidation_p0.validatorName\", \"entityLabelLocation\": \"createPropertyValidation_p0.validatorName\"}, \"UPDATE\": {\"entityIdLocation\": \"updatePropertyValidation_p0.key\", \"entityLabelLocation\": \"updatePropertyValidation_p0.validatorName\"}}','MENU',_binary '','Property Validations','NON_SINGLETON','{\"menuGroupName\": \"nav\", \"icon\":\"\", \"toolTip\":\"\", \"dashboard\":true, \"display_order\":1, \"isActive\":true, \"uiOptions\": {\"entityList\": {\"entityHeader\": {\"label\": \"Name\", \"secondaryLabel\": \"Type\"}}}}',19,'{\"publishType\": \"DEFAULT\"}'),('queues','default.user','2019-08-07 13:50:29.862585','default.user','2019-08-07 13:50:29.862585','Queue Activity','{\"CREATE\": {\"entityIdLocation\": \"createQueues_p0.tabsField.0.queueName\", \"entityLabelLocation\": \"createQueues_p0.tabsField.0.queueName\"}, \"UPDATE\": {\"entityIdLocation\": \"updateQueues_p0.tabsField.0.queueId\", \"entityLabelLocation\": \"updateQueues_p0.tabsField.0.queueName\"}}','MENU',_binary '\0','Queues Configuration','NON_SINGLETON','{\"menuGroupName\": \"nav\", \"icon\":\"\", \"toolTip\":\"\", \"dashboard\":true, \"display_order\":1, \"isActive\":true}',2,'{\"publishType\": \"DEFAULT\"}'),('sessiontimeout','default.user','2019-08-07 16:23:27.677031','default.user','2019-08-07 16:23:27.677031','Session Timeout','{\"CREATE\": {\"entityIdLocation\": \"createSessionTimeout_p0.expression\", \"entityLabelLocation\": \"createSessionTimeout_p0.expression\"}, \"UPDATE\": {\"entityIdLocation\": \"updateSessionTimeout_p0.key\", \"entityLabelLocation\": \"updateSessionTimeout_p0.expression\"}}','MENU',_binary '','Session Timeouts','NON_SINGLETON','{\"menuGroupName\": \"nav\", \"icon\":\"\", \"toolTip\":\"\", \"dashboard\":true, \"display_order\":1, \"isActive\":true, \"uiOptions\": {\"entityList\": {\"entityHeader\": {\"label\": \"Expression\",\"secondaryLabel\": \"Timeout\"}}}}',20,'{\"publishType\": \"DEFAULT\", \"preFetchInputValidation\": \"[^A-Za-z0-9-_ . ,:()=|&\\\"!]\"}'),('skills','default.user','2019-08-07 13:50:29.862585','default.user','2019-08-07 13:50:29.862585','Skill Activity','{\"CREATE\": {\"entityIdLocation\": \"createSkills_p0.skillName\", \"entityLabelLocation\": \"createSkills_p0.skillName\"}, \"UPDATE\": {\"entityIdLocation\": \"updateSkill_p0.skillId\", \"entityLabelLocation\": \"updateSkill_p0.skillName\"}}','MENU',_binary '\0','Skills Configuration','NON_SINGLETON','{\"menuGroupName\": \"nav\", \"icon\":\"\", \"toolTip\":\"\", \"dashboard\":true, \"display_order\":1, \"isActive\":true}',5,'{\"publishType\": \"DEFAULT\"}'),('smartResponse','default.user','2020-08-24 09:24:46.000000','default.user','2020-08-24 09:24:46.000000','Smart Responses','{\"CREATE\": \"createSmartResponse_p0.accountId\", \"UPDATE\": \"updateSmartResponse_p0.accountId\"}','MENU',_binary '','Smart Responses','NON_SINGLETON','{\"menuGroupName\": \"nav\", \"icon\":\"\", \"toolTip\":\"\", \"dashboard\":true, \"display_order\":1, \"isActive\":true}',17,'{\"publishType\": \"DEFAULT\", \"allowedActions\": {\"CREATE\": [\"PUBLISH_TO_TEST\", \"PUBLISH_TO_LIVE\", \"EDIT\"], \"UPDATE\": []}}'),('STALive','default.user','2019-08-07 13:50:29.862585','default.user','2019-08-07 13:50:29.862585','Skill to Agents Live','{\"UPDATE\": {\"entityIdLocation\": \"STALive_p0.skillId\", \"entityLabelLocation\": \"STALive_p0.skillName\"}}','MENU',_binary '','Live - Skill to Agents','NON_SINGLETON','{\"menuGroupName\": \"nav\", \"icon\":\"\", \"toolTip\":\"\", \"dashboard\":true, \"display_order\":1, \"isActive\":true}',5,'{\"publishType\": \"LIVE_ONLY\"}'),('STATest','default.user','2019-08-07 13:50:29.862585','default.user','2019-08-07 13:50:29.862585','Skill to Agents Test','{\"UPDATE\": {\"entityIdLocation\": \"STATest_p0.skillId\", \"entityLabelLocation\": \"STATest_p0.skillName\"}}','MENU',_binary '','Test - Skill to Agents','NON_SINGLETON','{\"menuGroupName\": \"nav\", \"icon\":\"\", \"toolTip\":\"\", \"dashboard\":true, \"display_order\":1, \"isActive\":true}',5,'{\"publishType\": \"TEST_ONLY\"}'),('tags','default.user','2019-08-07 13:50:29.862585','default.user','2019-08-07 13:50:29.862585','Tags Activity','{\"CREATE\": {\"entityIdLocation\": \"createTags_p0.tagName\", \"entityLabelLocation\": \"createTags_p0.tagName\"}, \"UPDATE\": {\"entityIdLocation\": \"updateTags_p0.tagId\", \"entityLabelLocation\": \"updateTags_p0.tagName\"}}','MENU',_binary '\0','Tags Configuration','NON_SINGLETON','{\"menuGroupName\": \"nav\", \"icon\":\"\", \"toolTip\":\"\", \"dashboard\":true, \"display_order\":1, \"isActive\":true}',7,'{\"publishType\": \"DEFAULT\"}'),('teams','default.user','2019-08-07 13:50:29.862585','default.user','2019-08-07 13:50:29.862585','Team Activity','{\"CREATE\": {\"entityIdLocation\": \"createTeams_p0.teamName\", \"entityLabelLocation\": \"createTeams_p0.teamName\"}, \"UPDATE\": {\"entityIdLocation\": \"updateTeams_p0.teamId\", \"entityLabelLocation\": \"updateTeams_p0.teamName\"}}','MENU',_binary '\0','Teams Configuration','NON_SINGLETON','{\"menuGroupName\": \"nav\", \"icon\":\"\", \"toolTip\":\"\", \"dashboard\":true, \"display_order\":1, \"isActive\":true}',3,'{\"publishType\": \"DEFAULT\"}'),('userLive','default.user','2021-03-01 09:24:46.000000','default.user','2021-03-01 09:24:46.000000','Agents Live','{\"CREATE\": {\"entityIdLocation\": \"createUserLive_p0.tabsField.0.userName\", \"entityLabelLocation\": \"createUserLive_p0.tabsField.0.userName\"}, \"UPDATE\": {\"entityIdLocation\": \"updateUserLive_p0.tabsField.0.key\", \"entityLabelLocation\": \"updateUserLive_p0.tabsField.0.userName\"}}','MENU',_binary '','Live Agents','NON_SINGLETON','{ \"menuGroupName\": \"nav\", \"icon\": \"\", \"toolTip\": \"\", \"dashboard\": true, \"display_order\": 1, \"isActive\": true, \"uiOptions\": { \"entityList\": { \"entityItem\": { \"styles\": { \"label\": { \"DISABLED\": { \"color\": \"#cacfd4\" } } } } } } }',11,'{\"publishType\": \"LIVE_ONLY\"}'),('userTest','default.user','2021-03-01 09:24:46.000000','default.user','2021-03-01 09:24:46.000000','Agents Test','{\"CREATE\": {\"entityIdLocation\": \"createUserTest_p0.tabsField.0.userName\", \"entityLabelLocation\": \"createUserTest_p0.tabsField.0.userName\"}, \"UPDATE\": {\"entityIdLocation\": \"updateUserTest_p0.tabsField.0.key\", \"entityLabelLocation\": \"updateUserTest_p0.tabsField.0.userName\"}}','MENU',_binary '','Test Agents','NON_SINGLETON','{ \"menuGroupName\": \"nav\", \"icon\": \"\", \"toolTip\": \"\", \"dashboard\": true, \"display_order\": 1, \"isActive\": true, \"uiOptions\": { \"entityList\": { \"entityItem\": { \"styles\": { \"label\": { \"DISABLED\": { \"color\": \"#cacfd4\" } } } } } } }',11,'{\"publishType\": \"TEST_ONLY\"}');




INSERT INTO `page_template`
(id, created_by, created_on, last_updated_by, last_updated_on, description, title, type, definition) VALUES
('authorisedUrls_p0'           ,'default.user' ,'2019-08-07 14:06:42.713766'  ,'Gangeyula.Chandra@247-inc.com'  ,'2021-01-21 15:23:03.889963' ,'Authorised Urls'                  , 'Authorised Urls'            ,'UPDATE','{}'),
('createActiveCards_p0'        ,'default.user' ,'2020-10-15 11:34:33.713766'  ,'default.user'                   ,'2020-10-15 11:34:33.713766' ,'Active Cards'                     , 'Create Active Cards'        ,'CREATE','{}'),
('createLeadConsole_p0'        ,'default.user' ,'2019-08-07 14:06:42.713766'  ,'default.user'                   ,'2020-03-03 16:36:01.079726' ,'Lead Console creation'            , 'create Lead Console Reset'  ,'CREATE','{}'),
('createMailer_p0'             ,'default.user' ,'2020-08-24 09:24:46.000000'  ,'default.user'                   ,'2020-10-27 11:50:00.274206' ,'Mailer Configuration'             , 'Mailer'                     ,'CREATE','{}'),
('createMaskingPatterns_p0'    ,'default.user' ,'2020-10-24 09:24:46.000000'  ,'Swati.Taneja@247-inc.com'       ,'2020-12-07 16:13:11.773006' ,'Masking Patterns Creation'        , 'Create MaskingPatterns'     ,'CREATE','{}'),
('createPropertyConfig_p0'     ,'default.user' ,'2020-08-24 09:24:46.000000'  ,'default.user'                   ,'2020-08-24 09:24:46.000000' ,'Property Configuration Creation'  , 'Property'                   ,'CREATE','{}'),
('createPropertyValidation_p0' ,'default.user' ,'2020-07-28 09:24:46.000000'  ,'jonathan.paul@247-inc.com'      ,'2021-02-03 22:08:14.397598' ,'Create Property Validation'       , 'Create Property Validation' ,'CREATE','{}'),
('createSessionTimeout_p0'     ,'default.user' ,'2020-10-15 11:34:33.713766'  ,'Arul.Abirami.S@247-inc.com'     ,'2021-02-17 15:45:59.162740' ,'Session Timeout'                  , 'Create Session Timeout'     ,'CREATE','{}'),
('createSmartResponse_p0'      ,'default.user' ,'2020-08-24 09:24:46.000000'  ,'default.user'                   ,'2020-08-24 09:24:46.000000' ,'Smart response'                   , 'Smart Response'             ,'CREATE','{}'),
('createUserLive_p0'           ,'default.user' ,'2021-03-01 09:24:46.000000'  ,'default.user'                   ,'2021-03-01 09:24:46.000000' ,'Live Agent creation'              , 'Create Live Agent'          ,'CREATE','{}'),
('createUserTest_p0'           ,'default.user' ,'2021-03-01 09:24:46.000000'  ,'default.user'                   ,'2021-03-01 09:24:46.000000' ,'Test Agent creation'              , 'Create Test Agent'          ,'CREATE','{}'),
('passwordPolicy_p0'           ,'default.user' ,'2019-08-07 14:06:42.713766'  ,'veera.rk@247-inc.com'           ,'2021-01-24 17:46:42.939429' ,'Password policy'                  , 'Password policy'            ,'UPDATE','{}'),
('updateAccountConfig_p0'      ,'default.user' ,'2021-02-07 14:06:42.713766'  ,'default.user'                   ,'2021-02-07 14:06:42.713766' ,'Account Config Update'            , 'Account Configuration'      ,'UPDATE','{}'),
('updateActiveCards_p0'        ,'default.user' ,'2020-10-15 11:34:33.713766'  ,'default.user'                   ,'2020-10-15 11:34:33.713766' ,'Active Cards'                     , 'Update Active Cards'        ,'UPDATE','{}'),
('updateLeadConsole_p0'        ,'default.user' ,'2019-08-07 14:06:42.713766'  ,'default.user'                   ,'2020-03-03 16:36:01.079726' ,'Lead Console updation'            , 'update Lead Console Reset'  ,'UPDATE','{}'),
('updateMailer_p0'             ,'default.user' ,'2020-08-24 09:24:46.000000'  ,'default.user'                   ,'2020-10-27 11:50:00.274206' ,'Mailer Configuration'             , 'Mailer'                     ,'UPDATE','{}'),
('updateMaskingPatterns_p0'    ,'default.user' ,'2020-10-24 09:24:46.000000'  ,'Swati.Taneja@247-inc.com'       ,'2020-12-04 16:12:23.842083' ,'Masking Patterns Updation'        , 'Update MaskingPatterns'     ,'UPDATE','{}'),
('updateMsgFilter_p0'          ,'default.user' ,'2019-08-08 14:24:11.084964'  ,'default.user'                   ,'2020-04-14 12:38:29.379339' ,'Keyword Alerts'                   , 'Keyword Alerts'             ,'UPDATE','{}'),
('updatePropertyConfig_p0'     ,'default.user' ,'2020-08-24 09:24:46.000000'  ,'Swati.Taneja@247-inc.com'       ,'2020-12-04 14:35:49.615055' ,'Property Configuration Updation'  , 'Property'                   ,'UPDATE','{}'),
('updatePropertyValidation_p0' ,'default.user' ,'2020-07-28 09:24:46.000000'  ,'jonathan.paul@247-inc.com'      ,'2021-02-03 22:08:14.397598' ,'Update Property Validation'       , 'Update Property Validation' ,'UPDATE','{}'),
('updateSessionTimeout_p0'     ,'default.user' ,'2020-10-15 11:34:33.713766'  ,'Arul.Abirami.S@247-inc.com'     ,'2021-02-17 00:20:25.669857' ,'Session Timeout'                  , 'Update Session Timeout'     ,'UPDATE','{}'),
('updateSmartResponse_p0'      ,'default.user' ,'2020-08-24 09:24:46.000000'  ,'default.user'                   ,'2020-08-24 09:24:46.000000' ,'Smart response update'            , 'update Smart Response'      ,'UPDATE','{}'),
('updateUserLive_p0'           ,'default.user' ,'2021-03-01 09:24:46.000000'  ,'default.user'                   ,'2021-03-01 09:24:46.000000' ,'Live Agent updation'              , 'Update Live Agent'          ,'UPDATE','{}'),
('updateUserTest_p0'           ,'default.user' ,'2021-03-01 09:24:46.000000'  ,'default.user'                   ,'2021-03-01 09:24:46.000000' ,'Test Agent updation'              , 'Update Test Agent'          ,'UPDATE','{}');



INSERT INTO `activity_page` VALUES
(14,'default.user','2020-10-15 14:08:14.129995','default.user','2020-10-15 14:08:14.129995',1,'','createActiveCards_p0','activeCards',NULL),
(15,'default.user','2020-01-24 11:24:15.262110','default.user','2020-01-24 11:25:15.262110',1,'','passwordPolicy_p0','passwordPolicy',NULL),
(18,'default.user','2020-08-24 09:24:46.000000','default.user','2020-08-24 09:24:46.000000',1,NULL,'createPropertyConfig_p0','propertyConfig',NULL),
(19,'default.user','2020-08-24 09:24:46.000000','default.user','2020-08-24 09:24:46.000000',1,NULL,'updatePropertyConfig_p0','propertyConfig',NULL),
(21,'default.user','2020-08-24 09:24:46.000000','default.user','2020-08-24 09:24:46.000000',1,NULL,'updateMaskingPatterns_p0','maskingPatterns',NULL),
(22,'default.user','2020-08-24 09:24:46.000000','default.user','2020-08-24 09:24:46.000000',1,NULL,'createMaskingPatterns_p0','maskingPatterns',NULL),
(23,'default.user','2020-07-28 09:24:46.000000','default.user','2020-07-28 09:24:46.000000',1,'','createLeadConsole_p0','leadConsole',NULL),
(24,'default.user','2020-07-28 09:24:46.000000','default.user','2020-07-28 09:24:46.000000',1,'','updateLeadConsole_p0','leadConsole',NULL),
(25,'default.user','2020-10-15 16:35:09.859460','default.user','2020-10-15 16:35:09.859460',1,'','updateActiveCards_p0','activeCards',NULL),
(26,'default.user','2021-03-01 09:24:46.000000','default.user','2021-03-01 09:24:46.000000',1,'','createUserLive_p0','userLive',NULL),
(27,'default.user','2021-03-01 09:24:46.000000','default.user','2021-03-01 09:24:46.000000',1,'','updateUserLive_p0','userLive',NULL),
(28,'default.user','2021-03-01 09:24:46.000000','default.user','2021-03-01 09:24:46.000000',1,'','createUserTest_p0','userTest',NULL),
(29,'default.user','2021-03-01 09:24:46.000000','default.user','2021-03-01 09:24:46.000000',1,'','updateUserTest_p0','userTest',NULL),
(30,'default.user','2020-08-24 09:24:46.000000','default.user','2020-08-24 09:24:46.000000',1,'','updateMailer_p0','mailer',NULL),
(31,'default.user','2020-08-24 09:24:46.000000','default.user','2020-08-24 09:24:46.000000',1,'','createMailer_p0','mailer',NULL),
(32,'default.user','2020-07-28 09:24:46.000000','default.user','2020-07-28 09:24:46.000000',1,'','createSmartResponse_p0','smartResponse',NULL),
(33,'default.user','2020-08-24 09:24:46.000000','default.user','2020-08-24 09:24:46.000000',1,'','updateMsgFilter_p0','keywordAlerts',NULL),
(34,'default.user','2020-07-28 09:24:46.000000','default.user','2020-07-28 09:24:46.000000',1,'','updateSmartResponse_p0','smartResponse',NULL),
(35,'default.user','2020-07-28 09:24:46.000000','default.user','2020-07-28 09:24:46.000000',1,'','updatePropertyValidation_p0','propertyValidation',NULL),
(36,'default.user','2020-07-28 09:24:46.000000','default.user','2020-07-28 09:24:46.000000',1,'','createPropertyValidation_p0','propertyValidation',NULL),
(37,'default.user','2020-01-24 11:24:15.262110','default.user','2020-01-24 11:25:15.262110',1,'','authorisedUrls_p0','authorisedUrls',''),
(38,'default.user','2020-10-15 14:08:14.129995','default.user','2020-10-15 14:08:14.129995',1,'','createSessionTimeout_p0','sessiontimeout',NULL),
(39,'default.user','2020-10-15 16:35:09.859460','default.user','2020-10-15 16:35:09.859460',1,'','updateSessionTimeout_p0','sessiontimeout',NULL),
(40,'default.user','2020-07-28 09:24:46.000000','default.user','2020-07-28 09:24:46.000000',1,'','updateAccountConfig_p0','accountConfig',NULL);




DELETE FROM menu
WHERE id !=0;

DELETE FROM node
WHERE id !=0;

DELETE FROM node_group
WHERE id !=0;

INSERT INTO `node_group` VALUES
('1','default.user','2020-07-28 09:24:46.000000','default.user','2020-07-28 09:24:46.000000','Agent Administration','{\"menuGroupName\": \"nav\", \"icon\":\"agentIcon\", \"toolTip\":\"\", \"dashboard\":true, \"display_order\":1, \"isActive\":true}'),
('2','default.user','2019-06-13 12:24:46.000000','default.user','2019-06-13 12:24:46.000000','Queues','{\"menuGroupName\": \"nav\", \"icon\":\"queueManagementIcon\", \"toolTip\":\"\", \"dashboard\":true, \"display_order\":1, \"isActive\":true}'),
('3','default.user','2019-06-13 12:24:46.000000','default.user','2019-06-13 12:24:46.000000','Skills','{\"menuGroupName\": \"nav\", \"icon\":\"skillsIcon\", \"toolTip\":\"\", \"dashboard\":true, \"display_order\":1, \"isActive\":true}'),
('4','default.user','2019-06-13 12:24:46.000000','default.user','2019-06-13 12:24:46.000000','Teams','{\"menuGroupName\": \"nav\", \"icon\":\"teamsIcon\", \"toolTip\":\"\", \"dashboard\":true, \"display_order\":1, \"isActive\":true}'),
('5','default.user','2019-06-13 12:24:46.000000','default.user','2019-06-13 12:24:46.000000','Advanced Admin','{\"menuGroupName\": \"nav\", \"icon\":\"adminConsoleIcon\", \"toolTip\":\"\", \"dashboard\":true, \"display_order\":1, \"isActive\":true}'),
('6','default.user','2019-06-13 12:24:46.000000','default.user','2019-06-13 12:24:46.000000','Tags','{\"menuGroupName\": \"nav\", \"icon\":\"tagsIcon\", \"toolTip\":\"\", \"dashboard\":true, \"display_order\":1, \"isActive\":true}'),
('7','default.user','2020-08-24 12:24:46.000000','default.user','2020-08-24 12:24:46.000000','Advanced Settings','{\"menuGroupName\": \"nav\", \"icon\":\"interactionIcon\", \"toolTip\":\"\", \"dashboard\":true, \"display_order\":1, \"isActive\":true}');

INSERT INTO `node` VALUES
(1,'default.user','2019-06-13 12:24:46.000000','default.user','2019-06-13 12:24:46.000000','1','GROUP',-1),
(2,'default.user','2019-06-13 12:24:46.000000','default.user','2019-06-13 12:24:46.000000','2','GROUP',-1),
(3,'default.user','2019-06-13 12:24:46.000000','default.user','2019-06-13 12:24:46.000000','3','GROUP',-1),
(4,'default.user','2019-06-13 12:24:46.000000','default.user','2019-06-13 12:24:46.000000','4','GROUP',-1),
(5,'default.user','2019-06-13 12:24:46.000000','default.user','2019-06-13 12:24:46.000000','5','GROUP',-1),
(6,'default.user','2020-08-24 12:24:46.000000','default.user','2020-08-24 12:24:46.000000','6','GROUP',-1),
(7,'default.user','2020-07-28 09:24:46.000000','default.user','2020-07-28 09:24:46.000000','7','GROUP',-1),
(11,'default.user','2019-06-13 12:24:46.000000','default.user','2019-06-13 12:24:46.000000','2','BOOKMARK',5),
(12,'default.user','2019-06-13 12:24:46.000000','default.user','2019-06-13 12:24:46.000000','queues','WORKFLOW',2),
(13,'default.user','2019-06-13 12:24:46.000000','default.user','2019-06-13 12:24:46.000000','1','BOOKMARK',5),
(14,'default.user','2019-06-13 12:24:46.000000','default.user','2019-06-13 12:24:46.000000','tags','WORKFLOW',6),
(15,'default.user','2019-06-13 12:24:46.000000','default.user','2019-06-13 12:24:46.000000','teams','WORKFLOW',4),
(17,'default.user','2019-06-13 12:24:46.000000','default.user','2019-06-13 12:24:46.000000','chathours','WORKFLOW',2),
(18,'default.user','2019-06-13 12:24:46.000000','default.user','2019-06-13 12:24:46.000000','skills','WORKFLOW',3),
(19,'default.user','2019-06-13 12:24:46.000000','default.user','2019-06-13 12:24:46.000000','STATest','WORKFLOW',3),
(20,'default.user','2019-06-13 12:24:46.000000','default.user','2019-06-13 12:24:46.000000','STALive','WORKFLOW',3),
(21,'default.user','2019-06-13 12:24:46.000000','default.user','2019-06-13 12:24:46.000000','accountConfig','WORKFLOW',7),
(22,'default.user','2019-06-13 12:24:46.000000','default.user','2019-06-13 12:24:46.000000','activeCards','WORKFLOW',7),
(23,'default.user','2020-10-15 12:24:46.000000','default.user','2020-10-15 12:24:46.000000','authorisedUrls','WORKFLOW',7),
(24,'default.user','2020-08-24 12:24:46.000000','default.user','2020-08-24 12:24:46.000000','maskingPatterns','WORKFLOW',7),
(25,'default.user','2020-10-24 12:24:46.000000','default.user','2020-10-24 12:24:46.000000','keywordAlerts','WORKFLOW',7),
(26,'default.user','2020-08-24 12:24:46.000000','default.user','2020-08-24 12:24:46.000000','leadConsole','WORKFLOW',7),
(27,'default.user','2020-08-24 12:24:46.000000','default.user','2020-08-24 12:24:46.000000','mailer','WORKFLOW',7),
(28,'default.user','2020-08-24 12:24:46.000000','default.user','2020-08-24 12:24:46.000000','passwordPolicy','WORKFLOW',7),
(29,'default.user','2021-03-01 09:24:46.000000','default.user','2021-03-01 09:24:46.000000','userTest','WORKFLOW',1),
(30,'default.user','2021-03-01 09:24:46.000000','default.user','2021-03-01 09:24:46.000000','userLive','WORKFLOW',1),
(31,'default.user','2020-07-28 09:24:46.000000','default.user','2020-07-28 09:24:46.000000','propertyConfig','WORKFLOW',7),
(32,'default.user','2020-07-28 09:24:46.000000','default.user','2020-07-28 09:24:46.000000','propertyValidation','WORKFLOW',7),
(33,'default.user','2020-08-24 12:24:46.000000','default.user','2020-08-24 12:24:46.000000','sessiontimeout','WORKFLOW',7),
(34,'default.user','2020-10-15 12:24:46.000000','default.user','2020-10-15 12:24:46.000000','smartResponse','WORKFLOW',7);

INSERT INTO `menu` VALUES
(1,'default.user','2019-06-13 12:24:46.000000','defaullt.user','2019-06-13 12:24:46.000000','nav',1,1),
(2,'default.user','2019-06-13 12:24:46.000000','defaullt.user','2019-06-13 12:24:46.000000','nav',1,2),
(3,'default.user','2019-06-13 12:24:46.000000','defaullt.user','2019-06-13 12:24:46.000000','nav',1,3),
(4,'default.user','2019-06-13 12:24:46.000000','defaullt.user','2019-06-13 12:24:46.000000','nav',1,4),
(5,'default.user','2019-06-13 12:24:46.000000','default.user','2019-06-13 12:24:46.000000','nav',1,5),
(6,'default.user','2020-08-24 12:24:46.000000','defaullt.user','2020-08-24 12:24:46.000000','nav',1,6),
(7,'default.user','2020-07-28 09:24:46.000000','default.user','2020-07-28 09:24:46.000000','nav',1,7);




DELETE FROM `action_dependencies`
WHERE action_id!=0;

DELETE FROM `action`
WHERE id!=0;

INSERT INTO `action` VALUES
(1,'default.user','2019-08-26 13:13:15.527428','testuser1@247.ai','2021-03-27 07:14:11.909630','{\"type\": \"REST\", \"method\": \"POST\", \"headers\": {\"apikey\": \"KtbDtdYYb7EUD4oajYCM8l9Nh7L0AgEc\", \"Content-Type\": \"application/json\"}, \"serviceId\": \"ohs\", \"uploadFile\": false, \"idLookupKeys\": null, \"relativePath\": \"/v1/ohs/client/${clientId}/account/${accountId}/queue/${entity}/hoop\", \"bodyDefinition\": {\"holidays\": \"somelist.[0]\", \"timeZone\": \"name\", \"exceptions\": \"admins.name\", \"operationalHours\": \"admins.email\"}, \"requestBodyKey\": null, \"restClientType\": null, \"idLookupRequired\": false, \"objectTranslator\": \"function translate(pageData, entityId) { var uiData = JSON.parse(pageData).chathours_p0; var ohsData = {}; ohsData.timeZone = uiData.timezone; ohsData.operationalHours = getOperationalHours(uiData.weekdays.supportweekdays); var allException = getHolidaysAndExceptions(uiData.exceptions.supportexceptionsSection.supportexceptions); ohsData.holidays = allException.holidays; ohsData.exceptions = allException.exceptions; return JSON.stringify(ohsData); } function getHolidaysAndExceptions(supportexceptions) { var holidays = []; var allDayOpen = []; var exceptions = []; for (var i = 0; i < supportexceptions.length; i++) { var se = supportexceptions[i ]; if (se.openAllDay) { allDayOpen.push(se.date); } else if (se.slots.length == 0) { holidays.push(se.date); } else { var shifts = processShifts(se.slots); var j = getIndexofSimilarShift(exceptions, shifts); if (j !== -1) { exceptions[j ].days.push(se.date); } else { var opHours = {}; opHours.days = [se.date ]; opHours.shifts = shifts; exceptions.push(opHours); } } } if (allDayOpen.length !== 0) { var opHours = {}; opHours.days = allDayOpen; opHours.shifts = [ { \\\"start\\\": \\\"0001\\\", \\\"end\\\": \\\"2359\\\" } ]; exceptions.push(opHours); } return { \\\"holidays\\\": holidays, \\\"exceptions\\\": exceptions }; } function getOperationalHours(supportweekdays) { var operationalHours = []; var days = [ \\\"sunday\\\", \\\"monday\\\", \\\"tuesday\\\", \\\"wednesday\\\", \\\"thursday\\\", \\\"friday\\\", \\\"saturday\\\" ]; var data = []; var allDayShift = []; var weekoffs = []; for (index = 0; index < supportweekdays.length; index++) { var day = supportweekdays[index ]; var shifts = []; var weekDay = days[index ]; if (day.openAllDay) { allDayShift.push(weekDay); } else if (day.slots.length == 0) { weekoffs.push(weekDay); continue; } else { var shifts = processShifts(day.slots); var j = getIndexofSimilarShift(operationalHours, shifts); if (j !== -1) { operationalHours[j ].days.push(weekDay); } else { var opHours = {}; opHours.days = [weekDay ]; opHours.shifts = shifts; operationalHours.push(opHours); } } data.push(day.openAllDay); } if (allDayShift.length !== 0) { var opHours = {}; opHours.days = allDayShift; opHours.shifts = [ { \\\"start\\\": \\\"0001\\\", \\\"end\\\": \\\"2359\\\" } ]; operationalHours.push(opHours); } return operationalHours; } function getIndexofSimilarShift(operationalHours, shifts) { var foundIndex = -1; for (var index = 0; index < operationalHours.length; index++) { var opHours = operationalHours[index ]; if (shifts.length !== opHours.shifts.length) continue; var sameShiftCount = 0; for (var i = 0; i < shifts.length; i++) { var shift = shifts[i ]; var fS = find(opHours.shifts, function (s) { return s.start == shift.start }); if (!fS || fS.end !== shift.end) { continue; } else ++sameShiftCount; } if (sameShiftCount === shifts.length) { foundIndex = index; } } return foundIndex; } function find(arr, cb) { var found = arr.filter(cb); if (found.length == 0) return undefined; else return found[ 0 ]; } function processShifts(slots) { for (var i = 0; i < slots.length; i++) { var slot = slots[i ]; slot.start = slot.start.split(\':\').map(function (item) { return item.trim() }).join(\\\"\\\"); slot.end = slot.end.split(\':\').map(function (item) { return item.trim(); }).join(\\\"\\\"); if (slot.end === \\\"0000\\\") { slot.end = \\\"2359\\\" } } return slots; }\", \"preFetchDefinition\": null}','UPDATE','Chathours','REST','{\"entityResponseTranslator\": \"var ApiResponse = function(_status, _message){ this.status = _status; this.message = _message; }; function translate(responseData) { try{ if(!responseData){ return new ApiResponse(\\\"ERROR\\\", \\\"Error while processing your request\\\"); } var uiData = JSON.parse(responseData); if(uiData != null && uiData.status == \\\"SUCCESS\\\"){ return new ApiResponse(uiData.status, \\\"\\\"); } else { return new ApiResponse(\\\"ERROR\\\", parseMsg(uiData.errorMessage)); } }catch(e){ return new ApiResponse(\\\"ERROR\\\", \\\"Error while processing your request\\\"); } } function parseMsg(msg) { var retVal=msg||\\\"\\\"; if(msg.indexOf(\\\"Heuristic\\\")!=-1){retVal= \\\"Entity that you are trying to map is not available in the target environment. Please ensure the mapped entities are published to the target environment.\\\";} else if(msg.indexOf(\\\"entity.invalid.id\\\")!=-1){ retVal=\\\"Entity that you are trying to update is not available in the target environment. Contact [24]7.ai support team.\\\";} return retVal;} \"}','{}'),
(2,'default.user','2019-08-27 17:40:40.404653','Jonathan.Paul@247-inc.com','2021-03-27 06:46:33.091799','{\"type\": \"REST\", \"method\": \"POST\", \"headers\": {\"apikey\": \"KtbDtdYYb7EUD4oajYCM8l9Nh7L0AgEc\", \"Content-Type\": \"application/x-www-form-urlencoded\"}, \"serviceId\": \"ohs\", \"uploadFile\": false, \"idLookupKeys\": null, \"relativePath\": \"/v1/ohs/adminEntity/update?entity=${body}\", \"bodyDefinition\": {}, \"requestBodyKey\": null, \"restClientType\": null, \"idLookupRequired\": false, \"objectTranslator\": \"function translate(pageData, entityId, clientId, accountId, env, prefetch) { var uiData = JSON.parse(pageData).updateTags_p0; var apiData = [ { \\\"entityBaseData\\\": { \\\"accountId\\\": accountId + \\\"-account-default\\\", \\\"clientId\\\": \\\"nemo-client-\\\" + clientId, \\\"entityType\\\": \\\"tag\\\", \\\"entityId\\\": entityId, \\\"entityDisplayName\\\": uiData.tagName }, \\\"entityAttributes\\\": { \\\"tagName\\\": uiData.tagName, \\\"tagType\\\": uiData.tagType } } ]; if (env==\\\"LIVE\\\") { var pfd = JSON.parse(prefetch); var liveTags = pfd.liveTags; for(var i=0;i<liveTags.length; i++){ if(liveTags[i].label==uiData.tagName) {apiData[0].entityBaseData.entityId=liveTags[i].name; break;}}  } return JSON.stringify(apiData); }\", \"preFetchDefinition\": {\"liveTags\": {\"env\": \"LIVE\", \"fetchFor\": \"listTag\", \"fetchType\": \"ENTITY_LISTING\"}}}','UPDATE','Update Tags','REST','{\"entityResponseTranslator\": \"var ApiResponse = function(_status, _message){ this.status = _status; this.message = _message; }; function translate(responseData) { try{ if(!responseData){ return new ApiResponse(\\\"ERROR\\\", \\\"Error while processing your request\\\"); } var uiData = JSON.parse(responseData); if(uiData != null && uiData.status == \\\"SUCCESS\\\" && uiData.data != null){ return new ApiResponse(uiData.status, uiData.data.entityId); } else { return new ApiResponse(\\\"ERROR\\\", parseMsg(uiData.errorMessage)); } }catch(e){ return new ApiResponse(\\\"ERROR\\\", \\\"Error while processing your request\\\"); } } function parseMsg(msg) { var retVal=msg||\\\"\\\"; if(msg.indexOf(\\\"Heuristic\\\")!=-1){retVal= \\\"Entity that you are trying to map is not available in the target environment. Please ensure the mapped entities are published to the target environment.\\\";} else if(msg.indexOf(\\\"entity.invalid.id\\\")!=-1){ retVal=\\\"Entity that you are trying to update is not available in the target environment. Contact [24]7.ai support team.\\\";} return retVal;} \"}','{}'),
(3,'default.user','2019-08-26 13:13:15.527428','default.user','2019-08-26 16:46:57.805806','{\"type\": \"REST\", \"method\": \"POST\", \"headers\": {\"Content-Type\": \"application/json\"}, \"serviceId\": \"assist\", \"relativePath\": \"/en/rest/hierarchy/queue/${entity}/adf\", \"bodyDefinition\": {}, \"objectTranslator\": \"function translate(pageData) { var uiData = JSON.parse(pageData).adf_p0; var adfData = uiData.adf; adfData.i18n = uiData.i18n; return JSON.stringify(adfData); }\"}','UPDATE','Assist adf push action','REST','{\"entityResponseTranslator\": \"var ApiResponse = function(_status, _message){ this.status = _status; this.message = _message; }; function translate(responseData) { try{ if(!responseData){ return new ApiResponse(\'ERROR\', \'Error while processing your request\'); } var uiData = JSON.parse(responseData); if(uiData != null && uiData.status == \'SUCCESS\' && uiData.data != null){ return new ApiResponse(uiData.status, uiData.data.entityId); } else { return new ApiResponse(\'ERROR\', uiData.errorMessage||\'System error while publishing\'); } }catch(e){ return new ApiResponse(\'ERROR\', \'Error while processing your request\'); } } \"}',NULL),
(4,'default.user','2019-09-19 17:37:31.168947','testuser2@247.ai','2021-03-26 06:29:23.380534','{\"type\": \"REST\", \"method\": \"POST\", \"headers\": {\"apikey\": \"KtbDtdYYb7EUD4oajYCM8l9Nh7L0AgEc\", \"Content-Type\": \"application/x-www-form-urlencoded\"}, \"serviceId\": \"ohs\", \"uploadFile\": false, \"idLookupKeys\": null, \"relativePath\": \"/v1/ohs/adminEntity/create?entity=${body}\", \"bodyDefinition\": {}, \"requestBodyKey\": null, \"restClientType\": null, \"idLookupRequired\": false, \"objectTranslator\": \"function translate(pageData, entityId, clientId, accountId, env, prefetch) { var uiData = JSON.parse(pageData).createTeams_p0; var apiData = [{ \\\"entityBaseData\\\": { \\\"accountId\\\": accountId + \\\"-account-default\\\", \\\"clientId\\\": \\\"nemo-client-\\\" + clientId, \\\"entityType\\\": \\\"team\\\" }, \\\"entityAttributes\\\": { \\\"teamName\\\": uiData.teamName, \\\"accountId\\\": accountId + \\\"-account-default\\\" } }]; if (uiData.teamTags.join(\\\",\\\") !== \\\"\\\") { uiData.teamTags = updateTest2LiveTags(uiData.teamTags, env, prefetch); apiData[0].entityAttributes.tags = uiData.teamTags.join(\\\",\\\"); } return JSON.stringify(apiData); } function updateTest2LiveTags(tags, env, prefetch) {if (env == \\\"LIVE\\\") { var pfd = JSON.parse(prefetch); var liveTags = pfd.liveTags; var testTags = pfd.testTags; for (var l = 0; l < tags.length; l++) { var liveId = tags[l]; for (var i = 0; i < testTags.length; i++) { if ( testTags[i].name == tags[l]) { for (var j = 0; j < liveTags.length; j++) { if (testTags[i].label == liveTags[j].label) { liveId = liveTags[j].name; break; } } break; } } tags[l] = liveId; } } return tags} \", \"preFetchDefinition\": {\"liveTags\": {\"env\": \"LIVE\", \"fetchFor\": \"listTag\", \"fetchType\": \"ENTITY_LISTING\"}, \"testTags\": {\"env\": \"TEST\", \"fetchFor\": \"listTag\", \"fetchType\": \"ENTITY_LISTING\"}}}','CREATE','create team action','REST','{\"entityResponseTranslator\": \"var ApiResponse = function(_status, _message){ this.status = _status; this.message = _message; }; function translate(responseData) { try{ if(!responseData){ return new ApiResponse(\\\"ERROR\\\", \\\"Error while processing your request\\\"); } var uiData = JSON.parse(responseData); if(uiData != null && uiData.status == \\\"SUCCESS\\\" && uiData.data != null){ return new ApiResponse(uiData.status, uiData.data.entityId); } else { return new ApiResponse(\\\"ERROR\\\", parseMsg(uiData.errorMessage)); } }catch(e){ return new ApiResponse(\\\"ERROR\\\", \\\"Error while processing your request\\\"); } } function parseMsg(msg) { var retVal=msg||\\\"\\\"; if(msg.indexOf(\\\"Heuristic\\\")!=-1){retVal= \\\"Entity that you are trying to map is not available in the target environment. Please ensure the mapped entities are published to the target environment.\\\";} else if(msg.indexOf(\\\"entity.invalid.id\\\")!=-1){ retVal=\\\"Entity that you are trying to update is not available in the target environment. Contact [24]7.ai support team.\\\";} return retVal;} \"}','{}'),
(5,'default.user','2019-09-19 17:37:31.168947','Jonathan.Paul@247-inc.com','2021-03-27 06:41:35.787613','{\"type\": \"REST\", \"method\": \"POST\", \"headers\": {\"apikey\": \"KtbDtdYYb7EUD4oajYCM8l9Nh7L0AgEc\", \"Content-Type\": \"application/x-www-form-urlencoded\"}, \"serviceId\": \"ohs\", \"uploadFile\": false, \"idLookupKeys\": null, \"relativePath\": \"/v1/ohs/adminEntity/update?entity=${body}\", \"bodyDefinition\": {}, \"requestBodyKey\": null, \"restClientType\": null, \"idLookupRequired\": false, \"objectTranslator\": \"function translate( pageData, entityId,clientId , accountId, env, prefetch){ var uiData= JSON.parse(pageData).updateTeams_p0; var apiData=[{\\\"entityBaseData\\\":{\\\"accountId\\\": accountId+\\\"-account-default\\\", \\\"clientId\\\": \\\"nemo-client-\\\"+clientId, \\\"entityType\\\": \\\"team\\\", \\\"entityId\\\": entityId },\\\"entityAttributes\\\": {\\\"teamName\\\": uiData.teamName, \\\"accountId\\\": accountId+\\\"-account-default\\\" }}]; if(uiData.teamTags.join(\\\",\\\")!==\\\"\\\"){ uiData.teamTags = updateTest2LiveTags(uiData.teamTags, env, prefetch); apiData[0].entityAttributes.tags=uiData.teamTags.join(\\\",\\\") }; return JSON.stringify(apiData);} function updateTest2LiveTags(tags, env, prefetch) {if (env == \\\"LIVE\\\") { var pfd = JSON.parse(prefetch); var liveTags = pfd.liveTags; var testTags = pfd.testTags; for (var l = 0; l < tags.length; l++) { var liveId = tags[l]; for (var i = 0; i < testTags.length; i++) { if ( testTags[i].name == tags[l]) { for (var j = 0; j < liveTags.length; j++) { if (testTags[i].label == liveTags[j].label) { liveId = liveTags[j].name; break; } } break; } } tags[l] = liveId; } } return tags} \", \"preFetchDefinition\": {\"liveTags\": {\"env\": \"LIVE\", \"fetchFor\": \"listTag\", \"fetchType\": \"ENTITY_LISTING\"}, \"testTags\": {\"env\": \"TEST\", \"fetchFor\": \"listTag\", \"fetchType\": \"ENTITY_LISTING\"}}}','UPDATE','Update team action','REST','{\"entityResponseTranslator\": \"var ApiResponse = function(_status, _message){ this.status = _status; this.message = _message; }; function translate(responseData) { try{ if(!responseData){ return new ApiResponse(\\\"ERROR\\\", \\\"Error while processing your request\\\"); } var uiData = JSON.parse(responseData); if(uiData != null && uiData.status == \\\"SUCCESS\\\" && uiData.data != null){ return new ApiResponse(uiData.status, uiData.data.entityId); } else { return new ApiResponse(\\\"ERROR\\\", parseMsg(uiData.errorMessage)); } }catch(e){ return new ApiResponse(\\\"ERROR\\\", \\\"Error while processing your request\\\"); } } function parseMsg(msg) { var retVal=msg||\\\"\\\"; if(msg.indexOf(\\\"Heuristic\\\")!=-1){retVal= \\\"Entity that you are trying to map is not available in the target environment. Please ensure the mapped entities are published to the target environment.\\\";} else if(msg.indexOf(\\\"entity.invalid.id\\\")!=-1){ retVal=\\\"Entity that you are trying to update is not available in the target environment. Contact [24]7.ai support team.\\\";} return retVal;} \"}','{}'),
(6,'default.user','2019-09-19 17:37:31.168947','testuser1@247.ai','2021-03-26 05:53:51.539654','{\"type\": \"REST\", \"method\": \"POST\", \"headers\": {\"apikey\": \"KtbDtdYYb7EUD4oajYCM8l9Nh7L0AgEc\", \"Content-Type\": \"application/x-www-form-urlencoded\"}, \"serviceId\": \"ohs\", \"uploadFile\": false, \"idLookupKeys\": null, \"relativePath\": \"/v1/ohs/adminEntity/create?entity=${body}\", \"bodyDefinition\": {}, \"requestBodyKey\": null, \"restClientType\": null, \"idLookupRequired\": false, \"objectTranslator\": \"function translate(pageData, entityId, clientId, accountId, env) { var uiData = JSON.parse(pageData).createTags_p0; var apiData = [ { \\\"entityBaseData\\\": { \\\"accountId\\\": accountId + \\\"-account-default\\\", \\\"clientId\\\": \\\"nemo-client-\\\" + clientId, \\\"entityType\\\": \\\"tag\\\", \\\"entityDisplayName\\\": uiData.tagName }, \\\"entityAttributes\\\": { \\\"tagName\\\": uiData.tagName, \\\"tagType\\\": uiData.tagType } }]; return JSON.stringify(apiData); }\", \"preFetchDefinition\": null}','CREATE','Create tags action','REST','{\"entityResponseTranslator\": \"var ApiResponse = function(_status, _message){ this.status = _status; this.message = _message; }; function translate(responseData) { try{ if(!responseData){ return new ApiResponse(\\\"ERROR\\\", \\\"Error while processing your request\\\"); } var uiData = JSON.parse(responseData); if(uiData != null && uiData.status == \\\"SUCCESS\\\" && uiData.data != null){ return new ApiResponse(uiData.status, uiData.data.entityId); } else { return new ApiResponse(\\\"ERROR\\\", parseMsg(uiData.errorMessage)); } }catch(e){ return new ApiResponse(\\\"ERROR\\\", \\\"Error while processing your request\\\"); } } function parseMsg(msg) { var retVal=msg||\\\"\\\"; if(msg.indexOf(\\\"Heuristic\\\")!=-1){retVal= \\\"Entity that you are trying to map is not available in the target environment. Please ensure the mapped entities are published to the target environment.\\\";} else if(msg.indexOf(\\\"entity.invalid.id\\\")!=-1){ retVal=\\\"Entity that you are trying to update is not available in the target environment. Contact [24]7.ai support team.\\\";} return retVal;} \"}','{}'),
(8,'default.user','2019-08-26 13:13:15.527428','Jonathan.Paul@247-inc.com','2021-03-27 06:52:17.645485','{\"type\": \"REST\", \"method\": \"POST\", \"headers\": {\"Content-Type\": \"application/x-www-form-urlencoded\"}, \"serviceId\": \"assist\", \"uploadFile\": false, \"idLookupKeys\": null, \"relativePath\": \"/en/admin/rest/ohs/update?entity=${body}\", \"bodyDefinition\": {}, \"requestBodyKey\": null, \"restClientType\": null, \"idLookupRequired\": false, \"objectTranslator\": \"function translate(pageData, entityId, clientId, accountId, env) { var uiData = JSON.parse(pageData).updateSkill_p0; var apiData = [ { \\\"entityBaseData\\\": { \\\"entityDisplayName\\\": uiData.skillName, \\\"entityId\\\": uiData.skillId, \\\"accountId\\\": accountId + \\\"-account-default\\\", \\\"clientId\\\": \\\"nemo-client\\\" + clientId, \\\"entityType\\\": \\\"skill\\\" }, \\\"entityAttributes\\\": { \\\"skillName\\\": uiData.skillName, \\\"skillDesc\\\": uiData.skillDesc, \\\"account\\\": accountId + \\\"-account-default\\\", \\\"users\\\": \\\"[]\\\" } } ]; return JSON.stringify(apiData); }\", \"preFetchDefinition\": null}','UPDATE','Skill updation action','REST','{\"entityResponseTranslator\": \"var ApiResponse = function(_status, _message){ this.status = _status; this.message = _message; }; function translate(responseData) { try{ if(!responseData){ return new ApiResponse(\'ERROR\', \'Error while processing your request\'); } var uiData = JSON.parse(responseData); if(uiData != null && uiData.status == \'SUCCESS\' && uiData.data != null){ return new ApiResponse(uiData.status, uiData.data.entityId); } else { return new ApiResponse(\'ERROR\', uiData.errorMessage||\'System error while publishing\'); } }catch(e){ return new ApiResponse(\'ERROR\', \'Error while processing your request\'); } } \"}','{}'),
(9,'default.user','2019-08-26 13:13:15.527428','Manasa.B@247-inc.com','2021-03-25 10:21:56.583327','{\"type\": \"REST\", \"method\": \"POST\", \"headers\": {\"Content-Type\": \"application/x-www-form-urlencoded\"}, \"serviceId\": \"assist\", \"uploadFile\": false, \"idLookupKeys\": null, \"relativePath\": \"/en/admin/rest/ohs/create?entity=${body}\", \"bodyDefinition\": {}, \"requestBodyKey\": null, \"restClientType\": null, \"idLookupRequired\": false, \"objectTranslator\": \"function translate( pageData, entityId, clientId, accountId, env ){ var uiData= JSON.parse(pageData).createSkills_p0; var apiData = [{\\\"entityBaseData\\\":{\\\"entityDisplayName\\\": uiData.skillName, \\\"entityId\\\":\\\"\\\", \\\"accountId\\\": accountId+\\\"-account-default\\\", \\\"clientId\\\": \\\"nemo-client\\\"+clientId, \\\"entityType\\\": \\\"skill\\\" }, \\\"entityAttributes\\\": {\\\"skillName\\\": uiData.skillName, \\\"skillDesc\\\": uiData.skillDesc, \\\"account\\\": accountId+\\\"-account-default\\\", \\\"users\\\":\\\"[]\\\" }}]; return JSON.stringify(apiData); }\", \"preFetchDefinition\": null}','CREATE','Skill creation action','REST','{\"entityResponseTranslator\": \"var ApiResponse = function(_status, _message){ this.status = _status; this.message = _message; }; function translate(responseData) { try{ if(!responseData){ return new ApiResponse(\'ERROR\', \'Error while processing your request\'); } var uiData = JSON.parse(responseData); if(uiData != null && uiData.status == \'SUCCESS\' && uiData.data != null){ return new ApiResponse(uiData.status, uiData.data.entityId); } else { return new ApiResponse(\'ERROR\', uiData.errorMessage||\'System error while publishing\'); } }catch(e){ return new ApiResponse(\'ERROR\', \'Error while processing your request\'); } } \"}','{}'),
(12,'default.user','2019-08-26 13:13:15.527428','testuser1@247.ai','2021-03-27 06:35:08.105412','{\"type\": \"REST\", \"method\": \"POST\", \"headers\": {\"apikey\": \"KtbDtdYYb7EUD4oajYCM8l9Nh7L0AgEc\", \"Content-Type\": \"application/x-www-form-urlencoded\"}, \"serviceId\": \"ohs\", \"uploadFile\": false, \"idLookupKeys\": null, \"relativePath\": \"/v1/ohs/adminEntity/create?entity=${body}\", \"bodyDefinition\": {}, \"requestBodyKey\": null, \"restClientType\": null, \"idLookupRequired\": false, \"objectTranslator\": \"function translate(pageData, entityId, clientId, accountId, env, prefetch) { var uiData = JSON.parse(pageData).createQueues_p0.tabsField; var uiDataB = uiData[0]; var uiDataA = uiData[1]; var apiData = [ { \\\"entityAttributes\\\": { \\\"accountId\\\": accountId + \\\"-account-default\\\", \\\"queueName\\\": uiDataB.queueName, \\\"queueDesc\\\": uiDataB.queueDesc, \\\"queueType\\\": uiDataA.assistConfig.queueType }, \\\"entityBaseData\\\": { \\\"accountId\\\": accountId + \\\"-account-default\\\", \\\"clientId\\\": \\\"nemo-client-\\\" + clientId, \\\"entityDisplayName\\\": uiDataB.queueName, \\\"entityType\\\": \\\"queue\\\" } } ]; if (uiDataB.queueTags && uiDataB.queueTags.join(\\\",\\\") !== \\\"\\\") { uiDataB.queueTags = updateTest2LiveTags(uiDataB.queueTags, env, prefetch); apiData[0].entityAttributes.tags = uiDataB.queueTags.join(\\\",\\\") }; return JSON.stringify(apiData);} function updateTest2LiveTags(tags, env, prefetch) {if (env == \\\"LIVE\\\") { var pfd = JSON.parse(prefetch); var liveTags = pfd.liveTags; var testTags = pfd.testTags; for (var l = 0; l < tags.length; l++) { var liveId = tags[l]; for (var i = 0; i < testTags.length; i++) { if ( testTags[i].name == tags[l]) { for (var j = 0; j < liveTags.length; j++) { if (testTags[i].label == liveTags[j].label) { liveId = liveTags[j].name; break; } } break; } } tags[l] = liveId; } } return tags} \", \"preFetchDefinition\": {\"liveTags\": {\"env\": \"LIVE\", \"fetchFor\": \"listTag\", \"fetchType\": \"ENTITY_LISTING\"}, \"testTags\": {\"env\": \"TEST\", \"fetchFor\": \"listTag\", \"fetchType\": \"ENTITY_LISTING\"}}}','CREATE','ohs queue creation action','REST','{\"entityResponseTranslator\": \"var ApiResponse = function(_status, _message){ this.status = _status; this.message = _message; }; function translate(responseData) { try{ if(!responseData){ return new ApiResponse(\\\"ERROR\\\", \\\"Error while processing your request\\\"); } var uiData = JSON.parse(responseData); if(uiData != null && uiData.status == \\\"SUCCESS\\\" && uiData.data != null){ return new ApiResponse(uiData.status, uiData.data.entityId); } else { return new ApiResponse(\\\"ERROR\\\", parseMsg(uiData.errorMessage)); } }catch(e){ return new ApiResponse(\\\"ERROR\\\", \\\"Error while processing your request\\\"); } } function parseMsg(msg) { var retVal=msg||\\\"\\\"; if(msg.indexOf(\\\"Heuristic\\\")!=-1){retVal= \\\"Entity that you are trying to map is not available in the target environment. Please ensure the mapped entities are published to the target environment.\\\";} else if(msg.indexOf(\\\"entity.invalid.id\\\")!=-1){ retVal=\\\"Entity that you are trying to update is not available in the target environment. Contact [24]7.ai support team.\\\";} return retVal;} \"}','{}'),
(13,'default.user','2019-08-26 13:13:15.527428','testuser1@247.ai','2021-03-27 06:35:08.105068','{\"type\": \"REST\", \"method\": \"POST\", \"headers\": {\"Content-Type\": \"application/json\"}, \"serviceId\": \"assist\", \"uploadFile\": false, \"idLookupKeys\": null, \"relativePath\": \"/en/admin/rest/ohs/notify\", \"bodyDefinition\": {}, \"requestBodyKey\": null, \"restClientType\": null, \"idLookupRequired\": false, \"objectTranslator\": \"function translate(pageData) { return JSON.stringify(\\\"\\\"); }\", \"preFetchDefinition\": null}','CREATE','assist notify action','REST','{\"entityResponseTranslator\": \"var ApiResponse = function(_status, _message){ this.status = _status; this.message = _message; }; function translate(responseData) { try{ if(!responseData){ return new ApiResponse(\'ERROR\', \'Error while processing your request\'); } var uiData = JSON.parse(responseData); if(uiData != null && uiData.status == \'SUCCESS\' ){ return new ApiResponse(uiData.status); } else { return new ApiResponse(\'ERROR\', uiData.errorMessage); } }catch(e){ return new ApiResponse(\'ERROR\', \'Error while processing your request\'); } }\"}','{}'),
(14,'default.user','2019-08-26 13:13:15.527428','testuser1@247.ai','2021-03-27 06:59:50.269468','{\"type\": \"REST\", \"method\": \"POST\", \"headers\": {\"Content-Type\": \"application/x-www-form-urlencoded\"}, \"serviceId\": \"assist\", \"uploadFile\": false, \"idLookupKeys\": null, \"relativePath\": \"/en/admin/rest/ohs/update\", \"bodyDefinition\": {}, \"requestBodyKey\": \"entity\", \"restClientType\": \"REST_TEMPLATE\", \"idLookupRequired\": false, \"objectTranslator\": \"function translate(pageData, entityId, clientId, accountId, env) { var uiData = JSON.parse(pageData).updateQueues_p0.tabsField; var uiDataB = uiData[0]; var uiDataA = uiData[1].assistConfig; var apiData = [ { \\\"entityBaseData\\\": { \\\"accountId\\\": accountId + \\\"-account-default\\\", \\\"entityType\\\": \\\"chatQueue\\\", \\\"entityId\\\": uiDataB.queueId, \\\"entityDisplayName\\\": uiDataB.queueName, \\\"clientId\\\": clientId }, \\\"entityAttributes\\\": { \\\"queueLength\\\": uiDataA.queueLength, \\\"queueTimeOut\\\": uiDataA.queueTimeOut, \\\"resourceFree\\\": uiDataA.routeOn, \\\"conversationalInterval\\\": uiDataA.conversationalInterval, \\\"agentAffinityPeriod\\\": uiDataA.agentAffinityPeriod, \\\"visitorInactivityPeriod\\\": uiDataA.visitorInactivity, \\\"agentResponseTime\\\": uiDataA.agentResponse, \\\"typingEnabled\\\": uiDataA.typingEnabled == \\\"true\\\", \\\"typingTimeout\\\": uiDataA.typingTimeout, \\\"isAccountQueue\\\": uiDataA.isAccountQueue == \\\"true\\\", \\\"agentFTShare\\\": uiDataA.fileTransfer.FTVisitor, \\\"visitorMailerConfigKey\\\": uiDataA.mailer.visitorConfig, \\\"agentMailerConfigKey\\\": uiDataA.mailer.agentConfig, \\\"coViewEnabled\\\": uiDataA.coBrowse.coViewEnabled == \\\"true\\\", \\\"coBrowseEnabled\\\": uiDataA.coBrowse.coBrowseEnabled == \\\"true\\\", \\\"interLOBEnabled\\\": uiDataA.interLob.acceptInterLob == \\\"true\\\", \\\"isOutboundLOBQueueTransferEnabled\\\": uiDataA.interLob.outboundLob == \\\"true\\\", \\\"agentAffinityPeriod\\\": uiDataA.agentAffinityPeriod, \\\"conversationalInterval\\\": uiDataA.conversationalInterval, \\\"dispositionFormContent\\\": uiDataA.queueType === \\\"MESSAGING\\\" ? \\\"\\\" : uiDataA.dispositionForm, \\\"crmScriptContent\\\": uiDataA.crmIntg.crmScriptContent, \\\"crmDisplayText\\\": uiDataA.crmIntg.crmLaunchBtn, \\\"crmAppId\\\": uiDataA.crmIntg.crmAppId, \\\"isStandardWrapUpRequired\\\": uiDataA.queueType === \\\"MESSAGING\\\" ? true : (uiDataA.useStandardWrapUp == \\\"true\\\"), \\\"avgChatDuration\\\": \\\"10\\\", \\\"waitTimeBufferFactor\\\": \\\"1.0\\\", \\\"chatDurationRefreshFactor\\\": \\\"3.0\\\" } } ]; if (uiDataA.skill && uiDataA.skill.join(\\\",\\\") !== \\\"\\\") { apiData[0].entityAttributes.skill = uiDataA.skill.join(\\\",\\\") }; return JSON.stringify(apiData); }\", \"preFetchDefinition\": null}','UPDATE','assist queue update action','REST','{\"entityResponseTranslator\": \"var ApiResponse = function(_status, _message){ this.status = _status; this.message = _message; }; function translate(responseData) { try{ if(!responseData){ return new ApiResponse(\\\"ERROR\\\", \\\"Error while processing your request\\\"); } var uiData = JSON.parse(responseData); if(uiData != null && uiData.status == \\\"SUCCESS\\\" && uiData.data != null){ return new ApiResponse(uiData.status, uiData.data.entityId); } else { return new ApiResponse(\\\"ERROR\\\", parseMsg(uiData.errorMessage)); } }catch(e){ return new ApiResponse(\\\"ERROR\\\", \\\"Error while processing your request\\\"); } } function parseMsg(msg) { var retVal=msg||\\\"\\\"; if(msg.indexOf(\\\"Heuristic\\\")!=-1){retVal= \\\"Entity that you are trying to map is not available in the target environment. Please ensure the mapped entities are published to the target environment.\\\";} else if(msg.indexOf(\\\"entity.invalid.id\\\")!=-1){ retVal=\\\"Entity that you are trying to update is not available in the target environment. Contact [24]7.ai support team.\\\";} return retVal;} \"}','{\"POLL\": {\"type\": \"POLL\", \"retryCount\": 5, \"retryInterval\": 30000}}'),
(15,'default.user','2019-08-26 13:13:15.527428','Sowjanya.R@247-inc.com','2021-03-22 05:29:51.079761','{\"type\": \"REST\", \"method\": \"POST\", \"headers\": {\"Content-Type\": \"application/json\"}, \"serviceId\": \"assist\", \"uploadFile\": false, \"idLookupKeys\": null, \"relativePath\": \"/en/admin/rest/ohs/notify\", \"bodyDefinition\": {}, \"requestBodyKey\": null, \"restClientType\": null, \"idLookupRequired\": false, \"objectTranslator\": \"function translate(pageData) { return JSON.stringify(\\\"\\\"); }\", \"preFetchDefinition\": null}','UPDATE','assist notify action','REST','{\"entityResponseTranslator\": \"var ApiResponse = function(_status, _message){ this.status = _status; this.message = _message; }; function translate(responseData) { try{ if(!responseData){ return new ApiResponse(\'ERROR\', \'Error while processing your request\'); } var uiData = JSON.parse(responseData); if(uiData != null && uiData.status == \'SUCCESS\' ){ return new ApiResponse(uiData.status); } else { return new ApiResponse(\'ERROR\', uiData.errorMessage); } }catch(e){ return new ApiResponse(\'ERROR\', \'Error while processing your request\'); } }\"}','{}'),
(16,'default.user','2019-08-26 13:13:15.527428','testuser1@247.ai','2021-03-27 06:59:50.270969','{\"type\": \"REST\", \"method\": \"POST\", \"headers\": {\"apikey\": \"D4oajYCM8l9Nh7L0AgEc\", \"Content-Type\": \"application/x-www-form-urlencoded\"}, \"serviceId\": \"ohs\", \"uploadFile\": false, \"idLookupKeys\": null, \"relativePath\": \"/v1/ohs/adminEntity/update?entity=${body}\", \"bodyDefinition\": {}, \"requestBodyKey\": null, \"restClientType\": null, \"idLookupRequired\": false, \"objectTranslator\": \"function translate(pageData, entityId, clientId, accountId, env, prefetch) { var uiDataB = JSON.parse(pageData).updateQueues_p0.tabsField[0]; var uiDataA = JSON.parse(pageData).updateQueues_p0.tabsField[1].assistConfig; var apiData = [ { \\\"entityAttributes\\\": { \\\"accountId\\\": accountId + \\\"-account-default\\\", \\\"queueName\\\": uiDataB.queueName, \\\"queueDesc\\\": uiDataB.queueDesc, \\\"queueType\\\": uiDataA.queueType }, \\\"entityBaseData\\\": { \\\"accountId\\\": accountId + \\\"-account-default\\\", \\\"clientId\\\": \\\"nemo-client-\\\" + clientId, \\\"entityDisplayName\\\": uiDataB.queueName, \\\"entityType\\\": \\\"queue\\\", \\\"entityId\\\": uiDataB.queueId } } ]; if (uiDataB.queueTags && uiDataB.queueTags.join(\\\",\\\") !== \\\"\\\") { uiDataB.queueTags = updateTest2LiveTags(uiDataB.queueTags, env, prefetch); apiData[0].entityAttributes.tags = uiDataB.queueTags.join(\\\",\\\") }; return JSON.stringify(apiData);} function updateTest2LiveTags(tags, env, prefetch) {if (env == \\\"LIVE\\\") { var pfd = JSON.parse(prefetch); var liveTags = pfd.liveTags; var testTags = pfd.testTags; for (var l = 0; l < tags.length; l++) { var liveId = tags[l]; for (var i = 0; i < testTags.length; i++) { if ( testTags[i].name == tags[l]) { for (var j = 0; j < liveTags.length; j++) { if (testTags[i].label == liveTags[j].label) { liveId = liveTags[j].name; break; } } break; } } tags[l] = liveId; } } return tags} \", \"preFetchDefinition\": {\"liveTags\": {\"env\": \"LIVE\", \"fetchFor\": \"listTag\", \"fetchType\": \"ENTITY_LISTING\"}, \"testTags\": {\"env\": \"TEST\", \"fetchFor\": \"listTag\", \"fetchType\": \"ENTITY_LISTING\"}}}','UPDATE','ohs update queue action','REST','{\"entityResponseTranslator\": \"var ApiResponse = function(_status, _message){ this.status = _status; this.message = _message; }; function translate(responseData) { try{ if(!responseData){ return new ApiResponse(\\\"ERROR\\\", \\\"Error while processing your request\\\"); } var uiData = JSON.parse(responseData); if(uiData != null && uiData.status == \\\"SUCCESS\\\" && uiData.data != null){ return new ApiResponse(uiData.status, uiData.data.entityId); } else { return new ApiResponse(\\\"ERROR\\\", parseMsg(uiData.errorMessage)); } }catch(e){ return new ApiResponse(\\\"ERROR\\\", \\\"Error while processing your request\\\"); } } function parseMsg(msg) { var retVal=msg||\\\"\\\"; if(msg.indexOf(\\\"Heuristic\\\")!=-1){retVal= \\\"Entity that you are trying to map is not available in the target environment. Please ensure the mapped entities are published to the target environment.\\\";} else if(msg.indexOf(\\\"entity.invalid.id\\\")!=-1){ retVal=\\\"Entity that you are trying to update is not available in the target environment. Contact [24]7.ai support team.\\\";} return retVal;} \"}','{}'),
(17,'default.user','2019-08-26 13:13:15.527428','Manasa.B@247-inc.com','2021-03-25 10:27:43.808030','{\"type\": \"REST\", \"method\": \"POST\", \"headers\": {\"Content-Type\": \"application/x-www-form-urlencoded\"}, \"serviceId\": \"assist\", \"uploadFile\": false, \"idLookupKeys\": null, \"relativePath\": \"/en/admin/rest/ohs/update?entity=${body}\", \"bodyDefinition\": {}, \"requestBodyKey\": null, \"restClientType\": null, \"idLookupRequired\": false, \"objectTranslator\": \"function translate(pageData, entityId, clientId, accountId, env) { try{ var uiData = JSON.parse(pageData).STALive_p0; var ConfigMapper = uiData.ConfigMapper; var users = []; users = ConfigMapper.map(function (item) { var skillUser = item ? { userId: item.id, skillLevelId: uiData.skillId + \\\"-\\\" + (item.key ? item.key.toUpperCase() : \\\"HIGH\\\") } : null; return skillUser; }); var apiData = [ { \\\"entityBaseData\\\": { \\\"entityId\\\": uiData.skillId, \\\"accountId\\\": accountId + \\\"-account-default\\\", \\\"clientId\\\": \\\"nemo-client-\\\" + clientId, \\\"entityType\\\": \\\"skill\\\" }, \\\"entityAttributes\\\": { \\\"account\\\": accountId + \\\"-account-default\\\", \\\"skillName\\\": uiData.skillName, \\\"skillDesc\\\": uiData.skillDesc, \\\"users\\\": JSON.stringify(users) } } ]; return JSON.stringify(apiData); } catch (e) {} return null; }\", \"preFetchDefinition\": null}','UPDATE','Skill to agents LIVE Update ','REST','{\"entityResponseTranslator\": \"var ApiResponse = function(_status, _message){ this.status = _status; this.message = _message; }; function translate(responseData) { try{ if(!responseData){ return new ApiResponse(\\\"ERROR\\\", \\\"Error while processing your request\\\"); } var uiData = JSON.parse(responseData); if(uiData != null && uiData.status == \\\"SUCCESS\\\" && uiData.data != null){ return new ApiResponse(uiData.status, uiData.data.entityId); } else { return new ApiResponse(\\\"ERROR\\\", parseMsg(uiData.errorMessage)); } }catch(e){ return new ApiResponse(\\\"ERROR\\\", \\\"Error while processing your request\\\"); } } function parseMsg(msg) { var retVal=msg||\\\"\\\"; if(msg.indexOf(\\\"Heuristic\\\")!=-1){retVal= \\\"Entity that you are trying to map is not available in the target environment. Please ensure the mapped entities are published to the target environment.\\\";} else if(msg.indexOf(\\\"entity.invalid.id\\\")!=-1){ retVal=\\\"Entity that you are trying to update is not available in the target environment. Contact [24]7.ai support team.\\\";} return retVal;} \"}','{}'),
(18,'default.user','2019-08-26 13:13:15.527428','Manasa.B@247-inc.com','2021-03-25 10:25:13.984020','{\"type\": \"REST\", \"method\": \"POST\", \"headers\": {\"Content-Type\": \"application/x-www-form-urlencoded\"}, \"serviceId\": \"assist\", \"uploadFile\": false, \"idLookupKeys\": null, \"relativePath\": \"/en/admin/rest/ohs/update?entity=${body}\", \"bodyDefinition\": {}, \"requestBodyKey\": null, \"restClientType\": null, \"idLookupRequired\": false, \"objectTranslator\": \"function translate(pageData, entityId, clientId, accountId, env) { try{ var uiData = JSON.parse(pageData).STATest_p0; var ConfigMapper = uiData.ConfigMapper; var users = []; users = ConfigMapper.map(function (item) { var skillUser = item ? { userId: item.id, skillLevelId: uiData.skillId + \\\"-\\\" + (item.key ? item.key.toUpperCase() : \\\"HIGH\\\") } : null; return skillUser; }); var apiData = [ { \\\"entityBaseData\\\": { \\\"entityId\\\": uiData.skillId, \\\"accountId\\\": accountId + \\\"-account-default\\\", \\\"clientId\\\": \\\"nemo-client-\\\" + clientId, \\\"entityType\\\": \\\"skill\\\" }, \\\"entityAttributes\\\": { \\\"account\\\": accountId + \\\"-account-default\\\", \\\"skillName\\\": uiData.skillName, \\\"skillDesc\\\": uiData.skillDesc, \\\"users\\\": JSON.stringify(users) } } ]; return JSON.stringify(apiData); } catch (e) {} return null; }\", \"preFetchDefinition\": null}','UPDATE','Skill to agents TEST Update ','REST','{\"entityResponseTranslator\": \"var ApiResponse = function(_status, _message){ this.status = _status; this.message = _message; }; function translate(responseData) { try{ if(!responseData){ return new ApiResponse(\\\"ERROR\\\", \\\"Error while processing your request\\\"); } var uiData = JSON.parse(responseData); if(uiData != null && uiData.status == \\\"SUCCESS\\\" && uiData.data != null){ return new ApiResponse(uiData.status, uiData.data.entityId); } else { return new ApiResponse(\\\"ERROR\\\", parseMsg(uiData.errorMessage)); } }catch(e){ return new ApiResponse(\\\"ERROR\\\", \\\"Error while processing your request\\\"); } } function parseMsg(msg) { var retVal=msg||\\\"\\\"; if(msg.indexOf(\\\"Heuristic\\\")!=-1){retVal= \\\"Entity that you are trying to map is not available in the target environment. Please ensure the mapped entities are published to the target environment.\\\";} else if(msg.indexOf(\\\"entity.invalid.id\\\")!=-1){ retVal=\\\"Entity that you are trying to update is not available in the target environment. Contact [24]7.ai support team.\\\";} return retVal;} \"}','{}'),
(19,'default.user','2019-08-26 13:13:15.527428','Jonathan.Paul@247-inc.com','2021-03-27 07:29:45.106038','{\"type\": \"REST\", \"method\": \"POST\", \"headers\": {\"Content-Type\": \"application/x-www-form-urlencoded\", \"GenerateAuthToken\": \"Bearer \"}, \"serviceId\": \"assist\", \"uploadFile\": false, \"idLookupKeys\": null, \"relativePath\": \"/en/hierarchy/rest/clients/nemo-client-${clientId}/accounts/${accountId}-account-default/authpolicy/update?entityObj=${body}\", \"bodyDefinition\": {}, \"requestBodyKey\": null, \"restClientType\": null, \"idLookupRequired\": false, \"objectTranslator\": \"function translate(pageData, entityId, clientId, accountId, env, prefetch) {  prefetch = JSON.parse(prefetch); var uiData = JSON.parse(pageData).passwordPolicy_p0.configs; var apiData = getConfig(prefetch.listPasswordPolicy, \\\"historyLength\\\"); apiData.configValue = uiData.prevPwd; return JSON.stringify(apiData); } function getConfig(items, key) { var config = null; for(var i=0;i<items.length;i++){var item=items[i]; if(item.configKey==key){ config = item; }} return config;}\", \"preFetchDefinition\": {\"listPasswordPolicy\": {\"fetchFor\": \"listPasswordPolicy\", \"fetchType\": \"PAGE_DATA_VALUE\"}}}','UPDATE','PasswordPolicy prevPwd','REST','{\"entityResponseTranslator\": \"var ApiResponse = function(_status, _message){ this.status = _status; this.message = _message; }; function translate(responseData) { try{ if(!responseData){ return new ApiResponse(\'ERROR\', \'Error while processing your request\'); } var uiData = JSON.parse(responseData); if(uiData != null && uiData.policyId){ return new ApiResponse(uiData.status, \'\'); } else { return new ApiResponse(\'ERROR\', uiData.errorMessage); } }catch(e){ return new ApiResponse(\'ERROR\', \'Error while processing your request\'); } } \"}','{}'),
(20,'default.user','2019-08-26 13:13:15.527428','Jonathan.Paul@247-inc.com','2021-03-27 07:29:45.105834','{\"type\": \"REST\", \"method\": \"POST\", \"headers\": {\"Content-Type\": \"application/x-www-form-urlencoded\", \"GenerateAuthToken\": \"Bearer \"}, \"serviceId\": \"assist\", \"uploadFile\": false, \"idLookupKeys\": null, \"relativePath\": \"/en/hierarchy/rest/clients/nemo-client-${clientId}/accounts/${accountId}-account-default/authpolicy/update?entityObj=${body}\", \"bodyDefinition\": {}, \"requestBodyKey\": null, \"restClientType\": null, \"idLookupRequired\": false, \"objectTranslator\": \"function translate(pageData, entityId, clientId, accountId, env, prefetch) {  prefetch = JSON.parse(prefetch); var uiData = JSON.parse(pageData).passwordPolicy_p0.configs; var apiData = getConfig(prefetch.listPasswordPolicy, \\\"retryCount\\\"); apiData.configValue = uiData.pwdAttempts; return JSON.stringify(apiData); } function getConfig(items, key) { var config = null; for(var i=0;i<items.length;i++){var item=items[i]; if(item.configKey==key){ config = item; }} return config;}\", \"preFetchDefinition\": {\"listPasswordPolicy\": {\"fetchFor\": \"listPasswordPolicy\", \"fetchType\": \"PAGE_DATA_VALUE\"}}}','UPDATE','PasswordPolicy pwdAttempts','REST','{\"entityResponseTranslator\": \"var ApiResponse = function(_status, _message){ this.status = _status; this.message = _message; }; function translate(responseData) { try{ if(!responseData){ return new ApiResponse(\'ERROR\', \'Error while processing your request\'); } var uiData = JSON.parse(responseData); if(uiData != null && uiData.policyId){ return new ApiResponse(uiData.status, \'\'); } else { return new ApiResponse(\'ERROR\', uiData.errorMessage); } }catch(e){ return new ApiResponse(\'ERROR\', \'Error while processing your request\'); } } \"}','{}'),
(21,'default.user','2019-08-26 13:13:15.527428','Jonathan.Paul@247-inc.com','2021-03-27 07:29:45.105587','{\"type\": \"REST\", \"method\": \"POST\", \"headers\": {\"Content-Type\": \"application/x-www-form-urlencoded\", \"GenerateAuthToken\": \"Bearer \"}, \"serviceId\": \"assist\", \"uploadFile\": false, \"idLookupKeys\": null, \"relativePath\": \"/en/hierarchy/rest/clients/nemo-client-${clientId}/accounts/${accountId}-account-default/authpolicy/update?entityObj=${body}\", \"bodyDefinition\": {}, \"requestBodyKey\": null, \"restClientType\": null, \"idLookupRequired\": false, \"objectTranslator\": \"function translate(pageData, entityId, clientId, accountId, env, prefetch) {  prefetch = JSON.parse(prefetch); var uiData = JSON.parse(pageData).passwordPolicy_p0.configs; var apiData = getConfig(prefetch.listPasswordPolicy, \\\"expiryDays\\\"); apiData.configValue = uiData.pwdExpiry; return JSON.stringify(apiData); } function getConfig(items, key) { var config = null; for(var i=0;i<items.length;i++){var item=items[i]; if(item.configKey==key){ config = item; }} return config;}\", \"preFetchDefinition\": {\"listPasswordPolicy\": {\"fetchFor\": \"listPasswordPolicy\", \"fetchType\": \"PAGE_DATA_VALUE\"}}}','UPDATE','PasswordPolicy pwdExpiry','REST','{\"entityResponseTranslator\": \"var ApiResponse = function(_status, _message){ this.status = _status; this.message = _message; }; function translate(responseData) { try{ if(!responseData){ return new ApiResponse(\'ERROR\', \'Error while processing your request\'); } var uiData = JSON.parse(responseData); if(uiData != null && uiData.policyId){ return new ApiResponse(uiData.status, \'\'); } else { return new ApiResponse(\'ERROR\', uiData.errorMessage); } }catch(e){ return new ApiResponse(\'ERROR\', \'Error while processing your request\'); } } \"}','{}'),
(22,'default.user','2019-08-26 13:13:15.527428','Jonathan.Paul@247-inc.com','2021-03-27 07:29:45.105172','{\"type\": \"REST\", \"method\": \"POST\", \"headers\": {\"Content-Type\": \"application/x-www-form-urlencoded\", \"GenerateAuthToken\": \"Bearer \"}, \"serviceId\": \"assist\", \"uploadFile\": false, \"idLookupKeys\": null, \"relativePath\": \"/en/hierarchy/rest/clients/nemo-client-${clientId}/accounts/${accountId}-account-default/authpolicy/update?entityObj=${body}\", \"bodyDefinition\": {}, \"requestBodyKey\": null, \"restClientType\": null, \"idLookupRequired\": false, \"objectTranslator\": \"function translate(pageData, entityId, clientId, accountId, env, prefetch) {  prefetch = JSON.parse(prefetch); var uiData = JSON.parse(pageData).passwordPolicy_p0.configs; var apiData = getConfig(prefetch.listPasswordPolicy, \\\"passwordLength\\\"); apiData.configValue = uiData.pwdLength; return JSON.stringify(apiData); } function getConfig(items, key) { var config = null; for(var i=0;i<items.length;i++){var item=items[i]; if(item.configKey==key){ config = item; }} return config;}\", \"preFetchDefinition\": {\"listPasswordPolicy\": {\"fetchFor\": \"listPasswordPolicy\", \"fetchType\": \"PAGE_DATA_VALUE\"}}}','UPDATE','PasswordPolicy pwdLength','REST','{\"entityResponseTranslator\": \"var ApiResponse = function(_status, _message){ this.status = _status; this.message = _message; }; function translate(responseData) { try{ if(!responseData){ return new ApiResponse(\'ERROR\', \'Error while processing your request\'); } var uiData = JSON.parse(responseData); if(uiData != null && uiData.policyId){ return new ApiResponse(uiData.status, \'\'); } else { return new ApiResponse(\'ERROR\', uiData.errorMessage); } }catch(e){ return new ApiResponse(\'ERROR\', \'Error while processing your request\'); } } \"}','{}'),
(23,'default.user','2020-10-16 13:13:15.527428','Swati.Taneja@247-inc.com','2021-03-26 09:40:04.307910','{\"type\": \"REST\", \"method\": \"POST\", \"headers\": {\"Content-Type\": \"application/x-www-form-urlencoded\", \"GenerateAuthToken\": \"Bearer \"}, \"serviceId\": \"assist\", \"uploadFile\": false, \"idLookupKeys\": null, \"relativePath\": \"/en/hierarchy/rest/clients/nemo-client-${clientId}/accounts/${accountId}-account-default/smartcommand?entityObj=${body}\", \"bodyDefinition\": {}, \"requestBodyKey\": null, \"restClientType\": null, \"idLookupRequired\": false, \"objectTranslator\": \"function translate(pageData, entityId, clientId, accountId, env) { pageData = JSON.parse(pageData).createActiveCards_p0; var payload = {}; payload.commandName =\'/f \' + pageData.commandName; payload.commandDescription = pageData.commandDescription; payload.numberOfParamters =pageData.numberOfParamters; payload.enabled = pageData.enabled; payload.commandActionName = pageData.commandActionName; payload.key = pageData.key;return JSON.stringify(payload)}\", \"preFetchDefinition\": null}','CREATE','Create active Card','REST','{\"entityResponseTranslator\": \"var ApiResponse = function(_status, _message){ this.status = _status; this.message = _message; }; function translate(responseData) { try{ if(!responseData){ return new ApiResponse(\'ERROR\', \'Error while processing your request\'); } var uiData = JSON.parse(responseData); if(uiData != null ){ return new ApiResponse(\'SUCCESS\', uiData.commandId); } else { return new ApiResponse(uiData.errorCode, uiData.errorMessage||\'System error while publishing\'); } }catch(e){ return new ApiResponse(\'ERROR\', \'Error while processing your request\'); } } \"}','{}'),
(24,'default.user','2020-10-16 13:13:15.527428','testuser1@247.ai','2021-03-27 07:25:53.268945','{\"type\": \"REST\", \"method\": \"POST\", \"headers\": {\"Content-Type\": \"application/x-www-form-urlencoded\", \"GenerateAuthToken\": \"Bearer \"}, \"serviceId\": \"assist\", \"uploadFile\": false, \"idLookupKeys\": null, \"relativePath\": \"/en/hierarchy/rest/clients/nemo-client-${clientId}/accounts/${accountId}-account-default/smartcommand/update?entityObj=${body}\", \"bodyDefinition\": {}, \"requestBodyKey\": null, \"restClientType\": null, \"idLookupRequired\": false, \"objectTranslator\": \"function translate(pageData, entityId, clientId, accountId, env) { pageData = JSON.parse(pageData).updateActiveCards_p0; return JSON.stringify(pageData)}\", \"preFetchDefinition\": null}','UPDATE','Update Active Card','REST','{\"entityResponseTranslator\": \"var ApiResponse = function(_status, _message){ this.status = _status; this.message = _message; }; function translate(responseData) { try{ if(!responseData){ return new ApiResponse(\'ERROR\', \'Error while processing your request\'); } var uiData = JSON.parse(responseData); if(uiData != null ){ return new ApiResponse(\'SUCCESS\',uiData.commandId); } else { return new ApiResponse(uiData.errorCode, uiData.errorMessage||\'System error while publishing\'); } }catch(e){ return new ApiResponse(\'ERROR\', \'Error while processing your request\'); } } \"}','{}'),
(25,'default.user','2020-10-16 13:13:15.527428','testuser1@247.ai','2021-03-27 06:59:50.267515','{\"type\": \"REST\", \"method\": \"POST\", \"headers\": {\"Content-Type\": \"application/x-www-form-urlencoded\", \"GenerateAuthToken\": \"Bearer \"}, \"serviceId\": \"assist\", \"uploadFile\": false, \"idLookupKeys\": null, \"relativePath\": \"/en/hierarchy/rest/clients/nemo-client-${clientId}/accounts/${accountId}-account-default/invitemanagement/update?entityObj=${body}\", \"bodyDefinition\": {}, \"requestBodyKey\": null, \"restClientType\": null, \"idLookupRequired\": false, \"objectTranslator\": \"function translate(pageData, entityId, clientId, accountId, env) { var uiData = JSON.parse(pageData).updateQueues_p0.tabsField; var uiDataB = uiData[0]; var uiDataA = uiData[1].assistConfig; var apiData = [{ queueName : uiDataB.queueName, queueDescription : uiDataB.queueDesc, acceptanceRate : uiDataA.inviteMgmt.invites.toString(), safetyfactor : uiDataA.inviteMgmt.safetyfactor, expiryInterval : uiDataA.inviteMgmt.expiryInterval, caModelType : uiDataA.inviteMgmt.caModelType, key : uiDataA.inviteMgmt.key }]; return JSON.stringify(apiData); }\", \"preFetchDefinition\": null}','UPDATE','Update Invite Management','REST','{\"entityResponseTranslator\": \"var ApiResponse = function(_status, _message){ this.status = _status; this.message = _message; }; function translate(responseData) { try{ if(!responseData){ return new ApiResponse(\'ERROR\', \'Error while processing your request\'); } var uiData = JSON.parse(responseData); if(uiData != null ){ return new ApiResponse(\'SUCCESS\', \'\'); } else { return new ApiResponse(uiData.status, uiData.errorMessage||\'System error while publishing\'); } }catch(e){ return new ApiResponse(\'ERROR\', \'Error while processing your request\'); } }\"}','{}'),
(26,'default.user','2020-10-16 13:13:15.527428','testuser1@247.ai','2021-03-27 07:34:55.822888','{\"type\": \"REST\", \"method\": \"POST\", \"headers\": {\"Content-Type\": \"application/x-www-form-urlencoded\", \"GenerateAuthToken\": \"Bearer \"}, \"serviceId\": \"assist\", \"uploadFile\": false, \"idLookupKeys\": null, \"relativePath\": \"/en/hierarchy/rest/clients/nemo-client-${clientId}/accounts/${accountId}-account-default/propertyconfiguration/update?entityObj=${body}\", \"bodyDefinition\": {}, \"requestBodyKey\": null, \"restClientType\": null, \"idLookupRequired\": false, \"objectTranslator\": \"function translate(pageData, entityId, clientId, accountId, env) { pageData = JSON.parse(pageData).updatePropertyConfig_p0; var apiData = {}; if(pageData.scope.scopeType === \'account\'){apiData.scopeId =pageData.scope.accountId;}else{apiData.scopeId = pageData.scope.queueScope;} apiData.scopeType = pageData.scope.scopeType; apiData.contextVariableBaseId = \\\"\\\"; apiData.varTypeLabel=\\\"\\\"; apiData.varName = pageData.varName; apiData.key=pageData.key; apiData.order = pageData.order;apiData.varType =pageData.varType;apiData.displayName = pageData.displayName;apiData.validatorId = pageData.validatorId; apiData.editableFlag = pageData.editableFlag; apiData.maskableFlag = pageData.maskableFlag; apiData.mandatoryFlag= pageData.mandatoryFlag; apiData.varDescription=pageData.varDescription;return JSON.stringify(apiData)}\", \"preFetchDefinition\": null}','UPDATE','Update Property Configuration','REST','{\"entityResponseTranslator\": \"var ApiResponse = function(_status, _message){ this.status = _status; this.message = _message; }; function translate(responseData) { try{ if(!responseData){ return new ApiResponse(\'ERROR\', \'Error while processing your request\'); } var uiData = JSON.parse(responseData); if(uiData != null ){ return new ApiResponse(\'SUCCESS\', \'\' ); } else { return new ApiResponse(uiData.errorCode, uiData.errorMessage||\'System error while publishing\'); } }catch(e){ return new ApiResponse(\'ERROR\', \'Error while processing your request\'); } } \"}','{}'),
(27,'default.user','2020-10-16 13:13:15.527428','Swati.Taneja@247-inc.com','2021-03-27 06:26:53.349416','{\"type\": \"REST\", \"method\": \"POST\", \"headers\": {\"Content-Type\": \"application/x-www-form-urlencoded\", \"GenerateAuthToken\": \"Bearer \"}, \"serviceId\": \"assist\", \"uploadFile\": false, \"idLookupKeys\": null, \"relativePath\": \"/en/hierarchy/rest/clients/nemo-client-${clientId}/accounts/${accountId}-account-default/propertyconfiguration?entityObj=${body}\", \"bodyDefinition\": {}, \"requestBodyKey\": null, \"restClientType\": null, \"idLookupRequired\": false, \"objectTranslator\": \"function translate(pageData, entityId, clientId, accountId, env) { pageData = JSON.parse(pageData).createPropertyConfig_p0; var apiData = {};if(pageData.scope.scopeType === \'account\'){apiData.scopeId =pageData.accountId;}else{apiData.scopeId = pageData.scope.queueScope;} apiData.scopeType =pageData.scope.scopeType;apiData.contextVariableBaseId = \\\"\\\"; apiData.varTypeLabel=\\\"\\\"; apiData.varName = pageData.varName; apiData.key=pageData.key; apiData.order = pageData.order;apiData.varType =pageData.varType;apiData.displayName = pageData.displayName;apiData.validatorId = pageData.validatorId; apiData.editableFlag = pageData.editableFlag; apiData.maskableFlag = pageData.maskableFlag; apiData.mandatoryFlag= pageData.mandatoryFlag; apiData.varDescription=pageData.varDescription; return JSON.stringify(apiData)}\", \"preFetchDefinition\": null}','CREATE','Create Property Configuration','REST','{\"entityResponseTranslator\": \"var ApiResponse = function(_status, _message){ this.status = _status; this.message = _message; }; function translate(responseData) { try{ if(!responseData){ return new ApiResponse(\'ERROR\', \'Error while processing your request\'); } var uiData = JSON.parse(responseData); if(uiData != null ){ return new ApiResponse(\'SUCCESS\', uiData.key); } else { return new ApiResponse(uiData.errorCode, uiData.errorMessage||\'System error while publishing\'); } }catch(e){ return new ApiResponse(\'ERROR\', \'Error while processing your request\'); } } \"}','{}'),
(28,'default.user','2020-10-16 13:13:15.527428','Jonathan.Paul@247-inc.com','2021-03-27 07:21:57.394884','{\"type\": \"REST\", \"method\": \"POST\", \"headers\": {\"Content-Type\": \"application/x-www-form-urlencoded\", \"GenerateAuthToken\": \"Bearer \"}, \"serviceId\": \"assist\", \"uploadFile\": false, \"idLookupKeys\": null, \"relativePath\": \"/en/hierarchy/rest/clients/nemo-client-${clientId}/accounts/${accountId}-account-default/messagepolicy/update?entityObj=${body}\", \"bodyDefinition\": {}, \"requestBodyKey\": null, \"restClientType\": null, \"idLookupRequired\": false, \"objectTranslator\": \"function translate(pageData, entityId, clientId, accountId, env) { pageData = JSON.parse(pageData).updateMaskingPatterns_p0; if(pageData.scopeType === \'account\'){pageData.scopeId =pageData.accountScope;}else{pageData.scopeId = pageData.queueScope;} return JSON.stringify(pageData);}\", \"preFetchDefinition\": null}','UPDATE','Update data masking patterns','REST','{\"entityResponseTranslator\": \"var ApiResponse = function(_status, _message){ this.status = _status; this.message = _message; }; function translate(responseData) { try{ if(!responseData){ return new ApiResponse(\'ERROR\', \'Error while processing your request\'); } var uiData = JSON.parse(responseData); if(uiData != null ){ return new ApiResponse(\'SUCCESS\', \'\' ); } else { return new ApiResponse(uiData.errorCode, uiData.errorMessage||\'System error while publishing\'); } }catch(e){ return new ApiResponse(\'ERROR\', \'Error while processing your request\'); } } \"}','{}'),
(29,'default.user','2020-10-16 13:13:15.527428','Swati.Taneja@247-inc.com','2021-03-25 11:43:30.169508','{\"type\": \"REST\", \"method\": \"POST\", \"headers\": {\"Content-Type\": \"application/x-www-form-urlencoded\", \"GenerateAuthToken\": \"Bearer \"}, \"serviceId\": \"assist\", \"uploadFile\": false, \"idLookupKeys\": null, \"relativePath\": \"/en/hierarchy/rest/clients/nemo-client-${clientId}/accounts/${accountId}-account-default/messagepolicy?entityObj=${body}\", \"bodyDefinition\": {}, \"requestBodyKey\": null, \"restClientType\": null, \"idLookupRequired\": false, \"objectTranslator\": \"function translate(pageData, entityId, clientId, accountId, env) { pageData = JSON.parse(pageData).createMaskingPatterns_p0; if(pageData.scopeType === \'account\'){pageData.scopeId =pageData.accountScope;}else{pageData.scopeId = pageData.queueScope;} return JSON.stringify(pageData);}\", \"preFetchDefinition\": null}','CREATE','Create data masking patterns','REST','{\"entityResponseTranslator\": \"var ApiResponse = function(_status, _message){ this.status = _status; this.message = _message; }; function translate(responseData) { try{ if(!responseData){ return new ApiResponse(\'ERROR\', \'Error while processing your request\'); } var uiData = JSON.parse(responseData); if(uiData != null ){ return new ApiResponse(\'SUCCESS\', uiData.key); } else { return new ApiResponse(uiData.errorCode, uiData.errorMessage||\'System error while publishing\'); } }catch(e){ return new ApiResponse(\'ERROR\', \'Error while processing your request\'); } } \"}','{}'),
(30,'default.user','2020-10-16 13:13:15.527428','testuser2@247.ai','2021-03-26 07:31:40.766621','{\"type\": \"REST\", \"method\": \"POST\", \"headers\": {\"Content-Type\": \"application/x-www-form-urlencoded\", \"GenerateAuthToken\": \"Bearer \"}, \"serviceId\": \"assist\", \"uploadFile\": false, \"idLookupKeys\": null, \"relativePath\": \"/en/hierarchy/rest/clients/nemo-client-${clientId}/accounts/${accountId}-account-default/monitoringconfig?entityObj=${body}\", \"bodyDefinition\": {}, \"requestBodyKey\": null, \"restClientType\": null, \"idLookupRequired\": false, \"objectTranslator\": \"function translate(pageData, entityId, clientId, accountId, env) { pageData = JSON.parse(pageData).createLeadConsole_p0; var apiData = {}; if (pageData.propertyType = \\\"Reset Time\\\") { apiData.propertyType = \\\"RESET_TIME\\\"; } else {apiData.propertyType = pageData.propertyType; } apiData.key = pageData.key; apiData.hours = pageData.time.hours; apiData.minutes = pageData.time.minutes; apiData.meridiem = pageData.time.meridian; return JSON.stringify(apiData); }\", \"preFetchDefinition\": null}','CREATE','Create Lead Console reset','REST','{\"entityResponseTranslator\": \"var ApiResponse = function(_status, _message){ this.status = _status; this.message = _message; }; function translate(responseData) { try{ if(!responseData){ return new ApiResponse(\'ERROR\', \'Error while processing your request\'); } var uiData = JSON.parse(responseData); if(uiData != null ){ return new ApiResponse(\'SUCCESS\',uiData.key); } else { return new ApiResponse(uiData.errorCode, uiData.errorMessage||\'System error while publishing\'); } }catch(e){ return new ApiResponse(\'ERROR\', \'Error while processing your request \'); } } \"}','{}'),
(31,'default.user','2020-10-16 13:13:15.527428','testuser1@247.ai','2021-03-27 07:59:00.888661','{\"type\": \"REST\", \"method\": \"POST\", \"headers\": {\"Content-Type\": \"application/x-www-form-urlencoded\", \"GenerateAuthToken\": \"Bearer \"}, \"serviceId\": \"assist\", \"uploadFile\": false, \"idLookupKeys\": null, \"relativePath\": \"/en/hierarchy/rest/clients/nemo-client-${clientId}/accounts/${accountId}-account-default/monitoringconfig/update?entityObj=${body}\", \"bodyDefinition\": {}, \"requestBodyKey\": null, \"restClientType\": null, \"idLookupRequired\": false, \"objectTranslator\": \"function translate(pageData, entityId, clientId, accountId, env) { pageData = JSON.parse(pageData).updateLeadConsole_p0; var apiData = {}; if (pageData.propertyType === \\\"Reset Time\\\"){ apiData.propertyType = \\\"RESET_TIME\\\"; }else{apiData.propertyType = pageData.propertyType; } apiData.key = pageData.key; apiData.hours = pageData.time.hours; apiData.minutes = pageData.time.minutes; apiData.meridiem = pageData.time.meridian; return JSON.stringify(apiData); }\", \"preFetchDefinition\": null}','UPDATE','Update Lead Console reset','REST','{\"entityResponseTranslator\": \"var ApiResponse = function(_status, _message){ this.status = _status; this.message = _message; }; function translate(responseData) { try{ if(!responseData){ return new ApiResponse(\'ERROR\', \'Error while processing your request\'); } var uiData = JSON.parse(responseData); if(uiData != null ){ return new ApiResponse(\'SUCCESS\', uiData.key); } else { return new ApiResponse(uiData.errorCode, uiData.errorMessage||\'System error while publishing\'); } }catch(e){ return new ApiResponse(\'ERROR\', \'Error while processing your request\'); } } \"}','{}'),
(32,'default.user','2020-10-16 13:13:15.527428','Manasa.B@247-inc.com','2021-03-23 13:06:18.817653','{\"type\": \"REST\", \"method\": \"POST\", \"headers\": {\"Content-Type\": \"application/x-www-form-urlencoded\", \"GenerateAuthToken\": \"Bearer \"}, \"serviceId\": \"assist\", \"uploadFile\": false, \"idLookupKeys\": null, \"relativePath\": \"/en/hierarchy/rest/clients/nemo-client-${clientId}/accounts/${accountId}-account-default/mailerconfig\", \"bodyDefinition\": {}, \"requestBodyKey\": \"entityObj\", \"restClientType\": \"REST_TEMPLATE\", \"idLookupRequired\": false, \"objectTranslator\": \"function translate(pageData, entityId, clientId, accountId, env) { pageData = JSON.parse(pageData).createMailer_p0; var templateConfigObj = {}; var apiData = {}; for (var i = 0; i < pageData.tabsField[0].baseConfigurationAccordionTabs.length; i++) { for (var key in pageData.tabsField[0].baseConfigurationAccordionTabs[i]) { templateConfigObj[key] = pageData.tabsField[0].baseConfigurationAccordionTabs[i][key]; } } var templateConfig = {}; templateConfig.header = templateConfigObj.extendedSubject; templateConfig.LogoURL = templateConfigObj.companyLogo; templateConfig.greetingMessage = templateConfigObj.greetings; templateConfig.signOffMessage = templateConfigObj.signOffMsg; templateConfig.signatureMessage = templateConfigObj.signatureText; templateConfig.headerMessage = templateConfigObj.message; templateConfig.c2CMessage = templateConfigObj.clickToChatMsg; templateConfig.c2CButtonURL = templateConfigObj.buttonUrl; templateConfig.c2CButtonText = templateConfigObj.buttonLabel; templateConfig.footerMessage = templateConfigObj.footer; templateConfig.logoThemeBtnCol = templateConfigObj.logoBackground; templateConfig.footerLinkOne = templateConfigObj.showFooter; templateConfig.footerLinkOneText = templateConfigObj.label; templateConfig.footerLinkOneURL = templateConfigObj.linlUrl; templateConfig.logoPosition = templateConfigObj.logoPosition; templateConfig.themeName = templateConfigObj.theme; templateConfig.themeBgCol = templateConfigObj.themeSelector.bgColor; templateConfig.themeLinkCol = templateConfigObj.themeSelector.linkColor; templateConfig.themeBtnCol = templateConfigObj.themeSelector.buttonColor; templateConfig.appendName = templateConfigObj.showCustomerName; templateConfig.appendClickToChat = templateConfigObj.showClick; templateConfig.appendSignOff = templateConfigObj.showSignOff; templateConfig.appendSignature = templateConfigObj.showSignature; templateConfig.contextDetailsText = \\\"null\\\"; var footer = templateConfigObj.footer; var labels = [\\\"One\\\", \\\"Two\\\", \\\"Three\\\", \\\"Four\\\", \\\"Five\\\"]; for (var i = 0; i < labels.length; i++) { var label = labels[i]; if (footer[i] !== undefined) { templateConfig[\\\"footer\\\" + label] = footer[i].showFooter; templateConfig[\\\"footerLink\\\" + label + \\\"Text\\\"] = footer[i].label; templateConfig[\\\"footerLink\\\" + label + \\\"URL\\\"] = footer[i].linkUrl; } else { templateConfig[\\\"footer\\\" + label] = false; templateConfig[\\\"footerLink\\\" + label + \\\"Text\\\"] = \\\"\\\"; templateConfig[\\\"footerLink\\\" + label + \\\"URL\\\"] = \\\"\\\"; } } templateConfig.footerMessage = templateConfigObj.footerMessage; templateConfig.appendAgentDetails = true; templateConfig.appendContextDetails = false; apiData.templateConfig = templateConfig; apiData.isSSL = pageData.mailConfigAccordionTabs[0].isSsl === \\\"true\\\"; apiData.bccId = pageData.mailConfigAccordionTabs[0].bccEmail; apiData.fromName = pageData.mailConfigAccordionTabs[0].fromName; apiData.smtpPort = pageData.mailConfigAccordionTabs[0].smtpPort; apiData.smtpHost = pageData.mailConfigAccordionTabs[0].smtpHost; apiData.key = pageData.mailConfigAccordionTabs[0].key; apiData.configKey = pageData.mailConfigAccordionTabs[0].configKey; apiData.debugEnabled = pageData.mailConfigAccordionTabs[0].debugEnable === \\\"true\\\"; apiData.fromEmail = pageData.mailConfigAccordionTabs[0].fromEmailId; apiData.mailSubject = pageData.mailConfigAccordionTabs[0].mailSubject; apiData.fromPassword = pageData.mailConfigAccordionTabs[0].fromPassword; apiData.clientId = \\\"nemo-client-\\\"+clientId; apiData.accountId = accountId + \\\"-account-default\\\"; apiData.mailOpeningLines = \\\"\\\"; apiData.mailSalutation=\\\"\\\"; return JSON.stringify(apiData); }\", \"preFetchDefinition\": null}','CREATE','Create Mailer Config','REST','{\"entityResponseTranslator\": \"var ApiResponse = function(_status, _message){ this.status = _status; this.message = _message; }; function translate(responseData) { try{ if(!responseData){ return new ApiResponse(\'ERROR\', \'Error while processing your request\'); } var uiData = JSON.parse(responseData); if(uiData != null ){ return new ApiResponse(\'SUCCESS\', uiData.key); } else { return new ApiResponse(uiData.errorCode, uiData.errorMessage||\'System error while publishing\'); } }catch(e){ return new ApiResponse(\'ERROR\', \'Error while processing your request\'); } } \"}','{}'),
(33,'default.user','2020-10-16 13:13:15.527428','Jonathan.Paul@247-inc.com','2021-03-27 07:20:43.198714','{\"type\": \"REST\", \"method\": \"POST\", \"headers\": {\"Content-Type\": \"application/x-www-form-urlencoded\", \"GenerateAuthToken\": \"Bearer \"}, \"serviceId\": \"assist\", \"uploadFile\": false, \"idLookupKeys\": null, \"relativePath\": \"/en/hierarchy/rest/clients/nemo-client-${clientId}/accounts/${accountId}-account-default/mailerconfig/update\", \"bodyDefinition\": {}, \"requestBodyKey\": \"entityObj\", \"restClientType\": \"REST_TEMPLATE\", \"idLookupRequired\": false, \"objectTranslator\": \"function translate(pageData, entityId, clientId, accountId, env ) { pageData = JSON.parse(pageData).updateMailer_p0; var templateConfigObj = {}; var apiData = {}; for (var i = 0; i < pageData.tabsField[0].baseConfigurationAccordionTabs.length; i++) { for (var key in pageData.tabsField[0].baseConfigurationAccordionTabs[i]) { templateConfigObj[key] = pageData.tabsField[0].baseConfigurationAccordionTabs[i][key]; } } var templateConfig = {}; templateConfig.header = templateConfigObj.extendedSubject; templateConfig.LogoURL = templateConfigObj.companyLogo; templateConfig.greetingMessage = templateConfigObj.greetings; templateConfig.signOffMessage = templateConfigObj.signOffMsg; templateConfig.signatureMessage = templateConfigObj.signatureText; templateConfig.headerMessage = templateConfigObj.message; templateConfig.c2CMessage = templateConfigObj.clickToChatMsg; templateConfig.c2CButtonURL = templateConfigObj.buttonUrl; templateConfig.c2CButtonText = templateConfigObj.buttonLabel; templateConfig.logoThemeBtnCol = templateConfigObj.logoBackground; templateConfig.logoPosition = templateConfigObj.logoPosition; templateConfig.themeName = templateConfigObj.themeSelector.theme; templateConfig.themeBgCol = templateConfigObj.themeSelector.bgColor; templateConfig.themeLinkCol = templateConfigObj.themeSelector.linkColor; templateConfig.themeBtnCol = templateConfigObj.themeSelector.buttonColor; templateConfig.appendName = templateConfigObj.showCustomerName; templateConfig.appendClickToChat = templateConfigObj.showClick; templateConfig.appendSignOff = templateConfigObj.showSignOff; templateConfig.appendSignature = templateConfigObj.showSignature; templateConfig.contextDetailsText = \\\"null\\\"; var footer = templateConfigObj.footer; var labels = [\\\"One\\\", \\\"Two\\\", \\\"Three\\\", \\\"Four\\\", \\\"Five\\\"]; for (var i = 0; i < labels.length; i++) { var label = labels[i]; if(footer[i] !== undefined){ templateConfig[\\\"footer\\\" + label] = footer[i].showFooter; templateConfig[\\\"footerLink\\\" + label + \\\"Text\\\"] = footer[i].label; templateConfig[\\\"footerLink\\\" + label + \\\"URL\\\"] = footer[i].linkUrl; }else{ templateConfig[\\\"footer\\\" + label] = false; templateConfig[\\\"footerLink\\\" + label + \\\"Text\\\"] = \\\"\\\"; templateConfig[\\\"footerLink\\\" + label + \\\"URL\\\"] = \\\"\\\"; } } templateConfig.footerMessage = templateConfigObj.footerMessage; templateConfig.appendAgentDetails = true; templateConfig.appendContextDetails = false; apiData.templateConfig = templateConfig; apiData.isSSL = pageData.mailConfigAccordionTabs[0].isSsl === \\\"true\\\"; apiData.bccId = pageData.mailConfigAccordionTabs[0].bccEmail; apiData.fromName = pageData.mailConfigAccordionTabs[0].fromName; apiData.smtpPort = pageData.mailConfigAccordionTabs[0].smtpPort; apiData.smtpHost = pageData.mailConfigAccordionTabs[0].smtpHost; apiData.key = pageData.mailConfigAccordionTabs[0].key; apiData.configKey = pageData.mailConfigAccordionTabs[0].configKey; apiData.debugEnabled = pageData.mailConfigAccordionTabs[0].debugEnable === \\\"true\\\"; apiData.fromEmail = pageData.mailConfigAccordionTabs[0].fromEmailId; apiData.mailSubject = pageData.mailConfigAccordionTabs[0].mailSubject; apiData.fromPassword = pageData.mailConfigAccordionTabs[0].fromPassword; apiData.clientId = \\\"nemo-client-\\\" + clientId; apiData.accountId = accountId + \\\"-account-default\\\"; apiData.mailOpeningLines = \\\"\\\"; apiData.mailSalutation = \\\"\\\"; return JSON.stringify(apiData); }\", \"preFetchDefinition\": null}','UPDATE','Update Mailer Config','REST','{\"entityResponseTranslator\": \"var ApiResponse = function(_status, _message){ this.status = _status; this.message = _message; }; function translate(responseData) { try{ if(!responseData){ return new ApiResponse(\'ERROR\', \'Error while processing your request\'); } var uiData = JSON.parse(responseData); if(uiData != null ){ return new ApiResponse(\'SUCCESS\', uiData.key); } else { return new ApiResponse(uiData.errorCode, uiData.errorMessage||\'System error while publishing\'); } }catch(e){ return new ApiResponse(\'ERROR\', \'Error while processing your request\'); } } \"}','{}'),
(34,'default.user','2020-10-16 13:13:15.527428','Jonathan.Paul@247-inc.com','2021-03-27 07:24:08.361982','{\"type\": \"REST\", \"method\": \"POST\", \"headers\": {\"Content-Type\": \"application/x-www-form-urlencoded\", \"GenerateAuthToken\": \"Bearer \"}, \"serviceId\": \"assist\", \"uploadFile\": false, \"idLookupKeys\": null, \"relativePath\": \"/en/hierarchy/rest/clients/nemo-client-${clientId}/accounts/${accountId}-account-default/notificationconfig/update?notificationConfigObj=${body}\", \"bodyDefinition\": {}, \"requestBodyKey\": null, \"restClientType\": null, \"idLookupRequired\": false, \"objectTranslator\": \"function translate(pageData, entityId, clientId, accountId, env) { pageData = JSON.parse(pageData).updateMsgFilter_p0;return JSON.stringify(pageData)}\", \"preFetchDefinition\": null}','UPDATE','Update Keyword Alert','REST','{\"entityResponseTranslator\": \"var ApiResponse = function(_status, _message){ this.status = _status; this.message = _message; }; function translate(responseData) { try{ if(!responseData){ return new ApiResponse(\'ERROR\', \'Error while processing your request\'); } var uiData = JSON.parse(responseData); if(uiData != null ){ return new ApiResponse(\'SUCCESS\', \'\'); } else { return new ApiResponse(uiData.status, uiData.errorMessage||\'System error while publishing\'); } }catch(e){ return new ApiResponse(\'ERROR\', \'Error while processing your request\'); } } \"}','{}'),
(35,'default.user','2019-08-26 13:13:15.527428','testuser1@247.ai','2021-03-27 06:35:08.104427','{\"type\": \"REST\", \"method\": \"POST\", \"headers\": {\"Content-Type\": \"application/x-www-form-urlencoded\"}, \"serviceId\": \"assist\", \"uploadFile\": false, \"idLookupKeys\": null, \"relativePath\": \"/en/admin/rest/ohs/update\", \"bodyDefinition\": {}, \"requestBodyKey\": \"entity\", \"restClientType\": \"REST_TEMPLATE\", \"idLookupRequired\": false, \"objectTranslator\": \"function translate(pageData, entityId, clientId, accountId, env) { var uiData = JSON.parse(pageData).createQueues_p0.tabsField; var uiDataB = uiData[0]; var uiDataA = uiData[1].assistConfig; var apiData = [ { \\\"entityBaseData\\\": { \\\"accountId\\\": accountId + \\\"-account-default\\\", \\\"entityType\\\": \\\"chatQueue\\\", \\\"entityId\\\": accountId + \\\"-account-default-queue-\\\"+uiDataB.queueName, \\\"entityDisplayName\\\": uiDataB.queueName, \\\"clientId\\\": clientId }, \\\"entityAttributes\\\": { \\\"queueLength\\\": uiDataA.queueLength||30, \\\"queueTimeOut\\\": uiDataA.queueTimeOut||600, \\\"resourceFree\\\": uiDataA.routeOn||\\\"DISPOSE\\\", \\\"visitorInactivityPeriod\\\": uiDataA.visitorInactivity, \\\"agentResponseTime\\\": uiDataA.agentResponse, \\\"typingEnabled\\\": uiDataA.typingEnabled == \\\"true\\\", \\\"typingTimeout\\\": uiDataA.typingTimeout, \\\"isAccountQueue\\\": uiDataA.isAccountQueue == \\\"true\\\", \\\"agentFTShare\\\": uiDataA.fileTransfer.FTVisitor, \\\"visitorMailerConfigKey\\\": uiDataA.mailer.visitorConfig, \\\"agentMailerConfigKey\\\": uiDataA.mailer.agentConfig, \\\"coViewEnabled\\\": uiDataA.coBrowse ? uiDataA.coBrowse.coViewEnabled == \\\"true\\\": false, \\\"coBrowseEnabled\\\": uiDataA.coBrowse ? uiDataA.coBrowse.coBrowseEnabled == \\\"true\\\": false, \\\"interLOBEnabled\\\": uiDataA.interLob.acceptInterLob == \\\"true\\\", \\\"isOutboundLOBQueueTransferEnabled\\\": uiDataA.interLob.outboundLob == \\\"true\\\", \\\"agentAffinityPeriod\\\": uiDataA.agentAffinityPeriod||180, \\\"conversationalInterval\\\": uiDataA.conversationalInterval||72, \\\"dispositionFormContent\\\": uiDataA.queueType === \\\"MESSAGING\\\" ? \\\"\\\" : uiDataA.dispositionForm, \\\"crmScriptContent\\\": uiDataA.crmIntg.crmAppId? uiDataA.crmIntg.crmScriptContent: undefined, \\\"crmDisplayText\\\": uiDataA.crmIntg.crmAppId?uiDataA.crmIntg.crmLaunchBtn: undefined, \\\"crmAppId\\\": uiDataA.crmIntg.crmAppId?uiDataA.crmIntg.crmAppId : undefined, \\\"isStandardWrapUpRequired\\\": uiDataA.queueType === \\\"MESSAGING\\\" ? true : (uiDataA.useStandardWrapUp == \\\"true\\\"), \\\"avgChatDuration\\\": \\\"10\\\", \\\"waitTimeBufferFactor\\\": \\\"1.0\\\", \\\"chatDurationRefreshFactor\\\": \\\"3.0\\\" } } ]; if (uiDataA.skill && uiDataA.skill.join(\\\",\\\") !== \\\"\\\") { apiData[0].entityAttributes.skill = uiDataA.skill.join(\\\",\\\") }; return JSON.stringify(apiData); }\", \"preFetchDefinition\": null}','CREATE','assist queue update action','REST','{\"entityResponseTranslator\": \"var ApiResponse = function(_status, _message){ this.status = _status; this.message = _message; }; function translate(responseData) { try{ if(!responseData){ return new ApiResponse(\'ERROR\', \'Error while processing your request\'); } var uiData = JSON.parse(responseData); if(uiData != null && uiData.status == \'SUCCESS\' && uiData.data != null){ return new ApiResponse(uiData.status, uiData.data.entityId); } else { return new ApiResponse(uiData.status, uiData.errorMessage); } }catch(e){ return new ApiResponse(\'ERROR\', \'Error while processing your request\'); } } \"}','{\"POLL\": {\"type\": \"POLL\", \"retryCount\": 3000, \"retryInterval\": 30000}}'),
(36,'default.user','2021-03-01 13:13:15.527428','testuser1@247.ai','2021-03-27 07:53:03.823486','{\"type\": \"REST\", \"method\": \"POST\", \"headers\": {\"Referer\": \"https://test-default.portal.assist.247-inc.net/en/console\", \"Content-Type\": \"application/x-www-form-urlencoded\", \"GenerateAuthToken\": \"Bearer \"}, \"serviceId\": \"assist\", \"uploadFile\": false, \"idLookupKeys\": null, \"relativePath\": \"/en/hierarchy/rest/clients/nemo-client-${clientId}/accounts/${accountId}-account-default/agents?entityObj=${body}\", \"bodyDefinition\": {}, \"requestBodyKey\": null, \"restClientType\": null, \"idLookupRequired\": false, \"objectTranslator\": \"function translate(pageData, entityId, clientId, accountId, env, prefetch) { var uiData = JSON.parse(pageData).createUserTest_p0; var t0 = uiData.tabsField[ 0 ]; var t1 = uiData.tabsField[ 1 ]; var t2 = uiData.tabsField[ 2 ]; var roles = []; if (t0.roleId == \\\"superlead_role_id\\\") { roles.push(\\\"lead_role_id\\\", \\\"agent_role_id\\\"); } else { roles.push(t0.roleId); } var apiData = { \\\"key\\\": \\\"\\\", \\\"userName\\\": t0.userName, \\\"firstName\\\": t0.firstName, \\\"lastName\\\": t0.lastName, \\\"displayName\\\": t0.displayName, \\\"email\\\": t0.email, \\\"activeChatLimits\\\": t0.activeChatLimits, \\\"autoAcceptChats\\\": t0.autoAcceptChats, \\\"teamId\\\": t0.teamId, \\\"timezone\\\": \\\"GMT0\\\", \\\"roleIds\\\": roles, \\\"authenticationType\\\": t0.authenticationType || \\\"LOCAL_AUTH\\\", \\\"status\\\": t0.status, \\\"samlUserName\\\": \\\"\\\", \\\"skillLevels\\\": t1.ConfigMapper && t1.ConfigMapper.map(function (skill) { var skLvl = skill ? { skillId: skill.id, skillLevelId: skill.id + \\\"-\\\" + (skill.key ? skill.key.toUpperCase() : \\\"HIGH\\\") } : []; return skLvl; }) || [], \\\"monitoringTeamIds\\\": t2.ConfigMapper && t2.ConfigMapper.map(function (team) { return ({ teamId: team.id }) }) || [], \\\"metadataMap\\\": { \\\"employeeId\\\": t0.employeeId } }; if (t0.newPassword !== \\\"\\\") { apiData.newPassword = t0.newPassword; apiData.confirmPassword = t0.confirmPassword; } return JSON.stringify(apiData); }\", \"preFetchDefinition\": {}}','CREATE','assist user create action','REST','{\"entityResponseTranslator\": \"var ApiResponse = function(_status, _message){ this.status = _status; this.message = _message; }; function translate(responseData) { try{ if(!responseData){ return new ApiResponse(\'ERROR\', \'Error while processing your request\'); } var uiData = JSON.parse(responseData); if(uiData != null && uiData.key){ return new ApiResponse(\'SUCCESS\', uiData.key); } else { return new ApiResponse(\'ERROR\', uiData.errorMsg); } }catch(e){ return new ApiResponse(\'ERROR\', \'Error while processing your request\'); } }\"}','{}'),
(37,'default.user','2021-03-01 13:13:15.527428','testuser1@247.ai','2021-03-27 08:38:29.913105','{\"type\": \"REST\", \"method\": \"POST\", \"headers\": {\"Content-Type\": \"application/x-www-form-urlencoded\", \"GenerateAuthToken\": \"Bearer \"}, \"serviceId\": \"assist\", \"uploadFile\": false, \"idLookupKeys\": null, \"relativePath\": \"/en/hierarchy/rest/clients/nemo-client-${clientId}/accounts/${accountId}-account-default/agents/update?entityObj=${body}\", \"bodyDefinition\": {}, \"requestBodyKey\": null, \"restClientType\": null, \"idLookupRequired\": false, \"objectTranslator\": \"function translate(pageData, entityId, clientId, accountId, env, prefetch) { var uiData = JSON.parse(pageData).updateUserTest_p0; var t0 = uiData.tabsField[0]; var t1 = uiData.tabsField[1]; var t2 = uiData.tabsField[2]; var roles = []; if(t0.roleId == \\\"superlead_role_id\\\") { roles.push(\\\"lead_role_id\\\", \\\"agent_role_id\\\"); }else { roles.push(t0.roleId); } var apiData = {\\\"clientId\\\": \\\"nemo-client-\\\"+clientId,\\\"userName\\\": t0.userName,\\\"firstName\\\":t0.firstName,\\\"lastName\\\":t0.lastName,\\\"displayName\\\":t0.displayName,\\\"email\\\":t0.email,\\\"activeChatLimits\\\":t0.activeChatLimits,\\\"autoAcceptChats\\\":t0.autoAcceptChats,\\\"teamId\\\":t0.teamId,\\\"timezone\\\":\\\"GMT0\\\",\\\"roleIds\\\":roles,\\\"authenticationType\\\":t0.authenticationType||\\\"LOCAL_AUTH\\\",\\\"status\\\":t0.status,\\\"samlUserName\\\":\\\"\\\",\\\"key\\\":t0.key,\\\"skillLevels\\\": t1.ConfigMapper&&t1.ConfigMapper.map(function (skill) { var skLvl = skill ? { skillId: skill.id, skillLevelId:skill.id + \\\"-\\\" + (skill.key ? skill.key.toUpperCase() : \\\"HIGH\\\") } : []; return skLvl; })||[],\\\"monitoringTeamIds\\\":t2.ConfigMapper&&t2.ConfigMapper.map(function(team){return ({teamId: team.id})})||[],\\\"metadataMap\\\":{\\\"employeeId\\\":t0.employeeId}}; return JSON.stringify(apiData); }\", \"preFetchDefinition\": {}}','UPDATE','assist user update action','REST','{\"entityResponseTranslator\": \"var ApiResponse = function(_status, _message){ this.status = _status; this.message = _message; }; function translate(responseData) { try{ if(!responseData){ return new ApiResponse(\'ERROR\', \'Error while processing your request\'); } var uiData = JSON.parse(responseData); if(uiData != null && uiData.key){ return new ApiResponse(\'SUCCESS\', \'\'); } else { return new ApiResponse(\'ERROR\', uiData.errorMsg); } }catch(e){ return new ApiResponse(\'ERROR\', \'Error while processing your request\'); } }\"}','{}'),
(38,'default.user','2021-03-01 13:13:15.527428','Swati.Taneja@247-inc.com','2021-03-26 08:10:43.162190','{\"type\": \"REST\", \"method\": \"POST\", \"headers\": {\"Referer\": \"https://test-default.portal.assist.247-inc.net/en/console\", \"Content-Type\": \"application/x-www-form-urlencoded\", \"GenerateAuthToken\": \"Bearer \"}, \"serviceId\": \"assist\", \"uploadFile\": false, \"idLookupKeys\": null, \"relativePath\": \"/en/hierarchy/rest/clients/nemo-client-${clientId}/accounts/${accountId}-account-default/agents?entityObj=${body}\", \"bodyDefinition\": {}, \"requestBodyKey\": null, \"restClientType\": null, \"idLookupRequired\": false, \"objectTranslator\": \"function translate(pageData, entityId, clientId, accountId, env, prefetch) { var uiData = JSON.parse(pageData).createUserLive_p0; var t0 = uiData.tabsField[ 0 ]; var t1 = uiData.tabsField[ 1 ]; var t2 = uiData.tabsField[ 2 ]; var roles = []; if (t0.roleId == \\\"superlead_role_id\\\") { roles.push(\\\"lead_role_id\\\", \\\"agent_role_id\\\"); } else { roles.push(t0.roleId); } var apiData = { \\\"key\\\": \\\"\\\", \\\"userName\\\": t0.userName, \\\"firstName\\\": t0.firstName, \\\"lastName\\\": t0.lastName, \\\"displayName\\\": t0.displayName, \\\"email\\\": t0.email, \\\"activeChatLimits\\\": t0.activeChatLimits, \\\"autoAcceptChats\\\": t0.autoAcceptChats, \\\"teamId\\\": t0.teamId, \\\"timezone\\\": \\\"GMT0\\\", \\\"roleIds\\\": roles, \\\"authenticationType\\\": t0.authenticationType || \\\"LOCAL_AUTH\\\", \\\"status\\\": t0.status, \\\"samlUserName\\\": \\\"\\\", \\\"skillLevels\\\": t1.ConfigMapper && t1.ConfigMapper.map(function (skill) { var skLvl = skill ? { skillId: skill.id, skillLevelId: skill.id + \\\"-\\\" + (skill.key ? skill.key.toUpperCase() : \\\"HIGH\\\") } : []; return skLvl; }) || [], \\\"monitoringTeamIds\\\": t2.ConfigMapper && t2.ConfigMapper.map(function (team) { return ({ teamId: team.id }) }) || [], \\\"metadataMap\\\": { \\\"employeeId\\\": t0.employeeId } }; if (t0.newPassword !== \\\"\\\") { apiData.newPassword = t0.newPassword; apiData.confirmPassword = t0.confirmPassword; } return JSON.stringify(apiData); }\", \"preFetchDefinition\": {}}','CREATE','assist user create action','REST','{\"entityResponseTranslator\": \"var ApiResponse = function(_status, _message){ this.status = _status; this.message = _message; }; function translate(responseData) { try{ if(!responseData){ return new ApiResponse(\'ERROR\', \'Error while processing your request\'); } var uiData = JSON.parse(responseData); if(uiData != null && uiData.key){ return new ApiResponse(\'SUCCESS\', uiData.key); } else { return new ApiResponse(\'ERROR\', uiData.errorMsg); } }catch(e){ return new ApiResponse(\'ERROR\', \'Error while processing your request\'); } }\"}','{}'),
(39,'default.user','2021-03-01 13:13:15.527428','Swati.Taneja@247-inc.com','2021-03-26 09:17:00.552728','{\"type\": \"REST\", \"method\": \"POST\", \"headers\": {\"Content-Type\": \"application/x-www-form-urlencoded\", \"GenerateAuthToken\": \"Bearer \"}, \"serviceId\": \"assist\", \"uploadFile\": false, \"idLookupKeys\": null, \"relativePath\": \"/en/hierarchy/rest/clients/nemo-client-${clientId}/accounts/${accountId}-account-default/agents/update?entityObj=${body}\", \"bodyDefinition\": {}, \"requestBodyKey\": null, \"restClientType\": null, \"idLookupRequired\": false, \"objectTranslator\": \"function translate(pageData, entityId, clientId, accountId, env, prefetch) { var uiData = JSON.parse(pageData).updateUserLive_p0; var t0 = uiData.tabsField[0]; var t1 = uiData.tabsField[1]; var t2 = uiData.tabsField[2]; var roles = []; if(t0.roleId == \\\"superlead_role_id\\\") { roles.push(\\\"lead_role_id\\\", \\\"agent_role_id\\\"); }else { roles.push(t0.roleId); } var apiData = {\\\"clientId\\\": \\\"nemo-client-\\\"+clientId,\\\"userName\\\": t0.userName,\\\"firstName\\\":t0.firstName,\\\"lastName\\\":t0.lastName,\\\"displayName\\\":t0.displayName,\\\"email\\\":t0.email,\\\"activeChatLimits\\\":t0.activeChatLimits,\\\"autoAcceptChats\\\":t0.autoAcceptChats,\\\"teamId\\\":t0.teamId,\\\"timezone\\\":\\\"GMT0\\\",\\\"roleIds\\\":roles,\\\"authenticationType\\\":t0.authenticationType||\\\"LOCAL_AUTH\\\",\\\"status\\\":t0.status,\\\"samlUserName\\\":\\\"\\\",\\\"key\\\":t0.key,\\\"skillLevels\\\": t1.ConfigMapper&&t1.ConfigMapper.map(function (skill) { var skLvl = skill ? { skillId: skill.id, skillLevelId:skill.id + \\\"-\\\" + (skill.key ? skill.key.toUpperCase() : \\\"HIGH\\\") } : []; return skLvl; })||[],\\\"monitoringTeamIds\\\":t2.ConfigMapper&&t2.ConfigMapper.map(function(team){return ({teamId: team.id})})||[],\\\"metadataMap\\\":{\\\"employeeId\\\":t0.employeeId}}; return JSON.stringify(apiData); }\", \"preFetchDefinition\": {}}','UPDATE','assist user update action','REST','{\"entityResponseTranslator\": \"var ApiResponse = function(_status, _message){ this.status = _status; this.message = _message; }; function translate(responseData) { try{ if(!responseData){ return new ApiResponse(\'ERROR\', \'Error while processing your request\'); } var uiData = JSON.parse(responseData); if(uiData != null && uiData.key){ return new ApiResponse(\'SUCCESS\', \'\'); } else { return new ApiResponse(\'ERROR\', uiData.errorMsg); } }catch(e){ return new ApiResponse(\'ERROR\', \'Error while processing your request\'); } }\"}','{}'),
(40,'default.user','2019-08-26 13:13:15.527428','Jonathan.Paul@247-inc.com','2021-03-27 07:22:38.668862','{\"type\": \"REST\", \"method\": \"POST\", \"headers\": {\"Content-Type\": \"application/x-www-form-urlencoded\", \"GenerateAuthToken\": \"Bearer \"}, \"serviceId\": \"assist\", \"uploadFile\": false, \"idLookupKeys\": null, \"relativePath\": \"/en/hierarchy/rest/clients/nemo-client-${clientId}/accounts/${accountId}-account-default/clientstartupconfig/update?entityObj=${body}\", \"bodyDefinition\": {}, \"requestBodyKey\": null, \"restClientType\": null, \"idLookupRequired\": false, \"objectTranslator\": \"function translate(pageData, entityId, clientId, accountId, env, prefetch) { var apiData = JSON.parse(pageData).updateAccountConfig_p0; return JSON.stringify(apiData); }\", \"preFetchDefinition\": {}}','UPDATE','assist accountConfig update action','REST','{\"entityResponseTranslator\": \"var ApiResponse = function(_status, _message){ this.status = _status; this.message = _message; }; function translate(responseData) { try{ if(!responseData){ return new ApiResponse(\'ERROR\', \'Error while processing your request\'); } var uiData = JSON.parse(responseData); if(uiData != null && uiData.description){ return new ApiResponse(\'SUCCESS\', uiData.key); } else { return new ApiResponse(\'ERROR\', uiData.errorMessage); } }catch(e){ return new ApiResponse(\'ERROR\', \'Error while processing your request \'); } } \"}','{}'),
(41,'default.user','2019-08-26 13:13:15.527428','testuser1@247.ai','2021-03-27 06:59:50.269776','{\"type\": \"REST\", \"method\": \"GET\", \"headers\": {}, \"serviceId\": \"assist\", \"uploadFile\": false, \"idLookupKeys\": null, \"relativePath\": \"/en/admin/rest/ohs/get?entityId=${entity}&entityType=chatQueue\", \"bodyDefinition\": {}, \"requestBodyKey\": null, \"restClientType\": null, \"idLookupRequired\": false, \"objectTranslator\": \"function translate(pageData, entityId, clientId, accountId, env) {  return \\\"\\\"; }\", \"preFetchDefinition\": null}','UPDATE','assist queue GET action','REST','{\"entityResponseTranslator\": \"var ApiResponse = function(_status, _message){ this.status = _status; this.message = _message; }; function translate(responseData) { try{ if(!responseData){ return new ApiResponse(\'ERROR\', \'Error while processing your request\'); } var uiData = JSON.parse(JSON.parse(responseData).data.entity);  if(uiData != null && uiData.entityAttributes.id){ return new ApiResponse(uiData.status, uiData.entityAttributes.id); } else { return new ApiResponse(uiData.status, uiData.errorMessage); } }catch(e){ return new ApiResponse(\'ERROR\', \'Error while processing your request\'); } } \"}','{\"POLL\": {\"type\": \"POLL\", \"retryCount\": 3000, \"retryInterval\": 30000}}'),
(42,'default.user','2019-08-26 13:13:15.527428','Gangeyula.Chandra@247-inc.com','2021-03-25 10:40:06.497125','{\"type\": \"REST\", \"method\": \"POST\", \"headers\": {\"Content-Type\": \"application/x-www-form-urlencoded\", \"GenerateAuthToken\": \"Bearer \"}, \"serviceId\": \"assist\", \"uploadFile\": false, \"idLookupKeys\": null, \"relativePath\": \"/en/hierarchy/rest/clients/nemo-client-${clientId}/accounts/${accountId}-account-default/validator/update?entityObj=${body}\", \"bodyDefinition\": {}, \"requestBodyKey\": null, \"restClientType\": null, \"idLookupRequired\": false, \"objectTranslator\": \"function translate(pageData, entityId, clientId, accountId, env, prefetch) { var apiData = JSON.parse(pageData).updatePropertyValidation_p0; if(!apiData.validatorRule) {apiData.validatorRule=\\\"\\\"} if(!apiData.enumValues || apiData.enumValues.length==0) {apiData.enumValues=[\\\"\\\"]}  return JSON.stringify(apiData); }\", \"preFetchDefinition\": {}}','UPDATE','property validation update action','REST','{\"entityResponseTranslator\": \"var ApiResponse = function(_status, _message){ this.status = _status; this.message = _message; }; function translate(responseData) { try{ if(!responseData){ return new ApiResponse(\'ERROR\', \'Error while processing your request\'); } var uiData = JSON.parse(responseData); if(uiData != null && uiData.validatorId){ return new ApiResponse(\'SUCCESS\', uiData.validatorId); } else { return new ApiResponse(\'ERROR\', uiData.errorMessage); } }catch(e){ return new ApiResponse(\'ERROR\', \'Error while processing your request\'); } } \"}','{}'),
(43,'default.user','2019-08-26 13:13:15.527428','Gangeyula.Chandra@247-inc.com','2021-03-25 10:23:26.223688','{\"type\": \"REST\", \"method\": \"POST\", \"headers\": {\"Content-Type\": \"application/x-www-form-urlencoded\", \"GenerateAuthToken\": \"Bearer \"}, \"serviceId\": \"assist\", \"uploadFile\": false, \"idLookupKeys\": null, \"relativePath\": \"/en/hierarchy/rest/clients/nemo-client-${clientId}/accounts/${accountId}-account-default/validator?entityObj=${body}\", \"bodyDefinition\": {}, \"requestBodyKey\": null, \"restClientType\": null, \"idLookupRequired\": false, \"objectTranslator\": \"function translate(pageData, entityId, clientId, accountId, env, prefetch) { var apiData = JSON.parse(pageData).createPropertyValidation_p0; apiData.key=\\\"\\\"; if(!apiData.validatorRule) {apiData.validatorRule=\\\"\\\"} if(!apiData.enumValues || apiData.enumValues.length==0) {apiData.enumValues=[\\\"\\\"]}  return JSON.stringify(apiData); }\", \"preFetchDefinition\": {}}','CREATE','property validation create action','REST','{\"entityResponseTranslator\": \"var ApiResponse = function(_status, _message){ this.status = _status; this.message = _message; }; function translate(responseData) { try{ if(!responseData){ return new ApiResponse(\'ERROR\', \'Error while processing your request\'); } var uiData = JSON.parse(responseData); if(uiData != null && uiData.validatorId){ return new ApiResponse(\'SUCCESS\', uiData.validatorId); } else { return new ApiResponse(\'ERROR\', uiData.errorMessage); } }catch(e){ return new ApiResponse(\'ERROR\', \'Error while processing your request\'); } } \"}','{}'),
(44,'default.user','2020-10-16 13:13:15.527428','testuser1@247.ai','2021-03-27 08:07:24.040959','{\"type\": \"REST\", \"method\": \"POST\", \"headers\": {\"Content-Type\": \"application/x-www-form-urlencoded\", \"GenerateAuthToken\": \"Bearer \"}, \"serviceId\": \"assist\", \"uploadFile\": false, \"idLookupKeys\": null, \"relativePath\": \"/en/hierarchy/rest/clients/nemo-client-${clientId}/accounts/${accountId}-account-default/urlfilterconfig/update?entityObj=${body}\", \"bodyDefinition\": {}, \"requestBodyKey\": null, \"restClientType\": null, \"idLookupRequired\": false, \"objectTranslator\": \"function translate(pageData, entityId, clientId, accountId, env, prefetch) { pageData = JSON.parse(pageData).authorisedUrls_p0; prefetch = JSON.parse(prefetch); var apiData = {}; apiData.key = pageData.key; apiData.accountId = pageData.accountId; apiData.scopeType = pageData.scopeType; apiData.scopeValue = pageData.scopeValue; apiData.urlFilterListingType = pageData.filterType; apiData.enabled = pageData.enabled == \\\"true\\\"; apiData.filterConfig = prefetch.enabledUrls.filterConfig; pageData.filterConfig.forEach(function (pageDataFilter) { urlId = pageDataFilter.urlFilterConfigId; if (urlId != undefined) { apiData.filterConfig.forEach(function (apiFilter) { if (urlId === apiFilter.urlFilterConfigId) { apiFilter.filterText = pageDataFilter.filterText; apiFilter.filterOptions = pageDataFilter.filterOptions; apiFilter.urlConfigDeleted = true; } }); } else { apiData.filterConfig.push({ urlFilterConfigId: pageData.key, filterText: pageDataFilter.filterText, filterOptions: pageDataFilter.filterOptions, urlConfigDeleted: true }); } }); return JSON.stringify(apiData) } \", \"preFetchDefinition\": {\"enabledUrls\": {\"fetchFor\": \"authorisedUrls_p0\", \"fetchType\": \"PAGE_DATA_VALUE\"}}}','UPDATE','Update Authorised Urls','REST','{\"entityResponseTranslator\": \"var ApiResponse = function(_status, _message){ this.status = _status; this.message = _message; }; function translate(responseData) { try{ if(!responseData){ return new ApiResponse(\'ERROR\', \'Error while processing your request\'); } var uiData = JSON.parse(responseData); if(uiData != null && uiData.key){ return new ApiResponse(uiData.status, \'\'); } else { return new ApiResponse(\'ERROR\', uiData.errorMessage||\'System error while publishing\'); } }catch(e){ return new ApiResponse(\'ERROR\', \'Error while processing your request\'); } } \"}','{}'),
(45,'default.user','2020-10-16 13:13:15.527428','Gangeyula.Chandra@247-inc.com','2021-03-26 05:27:52.531704','{\"type\": \"REST\", \"method\": \"POST\", \"headers\": {\"Content-Type\": \"application/x-www-form-urlencoded\", \"GenerateAuthToken\": \"Bearer \"}, \"serviceId\": \"assist\", \"uploadFile\": false, \"idLookupKeys\": null, \"relativePath\": \"/en/hierarchy/rest/clients/nemo-client-${clientId}/accounts/${accountId}-account-default/timeoutconfig\", \"bodyDefinition\": {}, \"requestBodyKey\": \"entityObj\", \"restClientType\": \"REST_TEMPLATE\", \"idLookupRequired\": false, \"objectTranslator\": \"function translate(pageData, entityId, clientId, accountId, env) { pageData = JSON.parse(pageData).createSessionTimeout_p0; var profileId = \\\"timeout_\\\"; var apiData = {}; apiData.key = pageData.key; apiData.expression = pageData.expression; apiData.profileId = profileId.concat(pageData.timeout); return JSON.stringify(apiData); }\", \"preFetchDefinition\": null}','CREATE','Create Session Timeout Configuration','REST','{\"entityResponseTranslator\": \"var ApiResponse = function(_status, _message){ this.status = _status; this.message = _message; }; function translate(responseData) { try{ if(!responseData){ return new ApiResponse(\'ERROR\', \'Error while processing your request\'); } var uiData = JSON.parse(responseData); if(uiData != null ){ return new ApiResponse(\'SUCCESS\', uiData.expression); } else { return new ApiResponse(uiData.errorCode, uiData.errorMessage||\'System error while publishing\'); } }catch(e){ return new ApiResponse(\'ERROR\', \'Error while processing your request\'); } } \"}','{}'),
(46,'default.user','2020-10-16 13:13:15.527428','Prasad.Koranne@247-inc.com','2021-03-22 14:27:49.999452','{\"type\": \"REST\", \"method\": \"POST\", \"headers\": {\"Content-Type\": \"application/x-www-form-urlencoded\", \"GenerateAuthToken\": \"Bearer\"}, \"serviceId\": \"assist\", \"uploadFile\": false, \"idLookupKeys\": null, \"relativePath\": \"/en/hierarchy/rest/clients/nemo-client-${clientId}/accounts/${accountId}-account-default/timeoutconfig/update\", \"bodyDefinition\": {}, \"requestBodyKey\": \"entityObj\", \"restClientType\": \"REST_TEMPLATE\", \"idLookupRequired\": false, \"objectTranslator\": \"function translate(pageData, entityId, clientId, accountId, env) { pageData = JSON.parse(pageData).updateSessionTimeout_p0; var profileId = \\\"timeout_\\\"; var apiData = {}; apiData.key = pageData.key; apiData.expression = pageData.expression; apiData.profileId = profileId.concat(pageData.timeout); return JSON.stringify(apiData); }\", \"preFetchDefinition\": null}','UPDATE','Update Session Timeout Configuration','REST','{\"entityResponseTranslator\": \"var ApiResponse = function(_status, _message){ this.status = _status; this.message = _message; }; function translate(responseData) { try{ if(!responseData){ return new ApiResponse(\'ERROR\', \'Error while processing your request\'); } var uiData = JSON.parse(responseData); if(uiData != null ){ return new ApiResponse(\'SUCCESS\', uiData.expression); } else { return new ApiResponse(uiData.errorCode, uiData.errorMessage||\'System error while publishing\'); } }catch(e){ return new ApiResponse(\'ERROR\', \'Error while processing your request\'); } } \"}','{}'),
(47,'default.user','2020-10-16 13:13:15.527428','Gangeyula.Chandra@247-inc.com','2021-03-26 19:54:22.183047','{\"type\": \"REST\", \"method\": \"POST\", \"headers\": {\"uploadFile\": \"true\", \"Content-Type\": \"multipart/form-data\", \"GenerateAuthToken\": \"Bearer \"}, \"serviceId\": \"assist\", \"uploadFile\": true, \"idLookupKeys\": null, \"relativePath\": \"/en/hierarchy/rest/clients/nemo-client-${clientId}/accounts/${accountId}-account-default/smartresponse/uploadfile\", \"bodyDefinition\": {}, \"requestBodyKey\": \"file\", \"restClientType\": \"MULTIPART_FILE\", \"idLookupRequired\": false, \"objectTranslator\": \"\", \"preFetchDefinition\": null}','CREATE','Create Smart Response','REST','{\"entityResponseTranslator\": \"var ApiResponse = function (_status, _message) { this.status = _status; this.message = _message; }; function translate(responseData) { try { var uiData = JSON.stringify(responseData); if (uiData.indexOf(\\\"true\\\") > -1) { return new ApiResponse(\\\"SUCCESS\\\", \\\"\\\"); } else { return new ApiResponse(\\\"ERROR\\\", \\\"Error while processing your request\\\"); } } catch (e) { return new ApiResponse(\\\"ERROR\\\", \\\"Error while processing your request\\\"); } }\"}','{}'),
(48,'default.user','2020-10-16 13:13:15.527428','testuser1@247.ai','2021-03-26 08:19:51.484814','{\"type\": \"REST\", \"method\": \"POST\", \"headers\": {\"Referer\": \"https://test-default.portal.assist.247-inc.net/en/console\", \"Content-Type\": \"application/x-www-form-urlencoded\", \"GenerateAuthToken\": \"Bearer \"}, \"serviceId\": \"assist\", \"uploadFile\": false, \"idLookupKeys\": null, \"relativePath\": \"/en/hierarchy/rest/clients/nemo-client-${clientId}/accounts/${accountId}-account-default/users/${entity}/password/reset\", \"bodyDefinition\": {}, \"requestBodyKey\": null, \"restClientType\": null, \"idLookupRequired\": false, \"objectTranslator\": \"function translate(pageData, entityId, clientId, accountId, env, prefetch) { var data = JSON.parse(pageData); return JSON.stringify(data.tabsField[0]); }\", \"preFetchDefinition\": null}','UPDATE','agents reset password (NON-ORC)','REST','{\"entityResponseTranslator\": \"var ApiResponse = function (_status, _message) { this.status = _status; this.message = _message; }; function translate(responseData, responseCode) { try { if (responseCode == 200) { return new ApiResponse(\\\"SUCCESS\\\", \\\"Reset password is successful\\\"); } else { return new ApiResponse(\\\"ERROR\\\", \\\"Reset password unsuccessful, Error: \\\"+ JSON.parse(responseData).errorMessage); } } catch (e) { return new ApiResponse(\\\"ERROR\\\", \\\"Error while processing your request\\\"); } }\"}','{}'),
(49,'default.user','2020-10-16 13:13:15.527428','testuser1@247.ai','2021-03-26 06:14:41.546203','{\"type\": \"REST\", \"method\": \"POST\", \"headers\": {\"Referer\": \"https://test-default.portal.assist.247-inc.net/en/console\", \"Content-Type\": \"application/x-www-form-urlencoded\", \"GenerateAuthToken\": \"Bearer \"}, \"serviceId\": \"assist\", \"uploadFile\": false, \"idLookupKeys\": null, \"relativePath\": \"/en/hierarchy/rest/clients/nemo-client-${clientId}/accounts/${accountId}-account-default/users/${entity}/password/modify?entityObj=${body}\", \"bodyDefinition\": {}, \"requestBodyKey\": null, \"restClientType\": null, \"idLookupRequired\": false, \"objectTranslator\": \"function translate(pageData, entityId, clientId, accountId, env, prefetch) { var uiData = JSON.parse(pageData).tabsField[0]; var apiData = { \\\"clientId\\\": \\\"nemo-client\\\" + clientId, \\\"key\\\": uiData.key, \\\"firstName\\\": uiData.firstName, \\\"userName\\\": uiData.userName, \\\"lastName\\\": uiData.lastName, \\\"displayName\\\": uiData.displayName, \\\"screenName\\\":uiData.displayName, \\\"email\\\": uiData.email, \\\"activeChatLimits\\\": uiData.activeChatLimits, \\\"autoAcceptChats\\\":uiData.autoAcceptChats, \\\"status\\\": uiData.status, \\\"teamId\\\": uiData.teamId, \\\"newPassword\\\": uiData.newPassword, \\\"confirmPassword\\\": uiData.confirmPassword, \\\"roleIds\\\": [ uiData.roleId ], \\\"skillLevels\\\": [], \\\"monitoringTeamIds\\\": [], \\\"authenticationType\\\": uiData.authenticationType, \\\"corruptUserMessage\\\": \\\"\\\", \\\"samlUserName\\\": \\\"\\\", \\\"metadataMap\\\": { \\\"employeeId\\\": uiData.employeeId } }; return JSON.stringify(apiData); }\", \"preFetchDefinition\": null}','UPDATE','agents modify password (NON-ORC)','REST','{\"entityResponseTranslator\": \"var ApiResponse = function (_status, _message) { this.status = _status; this.message = _message; }; function translate(responseData, responseCode) { try { if (responseCode == 304 || responseCode == 200) { return new ApiResponse(\\\"SUCCESS\\\", \\\"Reset password is successful\\\"); } else { return new ApiResponse(\\\"ERROR\\\", \\\"Reset password unsuccessful, Error: \\\"+ JSON.parse(responseData).errorMessage); } } catch (e) { return new ApiResponse(\\\"ERROR\\\", \\\"Error while processing your request\\\"); } }\"}','{}'),
(50,'default.user','2020-10-16 13:13:15.527428','testuser1@247.ai','2021-03-27 06:35:08.103940','{\"type\": \"REST\", \"method\": \"POST\", \"headers\": {\"Content-Type\": \"application/x-www-form-urlencoded\", \"GenerateAuthToken\": \"Bearer \"}, \"serviceId\": \"assist\", \"uploadFile\": false, \"idLookupKeys\": null, \"relativePath\": \"/en/hierarchy/rest/clients/nemo-client-${clientId}/accounts/${accountId}-account-default/invitemanagement/update?entityObj=${body}\", \"bodyDefinition\": {}, \"requestBodyKey\": null, \"restClientType\": null, \"idLookupRequired\": false, \"objectTranslator\": \"function translate(pageData, entityId, clientId, accountId, env) { var uiData = JSON.parse(pageData).createQueues_p0.tabsField; var uiDataB = uiData[0]; var uiDataA = uiData[1].assistConfig; var apiData = [{ queueName : uiDataB.queueName, queueDescription : uiDataB.queueDesc, acceptanceRate : uiDataA.inviteMgmt.invites.toString(), safetyfactor : uiDataA.inviteMgmt.safetyfactor, expiryInterval : uiDataA.inviteMgmt.expiryInterval, caModelType : uiDataA.inviteMgmt.caModelType, key : entityId}]; return JSON.stringify(apiData); }\", \"preFetchDefinition\": null}','CREATE','Update Invite Management','REST','{\"entityResponseTranslator\": \"var ApiResponse = function(_status, _message){ this.status = _status; this.message = _message; }; function translate(responseData) { try{ if(!responseData){ return new ApiResponse(\'ERROR\', \'Error while processing your request\'); } var uiData = JSON.parse(responseData); if(uiData != null ){ return new ApiResponse(\'SUCCESS\', \'\'); } else { return new ApiResponse(uiData.status, uiData.errorMessage||\'System error while publishing\'); } }catch(e){ return new ApiResponse(\'ERROR\', \'Error while processing your request\'); } } \"}','{}'),
(51,'default.user','2019-08-26 13:13:15.527428','testuser1@247.ai','2021-03-27 06:35:08.104779','{\"type\": \"REST\", \"method\": \"GET\", \"headers\": {}, \"serviceId\": \"assist\", \"uploadFile\": false, \"idLookupKeys\": null, \"relativePath\": \"/en/admin/rest/ohs/get?entityId=${entity}&entityType=chatQueue\", \"bodyDefinition\": {}, \"requestBodyKey\": null, \"restClientType\": null, \"idLookupRequired\": false, \"objectTranslator\": \"function translate(pageData, entityId, clientId, accountId, env) {  return \\\"\\\"; }\", \"preFetchDefinition\": null}','CREATE','assist queue GET action','REST','{\"entityResponseTranslator\": \"var ApiResponse = function(_status, _message){ this.status = _status; this.message = _message; }; function translate(responseData) { try{ if(!responseData){ return new ApiResponse(\'ERROR\', \'Error while processing your request\'); } var uiData = JSON.parse(JSON.parse(responseData).data.entity);  if(uiData != null && uiData.entityAttributes.id){ return new ApiResponse(uiData.status, uiData.entityAttributes.id); } else { return new ApiResponse(uiData.status, uiData.errorMessage); } }catch(e){ return new ApiResponse(\'ERROR\', \'Error while processing your request\'); } } \"}','{\"POLL\": {\"type\": \"POLL\", \"retryCount\": 3000, \"retryInterval\": 30000}}');

INSERT INTO `action_dependencies` VALUES
(13,12),
(51,13),
(25,14),
(41,16),
(20,19),
(21,20),
(22,21),
(50,35),
(14,41),
(35,51);

INSERT INTO `action_workflow` VALUES
(1,'default.user','2019-08-27 17:44:01.596456','default.user','2019-08-27 17:44:01.596456',1,'chathours'),
(2,'default.user','2019-08-27 17:44:15.136579','default.user','2019-08-27 17:44:15.136579',2,'tags'),
(4,'default.user','2019-08-27 17:44:15.136579','default.user','2019-08-27 17:44:15.136579',6,'tags'),
(9,'default.user','2019-08-27 17:44:15.136579','default.user','2019-08-27 17:44:15.136579',5,'teams'),
(10,'default.user','2019-08-27 17:44:15.136579','default.user','2019-08-27 17:44:15.136579',4,'teams'),
(13,'default.user','2019-08-27 17:44:15.136579','default.user','2019-08-27 17:44:15.136579',8,'skills'),
(14,'default.user','2019-08-27 17:44:15.136579','default.user','2019-08-27 17:44:15.136579',9,'skills'),
(15,'default.user','2019-08-27 17:44:15.136579','default.user','2019-08-27 17:44:15.136579',12,'queues'),
(18,'default.user','2019-08-27 17:44:15.136579','default.user','2019-08-27 17:44:15.136579',14,'queues'),
(20,'default.user','2019-08-27 17:44:15.136579','default.user','2019-08-27 17:44:15.136579',16,'queues'),
(21,'default.user','2019-08-27 17:44:15.136579','default.user','2019-08-27 17:44:15.136579',17,'STALive'),
(22,'default.user','2019-08-27 17:44:15.136579','default.user','2019-08-27 17:44:15.136579',18,'STATest'),
(23,'default.user','2019-08-27 17:44:15.136579','default.user','2019-08-27 17:44:15.136579',19,'passwordPolicy'),
(24,'default.user','2019-08-27 17:44:15.136579','default.user','2019-08-27 17:44:15.136579',20,'passwordPolicy'),
(25,'default.user','2019-08-27 17:44:15.136579','default.user','2019-08-27 17:44:15.136579',21,'passwordPolicy'),
(26,'default.user','2019-08-27 17:44:15.136579','default.user','2019-08-27 17:44:15.136579',22,'passwordPolicy'),
(27,'default.user','2019-08-27 17:44:15.136579','default.user','2019-08-27 17:44:15.136579',27,'propertyConfig'),
(28,'default.user','2019-08-27 17:44:15.136579','default.user','2019-08-27 17:44:15.136579',28,'maskingPatterns'),
(29,'default.user','2019-08-27 17:44:15.136579','default.user','2019-08-27 17:44:15.136579',29,'maskingPatterns'),
(30,'default.user','2019-08-27 17:44:15.136579','default.user','2019-08-27 17:44:15.136579',26,'propertyConfig'),
(31,'default.user','2019-08-27 17:44:15.136579','default.user','2019-08-27 17:44:15.136579',24,'activeCards'),
(32,'default.user','2019-08-27 17:44:15.136579','default.user','2019-08-27 17:44:15.136579',23,'activeCards'),
(33,'default.user','2019-08-27 17:44:15.136579','default.user','2019-08-27 17:44:15.136579',30,'leadConsole'),
(34,'default.user','2019-08-27 17:44:15.136579','default.user','2019-08-27 17:44:15.136579',31,'leadConsole'),
(35,'default.user','2019-08-27 17:44:15.136579','default.user','2019-08-27 17:44:15.136579',25,'queues'),
(37,'default.user','2019-08-27 17:44:15.136579','default.user','2019-08-27 17:44:15.136579',34,'keywordAlerts'),
(38,'default.user','2019-08-27 17:44:15.136579','default.user','2019-08-27 17:44:15.136579',35,'queues'),
(39,'default.user','2019-08-27 17:44:15.136579','default.user','2019-08-27 17:44:15.136579',32,'mailer'),
(40,'default.user','2019-08-27 17:44:15.136579','default.user','2019-08-27 17:44:15.136579',33,'mailer'),
(43,'default.user','2019-08-27 17:44:15.136579','default.user','2019-08-27 17:44:15.136579',40,'accountConfig'),
(44,'default.user','2019-08-27 17:44:15.136579','default.user','2019-08-27 17:44:15.136579',41,'queues'),
(45,'default.user','2019-08-27 17:44:15.136579','default.user','2019-08-27 17:44:15.136579',42,'propertyValidation'),
(46,'default.user','2019-08-27 17:44:15.136579','default.user','2019-08-27 17:44:15.136579',43,'propertyValidation'),
(47,'default.user','2019-08-27 17:44:15.136579','default.user','2019-08-27 17:44:15.136579',44,'authorisedUrls'),
(48,'default.user','2021-03-01 17:44:15.136579','default.user','2021-03-01 17:44:15.136579',36,'userTest'),
(49,'default.user','2019-08-27 17:44:15.136579','default.user','2019-08-27 17:44:15.136579',46,'sessiontimeout'),
(50,'default.user','2021-03-01 17:44:15.136579','default.user','2021-03-01 17:44:15.136579',38,'userLive'),
(51,'default.user','2021-03-01 17:44:15.136579','default.user','2021-03-01 17:44:15.136579',39,'userLive'),
(52,'default.user','2019-08-27 17:44:15.136579','default.user','2019-08-27 17:44:15.136579',47,'smartResponse'),
(53,'default.user','2021-03-01 17:44:15.136579','default.user','2021-03-01 17:44:15.136579',37,'userTest'),
(54,'default.user','2019-08-27 17:44:15.136579','default.user','2019-08-27 17:44:15.136579',45,'sessiontimeout'),
(55,'default.user','2019-08-27 17:44:15.136579','default.user','2019-08-27 17:44:15.136579',50,'queues'),
(56,'default.user','2019-08-27 17:44:15.136579','default.user','2019-08-27 17:44:15.136579',51,'queues'),
(57,'default.user','2021-03-25 22:44:15.136579','default.user','2021-03-25 22:44:15.136579',13,'queues');

SET FOREIGN_KEY_CHECKS=1;
