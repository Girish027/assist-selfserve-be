use self_serve;
UPDATE `fetch_config_template` SET `params` = '{\"contexts\": [\"clientId\", \"accountId\", \"componentClientId\", \"componentAccountId\"], \"constants\": {\"env\": \"DEV\"}}', `relativeurl` = '/adminconsole/rest/tagsfile?client=${componentClientId}&account=${componentAccountId}&environment=${env}' WHERE (`id` = '1');
UPDATE `fetch_config_template` SET `params` = '{\"contexts\": [\"clientId\", \"accountId\", \"componentClientId\", \"componentAccountId\"], \"constants\": {\"env\": \"PRODUCTION\"}}', `relativeurl` = '/adminconsole/rest/tagsfile?client=${componentClientId}&account=${componentAccountId}&environment=${env}' WHERE (`id` = '2');
UPDATE `fetch_config_template` SET `params` = '{\"contexts\": [\"componentAccountId\"], \"constants\": {}}', `relativeurl` = '/v1/ohs/adminEntity/listByAccount?entityType=queue&accountId=${componentAccountId}-account-default' WHERE (`id` = '3');
UPDATE `fetch_config_template` SET `params` = '{\"contexts\": [\"clientId\", \"accountId\", \"componentClientId\"], \"constants\": {}}', `relativeurl` = '/v1/ohs/client/${componentClientId}' WHERE (`id` = '5');
UPDATE `fetch_config_template` SET `params` = '{\"contexts\": [\"clientId\", \"accountId\", \"componentClientId\", \"entity\"], \"constants\": {}}' WHERE (`id` = '6');
UPDATE `fetch_config_template` SET `params` = '{\"contexts\": [\"componentAccountId\"], \"constants\": {}}', `relativeurl` = '/v1/ohs/adminEntity/listByAccount?entityType=tag&accountId=${componentAccountId}' WHERE (`id` = '7');
UPDATE `fetch_config_template` SET `params` = '{\"contexts\": [\"componentAccountId\"], \"constants\": {}}', `relativeurl` = '/v1/ohs/adminEntity/listByAccount?entityType=team&accountId=${componentAccountId}' WHERE (`id` = '8');
UPDATE `fetch_config_template` SET `params` = '{\"contexts\": [\"clientId\", \"accountId\", \"componentClientId\", \"componentAccountId\"], \"constants\": {}}', `relativeurl` = '/en/admin/rest/ohs/listByAccount?entityType=skill&accountId=${componentClientId}' WHERE (`id` = '10');
UPDATE `fetch_config_template` SET `params` = '{\"contexts\": [\"clientId\", \"accountId\", \"componentClientId\", \"entity\"], \"constants\": {}}' WHERE (`id` = '12');
UPDATE `fetch_config_template` SET `params` = '{\"contexts\": [\"clientId\", \"accountId\", \"componentClientId\", \"componentAccountId\"], \"constants\": {}}', `relativeurl` = '/en/admin/rest/ohs/listByAccount?entityType=mailerConfigKey&accountId=${componentAccountId}' WHERE (`id` = '13');
UPDATE `fetch_config_template` SET `params` = '{\"contexts\": [\"clientId\", \"accountId\", \"componentClientId\", \"componentAccountId\"], \"constants\": {}}', `relativeurl` = '/en/admin/rest/ohs/listByAccount?entityType=resourceFree&accountId=${componentAccountId}' WHERE (`id` = '14');
UPDATE `fetch_config_template` SET `params` = '{\"contexts\": [\"componentAccountId\"], \"constants\": {}}', `relativeurl` = '/v1/ohs/adminEntity/listByAccount?entityType=queue&accountId=${componentAccountId}' WHERE (`id` = '16');
UPDATE `fetch_config_template` SET `params` = '{\"contexts\": [\"componentAccountId\"], \"constants\": {}}', `relativeurl` = '/v1/ohs/adminEntity/listByAccount?entityType=team&accountId=${componentAccountId}' WHERE (`id` = '17');
UPDATE `fetch_config_template` SET `params` = '{\"contexts\": [\"clientId\", \"accountId\", \"componentClientId\", \"entity\"], \"constants\": {}}' WHERE (`id` = '18');
UPDATE `fetch_config_template` SET `params` = '{\"contexts\": [\"clientId\", \"accountId\", \"componentClientId\", \"componentAccountId\"], \"constants\": {}}', `relativeurl` = '/en/admin/rest/ohs/listByAccount?entityType=skill&accountId=${componentAccountId}' WHERE (`id` = '19');
UPDATE `fetch_config_template` SET `params` = '{\"contexts\": [\"clientId\", \"accountId\", \"componentClientId\", \"componentAccountId\"], \"constants\": {}}', `relativeurl` = '/en/admin/rest/ohs/listByAccount?entityType=chatUser&accountId=${componentAccountId}' WHERE (`id` = '20');
UPDATE `fetch_config_template` SET `params` = '{\"contexts\": [\"componentAccountId\"], \"constants\": {}}', `relativeurl` = '/v1/ohs/adminEntity/listByAccount?entityType=tag&accountId=${componentAccountId}' WHERE (`id` = '22');
UPDATE `fetch_config_template` SET `params` = '{\"contexts\": [\"clientId\", \"accountId\", \"componentClientId\", \"entity\"], \"constants\": {}}' WHERE (`id` = '24');
UPDATE `fetch_config_template` SET `params` = '{\"contexts\": [\"clientId\", \"accountId\", \"componentClientId\", \"entity\"], \"constants\": {}}' WHERE (`id` = '25');
UPDATE `fetch_config_template` SET `params` = '{\"contexts\": [\"componentAccountId\"], \"constants\": {}}', `relativeurl` = '/v1/ohs/adminEntity/listByAccount?entityType=queue&accountId=${componentAccountId}' WHERE (`id` = '26');
UPDATE `fetch_config_template` SET `params` = '{\"contexts\": [\"clientId\", \"accountId\", \"componentClientId\", \"entity\"], \"constants\": {}}' WHERE (`id` = '28');
UPDATE `fetch_config_template` SET `params` = '{\"contexts\": [\"clientId\", \"accountId\", \"componentClientId\", \"componentAccountId\", \"entity\"], \"constants\": {}}', `relativeurl` = '/en/hierarchy/rest/clients/${componentClientId}/accounts/${componentAccountId}/authpolicy' WHERE (`id` = '29');
UPDATE `fetch_config_template` SET `params` = '{\"contexts\": [\"clientId\", \"accountId\", \"componentClientId\", \"componentAccountId\", \"entity\"], \"constants\": {}}', `relativeurl` = '/en/hierarchy/rest/clients/${componentClientId}/accounts/${componentAccountId}/authpolicy' WHERE (`id` = '30');
UPDATE `fetch_config_template` SET `params` = '{\"contexts\": [\"clientId\", \"accountId\", \"componentClientId\", \"componentAccountId\"], \"constants\": {}}', `relativeurl` = '/en/hierarchy/rest/clients/${componentClientId}/accounts/${componentAccountId}/smartcommand' WHERE (`id` = '33');
UPDATE `fetch_config_template` SET `params` = '{\"contexts\": [\"clientId\", \"accountId\", \"componentClientId\", \"componentAccountId\"], \"constants\": {}}', `relativeurl` = '/crs/v1/clients/${componentClientId}/accounts/${componentAccountId}/activecards/meta?view=live&channel=CHAT' WHERE (`id` = '34');
UPDATE `fetch_config_template` SET `params` = '{\"contexts\": [\"clientId\", \"accountId\", \"componentClientId\", \"componentAccountId\", \"entity\"], \"constants\": {}}', `relativeurl` = '/en/hierarchy/rest/clients/${componentClientId}/accounts/${componentAccountId}/smartcommand/${entity}' WHERE (`id` = '35');
UPDATE `fetch_config_template` SET `params` = '{\"contexts\": [\"clientId\", \"accountId\", \"componentClientId\", \"componentAccountId\"], \"constants\": {}}', `relativeurl` = '/en/hierarchy/rest/clients/${componentClientId}/accounts/${componentAccountId}/propertyconfiguration' WHERE (`id` = '36');
UPDATE `fetch_config_template` SET `params` = '{\"contexts\": [\"clientId\", \"accountId\", \"componentClientId\", \"componentAccountId\", \"entity\"], \"constants\": {}}', `relativeurl` = '/en/hierarchy/rest/clients/${componentClientId}/accounts/${componentAccountId}/propertyconfiguration/${entity}' WHERE (`id` = '37');
UPDATE `fetch_config_template` SET `params` = '{\"contexts\": [\"clientId\", \"accountId\", \"componentClientId\", \"componentAccountId\"], \"constants\": {}}', `relativeurl` = '/en/hierarchy/rest/clients/${componentClientId}/accounts/${componentAccountId}/validator' WHERE (`id` = '38');
UPDATE `fetch_config_template` SET `params` = '{\"contexts\": [\"clientId\", \"accountId\", \"componentClientId\", \"componentAccountId\", \"entity\"], \"constants\": {}}', `relativeurl` = '/en/hierarchy/rest/clients/${componentClientId}/accounts/${componentAccountId}/messagepolicy/${entity}' WHERE (`id` = '39');
UPDATE `fetch_config_template` SET `params` = '{\"contexts\": [\"clientId\", \"accountId\", \"componentClientId\", \"componentAccountId\"], \"constants\": {}}', `relativeurl` = '/en/hierarchy/rest/clients/${componentClientId}/accounts/${componentAccountId}/messagepolicy' WHERE (`id` = '40');
UPDATE `fetch_config_template` SET `params` = '{\"contexts\": [\"clientId\", \"accountId\", \"componentClientId\", \"componentAccountId\"], \"constants\": {}}', `relativeurl` = '/en/hierarchy/rest/clients/${componentClientId}/accounts/${componentAccountId}/monitoringconfig' WHERE (`id` = '44');
UPDATE `fetch_config_template` SET `params` = '{\"contexts\": [\"clientId\", \"accountId\", \"componentClientId\", \"componentAccountId\", \"entity\"], \"constants\": {}}', `relativeurl` = '/en/hierarchy/rest/clients/${componentClientId}/accounts/${componentAccountId}/monitoringconfig/${entity}' WHERE (`id` = '45');
UPDATE `fetch_config_template` SET `params` = '{\"contexts\": [\"clientId\", \"accountId\", \"componentClientId\", \"componentAccountId\"], \"constants\": {}}', `relativeurl` = '/en/hierarchy/rest/clients/${componentClientId}/accounts/${componentAccountId}/mailerconfig' WHERE (`id` = '46');

UPDATE `fetch_config_template` SET `params` = '{\"contexts\": [\"clientId\", \"accountId\", \"componentClientId\", \"componentAccountId\", \"entity\"], \"constants\": {}}', `relativeurl` = '/en/hierarchy/rest/clients/${componentClientId}/accounts/${componentAccountId}/mailerconfig/${entity}' WHERE (`id` = '47');
UPDATE `fetch_config_template` SET `params` = '{\"contexts\": [\"clientId\", \"accountId\", \"componentClientId\", \"componentAccountId\"], \"constants\": {}}', `relativeurl` = '/en/hierarchy/rest/clients/${componentClientId}/accounts/${componentAccountId}/notificationconfig' WHERE (`id` = '48');
UPDATE `fetch_config_template` SET `params` = '{\"contexts\": [\"clientId\", \"accountId\", \"componentClientId\", \"componentAccountId\", \"entity\"], \"constants\": {}}', `relativeurl` = '/en/hierarchy/rest/clients/${componentClientId}/accounts/${componentAccountId}/notificationconfig/${entity}' WHERE (`id` = '49');
UPDATE `fetch_config_template` SET `params` = '{\"contexts\": [\"componentAccountId\", \"clientId\", \"accountId\", \"componentClientId\", \"entity\"], \"constants\": {}}', `relativeurl` = '/en/hierarchy/rest/clients/${componentClientId}/accounts/${componentAccountId}/agents/${entity}' WHERE (`id` = '50');

UPDATE `fetch_config_template` SET `params` = '{\"contexts\": [\"accountId\", \"componentAccountId\"], \"constants\": {}}', `relativeurl` = '/v1/ohs/adminEntity/listByAccount?entityType=team&accountId=${componentAccountId}' WHERE (`id` = '66');
UPDATE `fetch_config_template` SET `params` = '{\"contexts\": [\"accountId\",\"componentAccountId\"], \"constants\": {}}', `relativeurl` = '/v1/ohs/adminEntity/listByAccount?entityType=team&accountId=${componentAccountId}' WHERE (`id` = '65');
UPDATE `fetch_config_template` SET `params` = '{\"contexts\": [\"accountId\", \"clientId\",\"componentAccountId\",\"componentClientId\"], \"constants\": {}}', `relativeurl` = '/en/hierarchy/rest/clients/${componentClientId}/accounts/${componentAccountId}/smartresponse/downloadexcel' WHERE (`id` = '64');
UPDATE `fetch_config_template` SET `params` = '{\"contexts\": [\"clientId\", \"accountId\",\"componentClientId\",\"componentAccountId\"], \"constants\": {}}', `relativeurl` = '/en/hierarchy/rest/clients/${componentClientId}/accounts/${componentAccountId}/propertyconfiguration' WHERE (`id` = '63');
UPDATE `fetch_config_template` SET `params` = '{\"contexts\": [\"clientId\", \"accountId\",\"componentClientId\",\"componentAccountId\"], \"constants\": {}}', `relativeurl` = '/en/hierarchy/rest/clients/${componentClientId}/accounts/${componentAccountId}/timeoutconfig' WHERE (`id` = '62');
UPDATE `fetch_config_template` SET `params` = '{\"contexts\": [\"clientId\", \"accountId\", \"entity\",\"componentClientId\",\"componentAccountId\"], \"constants\": {}}', `relativeurl` = '/en/hierarchy/rest/clients/${componentClientId}/accounts/${componentAccountId}/timeoutconfig/${entity}' WHERE (`id` = '61');
UPDATE `fetch_config_template` SET `params` = '{\"contexts\": [\"clientId\", \"accountId\", \"entity\",\"componentClientId\",\"componentAccountId\"], \"constants\": {}}', `relativeurl` = '/en/hierarchy/rest/clients/${componentClientId}/accounts/${componentAccountId}/urlfilterconfig' WHERE (`id` = '60');
UPDATE `fetch_config_template` SET `params` = '{\"contexts\": [\"clientId\", \"entity\", \"accountId\",\"componentClientId\",\"componentAccountId\"], \"constants\": {}}', `relativeurl` = '/en/hierarchy/rest/clients/${componentClientId}/accounts/${componentAccountId}/validator/${entity}' WHERE (`id` = '59');
UPDATE `fetch_config_template` SET `params` = '{\"contexts\": [\"clientId\", \"accountId\",\"componentClientId\",\"componentAccountId\"], \"constants\": {}}', `relativeurl` = '/en/hierarchy/rest/clients/${componentClientId}/accounts/${componentAccountId}/validator' WHERE (`id` = '58');
UPDATE `fetch_config_template` SET `params` = '{\"contexts\": [\"clientId\", \"entity\", \"accountId\",\"componentClientId\",\"componentAccountId\"], \"constants\": {}}', `relativeurl` = '/en/hierarchy/rest/clients/${componentClientId}/accounts/${componentAccountId}/clientstartupconfig/${entity}' WHERE (`id` = '57');
UPDATE `fetch_config_template` SET `params` = '{\"contexts\": [\"clientId\", \"accountId\",\"componentClientId\",\"componentAccountId\"], \"constants\": {}}', `relativeurl` = '/en/hierarchy/rest/clients/${componentClientId}/accounts/${componentAccountId}/clientstartupconfig' WHERE (`id` = '56');
UPDATE `fetch_config_template` SET `params` = '{\"contexts\": [\"clientId\", \"accountId\",\"componentClientId\",\"componentAccountId\"], \"constants\": {}}', `relativeurl` = '/en/hierarchy/rest/clients/${componentClientId}/accounts/${componentAccountId}/agents' WHERE (`id` = '55');
UPDATE `fetch_config_template` SET `params` = '{\"contexts\": [\"clientId\", \"accountId\",\"componentClientId\",\"componentAccountId\"], \"constants\": {}}', `relativeurl` = '/en/hierarchy/rest/clients/${componentClientId}/accounts/${componentAccountId}/smartresponse' WHERE (`id` = '54');
UPDATE `fetch_config_template` SET `params` = '{\"contexts\": [\"clientId\", \"accountId\",\"componentClientId\",\"componentAccountId\"], \"constants\": {}}', `relativeurl` = '/en/hierarchy/rest/clients/${componentClientId}/accounts/${componentAccountId}/smartresponse' WHERE (`id` = '53');
UPDATE `fetch_config_template` SET `params` = '{\"contexts\": [\"clientId\", \"accountId\", \"entity\",\"componentClientId\",\"componentAccountId\"], \"constants\": {}}', `relativeurl` = '/en/hierarchy/rest/clients/${componentClientId}/accounts/${componentAccountId}/agents/${entity}' WHERE (`id` = '51');

UPDATE `action` SET `definition` = '{ \"type\": \"REST\", \"method\": \"POST\", \"headers\": { \"Content-Type\": \"application/x-www-form-urlencoded\", \"GenerateAuthToken\": \"Bearer \" }, \"serviceId\": \"assist\", \"uploadFile\": false, \"idLookupKeys\": null, \"relativePath\": \"/en/hierarchy/rest/clients/${componentClientId}/accounts/${componentAccountId}/invitemanagement/update?entityObj=${body}\", \"bodyDefinition\": {}, \"requestBodyKey\": null, \"restClientType\": null, \"idLookupRequired\": false, \"objectTranslator\": \"function translate(pageData, entityId, clientId, accountId, env) { var uiData = JSON.parse(pageData).createQueues_p0.tabsField; var uiDataB = uiData[0]; var uiDataA = uiData[1].assistConfig; var apiData = [{ queueName : uiDataB.queueName, queueDescription : uiDataB.queueDesc, acceptanceRate : uiDataA.inviteMgmt.invites.toString(), safetyfactor : uiDataA.inviteMgmt.safetyfactor, expiryInterval : uiDataA.inviteMgmt.expiryInterval, caModelType : uiDataA.inviteMgmt.caModelType, key : uiDataA.inviteMgmt.key }]; return JSON.stringify(apiData); }\", \"preFetchDefinition\": null }'
WHERE (`id` = '50');
UPDATE `action` SET `definition` = '{ \"type\": \"REST\", \"method\": \"POST\", \"headers\": { \"Referer\": \"https://test-default.portal.assist.staging.247-inc.net/en/console\", \"Content-Type\": \"application/x-www-form-urlencoded\", \"GenerateAuthToken\": \"Bearer \" }, \"serviceId\": \"assist\", \"uploadFile\": false, \"idLookupKeys\": null, \"relativePath\": \"/en/hierarchy/rest/clients/${componentClientId}/accounts/${componentAccountId}/users/${entity}/password/modify?entityObj=${body}\", \"bodyDefinition\": {}, \"requestBodyKey\": null, \"restClientType\": null, \"idLookupRequired\": false, \"objectTranslator\": \"function translate(pageData, entityId, clientId, accountId, env, prefetch) { var uiData = JSON.parse(pageData).tabsField[0]; var apiData = { \\\"clientId\\\": \\\"nemo-client\\\" + clientId, \\\"key\\\": uiData.key, \\\"firstName\\\": uiData.firstName, \\\"userName\\\": uiData.userName, \\\"lastName\\\": uiData.lastName, \\\"displayName\\\": uiData.displayName, \\\"screenName\\\":uiData.displayName, \\\"email\\\": uiData.email, \\\"activeChatLimits\\\": uiData.activeChatLimits, \\\"autoAcceptChats\\\":uiData.autoAcceptChats, \\\"status\\\": uiData.status, \\\"teamId\\\": uiData.teamId, \\\"newPassword\\\": uiData.newPassword, \\\"confirmPassword\\\": uiData.confirmPassword, \\\"roleIds\\\": [ uiData.roleId ], \\\"skillLevels\\\": [], \\\"monitoringTeamIds\\\": [], \\\"authenticationType\\\": uiData.authenticationType, \\\"corruptUserMessage\\\": \\\"\\\", \\\"samlUserName\\\": \\\"\\\", \\\"metadataMap\\\": { \\\"employeeId\\\": uiData.employeeId } }; return JSON.stringify(apiData); }\", \"preFetchDefinition\": null }'
WHERE (`id` = '49');
UPDATE `action` SET `definition` = '{ \"type\": \"REST\", \"method\": \"POST\", \"headers\": { \"Referer\": \"https://test-default.portal.assist.staging.247-inc.net/en/console\", \"Content-Type\": \"application/x-www-form-urlencoded\", \"GenerateAuthToken\": \"Bearer \" }, \"serviceId\": \"assist\", \"uploadFile\": false, \"idLookupKeys\": null, \"relativePath\": \"/en/hierarchy/rest/clients/${componentClientId}/accounts/${componentAccountId}/users/${entity}/password/reset\", \"bodyDefinition\": {}, \"requestBodyKey\": null, \"restClientType\": null, \"idLookupRequired\": false, \"objectTranslator\": \"function translate(pageData, entityId, clientId, accountId, env, prefetch) { var data = JSON.parse(pageData); return JSON.stringify(data.tabsField[0]); }\", \"preFetchDefinition\": null }'
WHERE (`id` = '48');
UPDATE `action` SET `definition` = '{ \"type\": \"REST\", \"method\": \"POST\", \"headers\": { \"uploadFile\": \"true\", \"Content-Type\": \"multipart/form-data\", \"GenerateAuthToken\": \"Bearer \" }, \"serviceId\": \"assist\", \"uploadFile\": true, \"idLookupKeys\": null, \"relativePath\": \"/en/hierarchy/rest/clients/${componentClientId}/accounts/${componentAccountId}/smartresponse/uploadfile\", \"bodyDefinition\": {}, \"requestBodyKey\": \"file\", \"restClientType\": \"MULTIPART_FILE\", \"idLookupRequired\": false, \"objectTranslator\": \"\", \"preFetchDefinition\": null, \"prefetchRequiredForLiveOnly\": false }'
WHERE (`id` = '47');
UPDATE `action` SET `definition` = '{ \"type\": \"REST\", \"method\": \"POST\", \"headers\": { \"Content-Type\": \"application/x-www-form-urlencoded\", \"GenerateAuthToken\": \"Bearer\" }, \"serviceId\": \"assist\", \"uploadFile\": false, \"idLookupKeys\": \"updateSessionTimeout_p0.key\", \"relativePath\": \"/en/hierarchy/rest/clients/${componentClientId}/accounts/${componentAccountId}/timeoutconfig/update\", \"bodyDefinition\": {}, \"requestBodyKey\": \"entityObj\", \"restClientType\": \"REST_TEMPLATE\", \"idLookupRequired\": true, \"objectTranslator\": \"function translate(pageData, entityId, clientId, accountId, env, prefetch, liveEntityIdMap) { pageData = JSON.parse(pageData).updateSessionTimeout_p0; var profileId = \\\"timeout_\\\"; var apiData = {}; apiData.expression = pageData.expression; apiData.profileId = profileId.concat(pageData.timeout); if (env === \\\"LIVE\\\") { var key = getLiveKey(prefetch, liveEntityIdMap, {label:pageData.expression,secondaryLabel: pageData.timeout}, \\\"updateSessionTimeout_p0.key\\\"); if (key !== \\\"\\\") { apiData.key = key; } else { apiData.key = pageData.key; } } else { apiData.key = pageData.key; } return JSON.stringify(apiData); } function getLiveKey(prefetch, liveEntityIdMap, testEntity, liveEntityIdKey) { if (liveEntityIdMap !== null && liveEntityIdMap !== undefined) { var liveEntityId = JSON.parse(liveEntityIdMap); if (Object.keys(liveEntityId).length !== 0) { return liveEntityId[liveEntityIdKey]; } else { return getLiveKeyFromPrefetch(prefetch, testEntity); } }else{ return getLiveKeyFromPrefetch(prefetch, testEntity); } } function getLiveKeyFromPrefetch(prefetch , testEntity){ var listLiveData = JSON.parse(prefetch).listLiveData; var key = \\\"\\\"; for (var i = 0; i < listLiveData.length; i++) { if(testEntity.secondaryLabel !== undefined){ if (listLiveData[i].label === testEntity.label && listLiveData[i].secondaryLabel === testEntity.secondaryLabel ) { key = listLiveData[i].name; break; } }else{ if (listLiveData[i].label === testEntity.label) { key = listLiveData[i].name; break; } }} return key; }\", \"preFetchDefinition\": { \"listLiveData\": { \"env\": \"LIVE\", \"fetchFor\": \"listsessiontimeout\", \"fetchType\": \"ENTITY_LISTING\" } }, \"prefetchRequiredForLiveOnly\": true }'
WHERE (`id` = '46');
UPDATE `action` SET `definition` = '{ \"type\": \"REST\", \"method\": \"POST\", \"headers\": { \"Content-Type\": \"application/x-www-form-urlencoded\", \"GenerateAuthToken\": \"Bearer \" }, \"serviceId\": \"assist\", \"uploadFile\": false, \"idLookupKeys\": null, \"relativePath\": \"/en/hierarchy/rest/clients/${componentClientId}/accounts/${componentAccountId}/timeoutconfig\", \"bodyDefinition\": {}, \"requestBodyKey\": \"entityObj\", \"restClientType\": \"REST_TEMPLATE\", \"idLookupRequired\": false, \"objectTranslator\": \"function translate(pageData, entityId, clientId, accountId, env) { pageData = JSON.parse(pageData).createSessionTimeout_p0; var profileId = \\\"timeout_\\\"; var apiData = {}; apiData.key = pageData.key; apiData.expression = pageData.expression; apiData.profileId = profileId.concat(pageData.timeout); return JSON.stringify(apiData); }\", \"preFetchDefinition\": null }' WHERE (`id` = '45');
UPDATE `action` SET `definition` = '{ \"type\": \"REST\", \"method\": \"POST\", \"headers\": { \"Content-Type\": \"application/x-www-form-urlencoded\", \"GenerateAuthToken\": \"Bearer \" }, \"serviceId\": \"assist\", \"uploadFile\": false, \"idLookupKeys\": null, \"relativePath\": \"/en/hierarchy/rest/clients/${componentClientId}/accounts/${componentAccountId}/urlfilterconfig/update?entityObj=${body}\", \"bodyDefinition\": {}, \"requestBodyKey\": null, \"restClientType\": null, \"idLookupRequired\": false, \"objectTranslator\": \"function translate(pageData, entityId, clientId, accountId, env, prefetch) { pageData = JSON.parse(pageData).authorisedUrls_p0; prefetch = JSON.parse(prefetch); var apiData = {}; apiData.accountId = pageData.accountId; apiData.scopeType = pageData.scopeType; apiData.scopeValue = pageData.scopeValue; apiData.urlFilterListingType = pageData.filterType; apiData.enabled = pageData.enabled == \\\"true\\\"; if (env === \\\"TEST\\\") { apiData.filterConfig = prefetch.enabledUrlsTest.filterConfig; apiData.key = prefetch.enabledUrlsTest.key; } else if (env === \\\"LIVE\\\") { apiData.filterConfig = prefetch.enabledUrlsLive.filterConfig; apiData.key = prefetch.enabledUrlsLive.key; } pageData.filterConfig.forEach(function(pageDataFilter) { urlId = pageDataFilter.urlFilterConfigId; if (urlId != undefined && urlId != \\\"\\\") { apiData.filterConfig.forEach(function(apiFilter) { if (urlId === apiFilter.urlFilterConfigId) { apiFilter.filterText = pageDataFilter.filterText; apiFilter.filterOptions = pageDataFilter.filterOptions; apiFilter.urlConfigDeleted = true; } }); } else { apiData.filterConfig.push({ urlFilterConfigId: pageData.key, filterText: pageDataFilter.filterText, filterOptions: pageDataFilter.filterOptions, urlConfigDeleted: true }); } }); return JSON.stringify(apiData) }\", \"preFetchDefinition\": { \"enabledUrlsLive\": { \"env\": \"LIVE\", \"fetchFor\": \"authorisedUrls_p0\", \"fetchType\": \"PAGE_DATA_VALUE\" }, \"enabledUrlsTest\": { \"env\": \"TEST\", \"fetchFor\": \"authorisedUrls_p0\", \"fetchType\": \"PAGE_DATA_VALUE\" } }, \"prefetchRequiredForLiveOnly\": false }' WHERE (`id` = '44');
UPDATE `action` SET `definition` = '{ \"type\": \"REST\", \"method\": \"POST\", \"headers\": { \"Content-Type\": \"application/x-www-form-urlencoded\", \"GenerateAuthToken\": \"Bearer \" }, \"serviceId\": \"assist\", \"uploadFile\": false, \"idLookupKeys\": null, \"relativePath\": \"/en/hierarchy/rest/clients/${componentClientId}/accounts/${componentAccountId}/propertyconfiguration/update?entityObj=${body}\", \"bodyDefinition\": {}, \"requestBodyKey\": null, \"restClientType\": null, \"idLookupRequired\": true, \"objectTranslator\": \"function translate(pageData, entityId, clientId, accountId, env) { pageData = JSON.parse(pageData).updatePropertyConfig_p0; var apiData = {}; if(pageData.scope.scopeType === \'account\'){apiData.scopeId =pageData.scope.accountId;}else{apiData.scopeId = pageData.scope.queueScope;} apiData.scopeType = pageData.scope.scopeType; apiData.contextVariableBaseId = \\\"\\\"; apiData.varTypeLabel=\\\"\\\"; apiData.varName = pageData.varName; apiData.key=pageData.key; apiData.order = pageData.order;apiData.varType =pageData.varType;apiData.displayName = pageData.displayName;apiData.validatorId = pageData.validatorId; apiData.editableFlag = pageData.editableFlag; apiData.maskableFlag = pageData.maskableFlag; apiData.mandatoryFlag= pageData.mandatoryFlag; apiData.varDescription=pageData.varDescription;return JSON.stringify(apiData)}\", \"preFetchDefinition\": { \"livePropertyConfigurations\": { \"env\": \"LIVE\", \"fetchFor\": \"listProperty\", \"fetchType\": \"ENTITY_LISTING\" } }, \"prefetchRequiredForLiveOnly\": true }' WHERE (`id` = '43');
UPDATE `action` SET `definition` = '{ \"type\": \"REST\", \"method\": \"POST\", \"headers\": { \"Content-Type\": \"application/x-www-form-urlencoded\", \"GenerateAuthToken\": \"Bearer \" }, \"serviceId\": \"assist\", \"uploadFile\": false, \"idLookupKeys\": \"updatePropertyValidation_p0.key\", \"relativePath\": \"/en/hierarchy/rest/clients/${componentClientId}/accounts/${componentAccountId}/validator/update?entityObj=${body}\", \"bodyDefinition\": {}, \"requestBodyKey\": null, \"restClientType\": null, \"idLookupRequired\": true, \"objectTranslator\": \"function translate(pageData, entityId, clientId, accountId, env, prefetch, liveEntityIdMap) { var apiData = JSON.parse(pageData).updatePropertyValidation_p0; if (!apiData.validatorRule) { apiData.validatorRule = \\\"\\\"; } if (!apiData.enumValues || apiData.enumValues.length == 0) { apiData.enumValues = [\\\"\\\"]; } if (env === \\\"LIVE\\\") { var key = getLiveKey(prefetch, liveEntityIdMap, {label:pageData.validatorName}, \\\"updatePropertyValidation_p0.key\\\"); if (key !== \\\"\\\"){ apiData.key = key; } } return JSON.stringify(apiData); } function getLiveKey(prefetch, liveEntityIdMap, testEntity, liveEntityIdKey) { if (liveEntityIdMap !== null && liveEntityIdMap !== undefined) { var liveEntityId = JSON.parse(liveEntityIdMap); if (Object.keys(liveEntityId).length !== 0) { return liveEntityId[liveEntityIdKey]; } else { return getLiveKeyFromPrefetch(prefetch, testEntity); } }else{ return getLiveKeyFromPrefetch(prefetch, testEntity); } } function getLiveKeyFromPrefetch(prefetch , testEntity){ var listLiveData = JSON.parse(prefetch).listLiveData; var key = \\\"\\\"; for (var i = 0; i < listLiveData.length; i++) { if(testEntity.secondaryLabel !== undefined){ if (listLiveData[i].label === testEntity.label && listLiveData[i].secondaryLabel === testEntity.secondaryLabel ) { key = listLiveData[i].name; break; }} }else{ if (listLiveData[i].label === testEntity.label) { key = listLiveData[i].name; break; } } return key; }\", \"preFetchDefinition\": { \"listLiveData\": { \"env\": \"LIVE\", \"fetchFor\": \"listPropertyValidations\", \"fetchType\": \"ENTITY_LISTING\" } }, \"prefetchRequiredForLiveOnly\": true }' WHERE (`id` = '42');
UPDATE `action` SET `definition` = '{ \"type\": \"REST\", \"method\": \"POST\", \"headers\": { \"Content-Type\": \"application/x-www-form-urlencoded\", \"GenerateAuthToken\": \"Bearer \" }, \"serviceId\": \"assist\", \"uploadFile\": false, \"idLookupKeys\": null, \"relativePath\": \"/en/hierarchy/rest/clients/${componentClientId}/accounts/${componentAccountId}/clientstartupconfig/update?entityObj=${body}\", \"bodyDefinition\": {}, \"requestBodyKey\": null, \"restClientType\": null, \"idLookupRequired\": false, \"objectTranslator\": \"function translate(pageData, entityId, clientId, accountId, env, prefetch) { var apiData = JSON.parse(pageData).updateAccountConfig_p0; return JSON.stringify(apiData); }\", \"preFetchDefinition\": {}, \"prefetchRequiredForLiveOnly\": false }' WHERE (`id` = '40');
UPDATE `action` SET `definition` = '{ \"type\": \"REST\", \"method\": \"POST\", \"headers\": { \"Content-Type\": \"application/x-www-form-urlencoded\", \"GenerateAuthToken\": \"Bearer \" }, \"serviceId\": \"assist\", \"uploadFile\": false, \"idLookupKeys\": null, \"relativePath\": \"/en/hierarchy/rest/clients/${componentClientId}/accounts/${componentAccountId}/agents/update?entityObj=${body}\", \"bodyDefinition\": {}, \"requestBodyKey\": null, \"restClientType\": null, \"idLookupRequired\": false, \"objectTranslator\": \"function translate(pageData, entityId, clientId, accountId, env, prefetch) { var uiData = JSON.parse(pageData).updateUserLive_p0; var t0 = uiData.tabsField[0]; var t1 = uiData.tabsField[1]; var t2 = uiData.tabsField[2]; var roles = []; if(t0.roleId == \\\"superlead_role_id\\\") { roles.push(\\\"lead_role_id\\\", \\\"agent_role_id\\\"); }else { roles.push(t0.roleId); } var apiData = {\\\"clientId\\\": \\\"nemo-client-\\\"+clientId,\\\"userName\\\": t0.userName,\\\"firstName\\\":t0.firstName,\\\"lastName\\\":t0.lastName,\\\"displayName\\\":t0.displayName,\\\"email\\\":t0.email,\\\"activeChatLimits\\\":t0.activeChatLimits,\\\"autoAcceptChats\\\":t0.autoAcceptChats,\\\"teamId\\\":t0.teamId,\\\"timezone\\\":\\\"GMT0\\\",\\\"roleIds\\\":roles,\\\"authenticationType\\\":t0.authenticationType||\\\"LOCAL_AUTH\\\",\\\"status\\\":t0.status,\\\"samlUserName\\\":\\\"\\\",\\\"key\\\":t0.key,\\\"skillLevels\\\": t1.ConfigMapper&&t1.ConfigMapper.map(function (skill) { var skLvl = skill ? { skillId: skill.id, skillLevelId:skill.id + \\\"-\\\" + (skill.key ? skill.key.toUpperCase() : \\\"HIGH\\\") } : []; return skLvl; })||[],\\\"monitoringTeamIds\\\":t2.ConfigMapper&&t2.ConfigMapper.map(function(team){return ({teamId: team.id})})||[],\\\"metadataMap\\\":{\\\"employeeId\\\":t0.employeeId}}; return JSON.stringify(apiData); }\", \"preFetchDefinition\": {} }' WHERE (`id` = '39');
UPDATE `action` SET `definition` = '{ \"type\": \"REST\", \"method\": \"POST\", \"headers\": { \"Referer\": \"https://test-default.portal.assist.staging.247-inc.net/en/console\", \"Content-Type\": \"application/x-www-form-urlencoded\", \"GenerateAuthToken\": \"Bearer \" }, \"serviceId\": \"assist\", \"uploadFile\": false, \"idLookupKeys\": null, \"relativePath\": \"/en/hierarchy/rest/clients/${componentClientId}/accounts/${componentAccountId}/agents?entityObj=${body}\", \"bodyDefinition\": {}, \"requestBodyKey\": null, \"restClientType\": null, \"idLookupRequired\": false, \"objectTranslator\": \"function translate(pageData, entityId, clientId, accountId, env, prefetch) { var uiData = JSON.parse(pageData).createUserLive_p0; var t0 = uiData.tabsField[ 0 ]; var t1 = uiData.tabsField[ 1 ]; var t2 = uiData.tabsField[ 2 ]; var roles = []; if (t0.roleId == \\\"superlead_role_id\\\") { roles.push(\\\"lead_role_id\\\", \\\"agent_role_id\\\"); } else { roles.push(t0.roleId); } var apiData = { \\\"key\\\": \\\"\\\", \\\"userName\\\": t0.userName, \\\"firstName\\\": t0.firstName, \\\"lastName\\\": t0.lastName, \\\"displayName\\\": t0.displayName, \\\"email\\\": t0.email, \\\"activeChatLimits\\\": t0.activeChatLimits, \\\"autoAcceptChats\\\": t0.autoAcceptChats, \\\"teamId\\\": t0.teamId, \\\"timezone\\\": \\\"GMT0\\\", \\\"roleIds\\\": roles, \\\"authenticationType\\\": t0.authenticationType || \\\"LOCAL_AUTH\\\", \\\"status\\\": t0.status, \\\"samlUserName\\\": \\\"\\\", \\\"skillLevels\\\": t1.ConfigMapper && t1.ConfigMapper.map(function (skill) { var skLvl = skill ? { skillId: skill.id, skillLevelId: skill.id + \\\"-\\\" + (skill.key ? skill.key.toUpperCase() : \\\"HIGH\\\") } : []; return skLvl; }) || [], \\\"monitoringTeamIds\\\": t2.ConfigMapper && t2.ConfigMapper.map(function (team) { return ({ teamId: team.id }) }) || [], \\\"metadataMap\\\": { \\\"employeeId\\\": t0.employeeId } }; if (t0.newPassword !== \\\"\\\") { apiData.newPassword = t0.newPassword; apiData.confirmPassword = t0.confirmPassword; } return JSON.stringify(apiData); }\", \"preFetchDefinition\": {} }' WHERE (`id` = '38');
UPDATE `action` SET `definition` = '{ \"type\": \"REST\", \"method\": \"POST\", \"headers\": { \"Content-Type\": \"application/x-www-form-urlencoded\", \"GenerateAuthToken\": \"Bearer \" }, \"serviceId\": \"assist\", \"uploadFile\": false, \"idLookupKeys\": null, \"relativePath\": \"/en/hierarchy/rest/clients/${componentClientId}/accounts/${componentAccountId}/agents/update?entityObj=${body}\", \"bodyDefinition\": {}, \"requestBodyKey\": null, \"restClientType\": null, \"idLookupRequired\": false, \"objectTranslator\": \"function translate(pageData, entityId, clientId, accountId, env, prefetch) { var uiData = JSON.parse(pageData).updateUserTest_p0; var t0 = uiData.tabsField[0]; var t1 = uiData.tabsField[1]; var t2 = uiData.tabsField[2]; var roles = []; if(t0.roleId == \\\"superlead_role_id\\\") { roles.push(\\\"lead_role_id\\\", \\\"agent_role_id\\\"); }else { roles.push(t0.roleId); } var apiData = {\\\"clientId\\\": \\\"nemo-client-\\\"+clientId,\\\"userName\\\": t0.userName,\\\"firstName\\\":t0.firstName,\\\"lastName\\\":t0.lastName,\\\"displayName\\\":t0.displayName,\\\"email\\\":t0.email,\\\"activeChatLimits\\\":t0.activeChatLimits,\\\"autoAcceptChats\\\":t0.autoAcceptChats,\\\"teamId\\\":t0.teamId,\\\"timezone\\\":\\\"GMT0\\\",\\\"roleIds\\\":roles,\\\"authenticationType\\\":t0.authenticationType||\\\"LOCAL_AUTH\\\",\\\"status\\\":t0.status,\\\"samlUserName\\\":\\\"\\\",\\\"key\\\":t0.key,\\\"skillLevels\\\": t1.ConfigMapper&&t1.ConfigMapper.map(function (skill) { var skLvl = skill ? { skillId: skill.id, skillLevelId:skill.id + \\\"-\\\" + (skill.key ? skill.key.toUpperCase() : \\\"HIGH\\\") } : []; return skLvl; })||[],\\\"monitoringTeamIds\\\":t2.ConfigMapper&&t2.ConfigMapper.map(function(team){return ({teamId: team.id})})||[],\\\"metadataMap\\\":{\\\"employeeId\\\":t0.employeeId}}; return JSON.stringify(apiData); }\", \"preFetchDefinition\": {} }' WHERE (`id` = '37');
UPDATE `action` SET `definition` = '{ \"type\": \"REST\", \"method\": \"POST\", \"headers\": { \"Referer\": \"https://test-default.portal.assist.staging.247-inc.net/en/console\", \"Content-Type\": \"application/x-www-form-urlencoded\", \"GenerateAuthToken\": \"Bearer \" }, \"serviceId\": \"assist\", \"uploadFile\": false, \"idLookupKeys\": null, \"relativePath\": \"/en/hierarchy/rest/clients/${componentClientId}/accounts/${componentAccountId}/agents?entityObj=${body}\", \"bodyDefinition\": {}, \"requestBodyKey\": null, \"restClientType\": null, \"idLookupRequired\": false, \"objectTranslator\": \"function translate(pageData, entityId, clientId, accountId, env, prefetch) { var uiData = JSON.parse(pageData).createUserTest_p0; var t0 = uiData.tabsField[ 0 ]; var t1 = uiData.tabsField[ 1 ]; var t2 = uiData.tabsField[ 2 ]; var roles = []; if (t0.roleId == \\\"superlead_role_id\\\") { roles.push(\\\"lead_role_id\\\", \\\"agent_role_id\\\"); } else { roles.push(t0.roleId); } var apiData = { \\\"key\\\": \\\"\\\", \\\"userName\\\": t0.userName, \\\"firstName\\\": t0.firstName, \\\"lastName\\\": t0.lastName, \\\"displayName\\\": t0.displayName, \\\"email\\\": t0.email, \\\"activeChatLimits\\\": t0.activeChatLimits, \\\"autoAcceptChats\\\": t0.autoAcceptChats, \\\"teamId\\\": t0.teamId, \\\"timezone\\\": \\\"GMT0\\\", \\\"roleIds\\\": roles, \\\"authenticationType\\\": t0.authenticationType || \\\"LOCAL_AUTH\\\", \\\"status\\\": t0.status, \\\"samlUserName\\\": \\\"\\\", \\\"skillLevels\\\": t1.ConfigMapper && t1.ConfigMapper.map(function (skill) { var skLvl = skill ? { skillId: skill.id, skillLevelId: skill.id + \\\"-\\\" + (skill.key ? skill.key.toUpperCase() : \\\"HIGH\\\") } : []; return skLvl; }) || [], \\\"monitoringTeamIds\\\": t2.ConfigMapper && t2.ConfigMapper.map(function (team) { return ({ teamId: team.id }) }) || [], \\\"metadataMap\\\": { \\\"employeeId\\\": t0.employeeId } }; if (t0.newPassword !== \\\"\\\") { apiData.newPassword = t0.newPassword; apiData.confirmPassword = t0.confirmPassword; } return JSON.stringify(apiData); }\", \"preFetchDefinition\": {} }' WHERE (`id` = '36');
UPDATE `action` SET `definition` = '{ \"type\": \"REST\", \"method\": \"POST\", \"headers\": { \"Content-Type\": \"application/x-www-form-urlencoded\", \"GenerateAuthToken\": \"Bearer \" }, \"serviceId\": \"assist\", \"uploadFile\": false, \"idLookupKeys\": null, \"relativePath\": \"/en/hierarchy/rest/clients/${componentClientId}/accounts/${componentAccountId}/notificationconfig/update?notificationConfigObj=${body}\", \"bodyDefinition\": {}, \"requestBodyKey\": null, \"restClientType\": null, \"idLookupRequired\": false, \"objectTranslator\": \"function translate(pageData, entityId, clientId, accountId, env, prefetch, liveEntityId) { pageData = JSON.parse(pageData).updateMsgFilter_p0; if (env === \\\"LIVE\\\") { pageData.key = getLiveKey(prefetch, liveEntityIdMap, {label:pageData.notificationType}, liveEntityIdKey); } return JSON.stringify(pageData) } function getLiveKey(prefetch, liveEntityIdMap, testEntity, liveEntityIdKey) { if (liveEntityIdMap !== null && liveEntityIdMap !== undefined) { var liveEntityId = JSON.parse(liveEntityIdMap); if (Object.keys(liveEntityId).length !== 0) { return liveEntityId[liveEntityIdKey]; } else { return getLiveKeyFromPrefetch(prefetch, testEntity); } }else{ return getLiveKeyFromPrefetch(prefetch, testEntity); } } function getLiveKeyFromPrefetch(prefetch , testEntity){ var listLiveData = JSON.parse(prefetch).listLiveData; var key = \\\"\\\"; for (var i = 0; i < listLiveData.length; i++) { if(testEntity.secondaryLabel !== undefined){ if (listLiveData[i].label === testEntity.label && listLiveData[i].secondaryLabel === testEntity.secondaryLabel ) { key = listLiveData[i].name; break; } }else{ if (listLiveData[i].label === testEntity.label) { key = listLiveData[i].name; break; } }} return key; }\", \"preFetchDefinition\": { \"listLiveKeyWords\": { \"env\": \"LIVE\", \"fetchFor\": \"listKeywords\", \"fetchType\": \"ENTITY_LISTING\" } }, \"prefetchRequiredForLiveOnly\": true }' WHERE (`id` = '34');
UPDATE `action` SET `definition` = '{ \"type\": \"REST\", \"method\": \"POST\", \"headers\": { \"Content-Type\": \"application/x-www-form-urlencoded\", \"GenerateAuthToken\": \"Bearer \" }, \"serviceId\": \"assist\", \"uploadFile\": false, \"idLookupKeys\": \"updateMailer_p0.key\", \"relativePath\": \"/en/hierarchy/rest/clients/${componentClientId}/accounts/${componentAccountId}/mailerconfig/update\", \"bodyDefinition\": {}, \"requestBodyKey\": \"entityObj\", \"restClientType\": \"REST_TEMPLATE\", \"idLookupRequired\": true, \"objectTranslator\": \"function translate(pageData, entityId, clientId, accountId, env, prefetch, liveEntityIdMap) { pageData = JSON.parse(pageData).updateMailer_p0; var templateConfigObj = {}; var apiData = {}; for (var i = 0; i < pageData.tabsField[0].baseConfigurationAccordionTabs.length; i++) { for (var key in pageData.tabsField[0].baseConfigurationAccordionTabs[i]) { templateConfigObj[key] = pageData.tabsField[0].baseConfigurationAccordionTabs[i][key]; } } var templateConfig = {}; templateConfig.header = templateConfigObj.extendedSubject; templateConfig.LogoURL = templateConfigObj.companyLogo; templateConfig.greetingMessage = templateConfigObj.greetings; templateConfig.signOffMessage = templateConfigObj.signOffMsg; templateConfig.signatureMessage = templateConfigObj.signatureText; templateConfig.headerMessage = templateConfigObj.message; templateConfig.c2CMessage = templateConfigObj.clickToChatMsg; templateConfig.c2CButtonURL = templateConfigObj.buttonUrl; templateConfig.c2CButtonText = templateConfigObj.buttonLabel; templateConfig.logoThemeBtnCol = templateConfigObj.logoBackground; templateConfig.logoPosition = templateConfigObj.logoPosition; templateConfig.themeName = templateConfigObj.themeSelector.theme; templateConfig.themeBgCol = templateConfigObj.themeSelector.bgColor; templateConfig.themeLinkCol = templateConfigObj.themeSelector.linkColor; templateConfig.themeBtnCol = templateConfigObj.themeSelector.buttonColor; templateConfig.appendName = templateConfigObj.showCustomerName; templateConfig.appendClickToChat = templateConfigObj.showClick; templateConfig.appendSignOff = templateConfigObj.showSignOff; templateConfig.appendSignature = templateConfigObj.showSignature; templateConfig.contextDetailsText = \\\"null\\\"; var footer = templateConfigObj.footer; var labels = [\\\"One\\\", \\\"Two\\\", \\\"Three\\\", \\\"Four\\\", \\\"Five\\\"]; for (var i = 0; i < labels.length; i++) { var label = labels[i]; if (footer[i] !== undefined) { templateConfig[\\\"footer\\\" + label] = footer[i].showFooter; templateConfig[\\\"footerLink\\\" + label + \\\"Text\\\"] = footer[i].label; templateConfig[\\\"footerLink\\\" + label + \\\"URL\\\"] = footer[i].linkUrl; } else { templateConfig[\\\"footer\\\" + label] = false; templateConfig[\\\"footerLink\\\" + label + \\\"Text\\\"] = \\\"\\\"; templateConfig[\\\"footerLink\\\" + label + \\\"URL\\\"] = \\\"\\\"; } } templateConfig.footerMessage = templateConfigObj.footerMessage; templateConfig.appendAgentDetails = true; templateConfig.appendContextDetails = false; apiData.templateConfig = templateConfig; apiData.isSSL = pageData.mailConfigAccordionTabs[0].isSsl === \\\"true\\\"; apiData.bccId = pageData.mailConfigAccordionTabs[0].bccEmail; apiData.fromName = pageData.mailConfigAccordionTabs[0].fromName; apiData.smtpPort = pageData.mailConfigAccordionTabs[0].smtpPort; apiData.smtpHost = pageData.mailConfigAccordionTabs[0].smtpHost; apiData.configKey = pageData.mailConfigAccordionTabs[0].configKey; apiData.debugEnabled = pageData.mailConfigAccordionTabs[0].debugEnable === \\\"true\\\"; apiData.fromEmail = pageData.mailConfigAccordionTabs[0].fromEmailId; apiData.mailSubject = pageData.mailConfigAccordionTabs[0].mailSubject; apiData.fromPassword = pageData.mailConfigAccordionTabs[0].fromPassword; apiData.clientId = \\\"nemo-client-\\\" + clientId; apiData.accountId = accountId + \\\"-account-default\\\"; apiData.mailOpeningLines = \\\"\\\"; apiData.mailSalutation = \\\"\\\"; if (env === \\\"LIVE\\\") { var key = getLiveKey(prefetch, liveEntityIdMap, {label:apiData.configKey}, \\\"updateMailer_p0.key\\\"); if (key !== \\\"\\\") { apiData.key = key; } else { apiData.key = pageData.mailConfigAccordionTabs[0].key; } } else { apiData.key = pageData.mailConfigAccordionTabs[0].key; } return JSON.stringify(apiData); } function getLiveKey(prefetch, liveEntityIdMap, testEntity, liveEntityIdKey) { if (liveEntityIdMap !== null && liveEntityIdMap !== undefined) { var liveEntityId = JSON.parse(liveEntityIdMap); if (Object.keys(liveEntityId).length !== 0) { return liveEntityId[liveEntityIdKey]; } else { return getLiveKeyFromPrefetch(prefetch, testEntity); } }else{ return getLiveKeyFromPrefetch(prefetch, testEntity); } } function getLiveKeyFromPrefetch(prefetch , testEntity){ var listLiveData = JSON.parse(prefetch).listLiveData; var key = \\\"\\\"; for (var i = 0; i < listLiveData.length; i++) { if(testEntity.secondaryLabel !== undefined){ if (listLiveData[i].label === testEntity.label && listLiveData[i].secondaryLabel === testEntity.secondaryLabel ) { key = listLiveData[i].name; break; } }else{ if (listLiveData[i].label === testEntity.label) { key = listLiveData[i].name; break; } }} return key; }\", \"preFetchDefinition\": { \"listLiveData\": { \"env\": \"LIVE\", \"fetchFor\": \"listMailerConfig\", \"fetchType\": \"ENTITY_LISTING\" } }, \"prefetchRequiredForLiveOnly\": true }' WHERE (`id` = '33');
UPDATE `action` SET `definition` = '{ \"type\": \"REST\", \"method\": \"POST\", \"headers\": { \"Content-Type\": \"application/x-www-form-urlencoded\", \"GenerateAuthToken\": \"Bearer \" }, \"serviceId\": \"assist\", \"uploadFile\": false, \"idLookupKeys\": null, \"relativePath\": \"/en/hierarchy/rest/clients/${componentClientId}/accounts/${componentAccountId}/mailerconfig\", \"bodyDefinition\": {}, \"requestBodyKey\": \"entityObj\", \"restClientType\": \"REST_TEMPLATE\", \"idLookupRequired\": false, \"objectTranslator\": \"function translate(pageData, entityId, clientId, accountId, env) { pageData = JSON.parse(pageData).createMailer_p0; var templateConfigObj = {}; var apiData = {}; for (var i = 0; i < pageData.tabsField[0].baseConfigurationAccordionTabs.length; i++) { for (var key in pageData.tabsField[0].baseConfigurationAccordionTabs[i]) { templateConfigObj[key] = pageData.tabsField[0].baseConfigurationAccordionTabs[i][key]; } } var templateConfig = {}; templateConfig.header = templateConfigObj.extendedSubject; templateConfig.LogoURL = templateConfigObj.companyLogo; templateConfig.greetingMessage = templateConfigObj.greetings; templateConfig.signOffMessage = templateConfigObj.signOffMsg; templateConfig.signatureMessage = templateConfigObj.signatureText; templateConfig.headerMessage = templateConfigObj.message; templateConfig.c2CMessage = templateConfigObj.clickToChatMsg; templateConfig.c2CButtonURL = templateConfigObj.buttonUrl; templateConfig.c2CButtonText = templateConfigObj.buttonLabel; templateConfig.footerMessage = templateConfigObj.footer; templateConfig.logoThemeBtnCol = templateConfigObj.logoBackground; templateConfig.footerLinkOne = templateConfigObj.showFooter; templateConfig.footerLinkOneText = templateConfigObj.label; templateConfig.footerLinkOneURL = templateConfigObj.linlUrl; templateConfig.logoPosition = templateConfigObj.logoPosition; templateConfig.themeName = templateConfigObj.theme; templateConfig.themeBgCol = templateConfigObj.themeSelector.bgColor; templateConfig.themeLinkCol = templateConfigObj.themeSelector.linkColor; templateConfig.themeBtnCol = templateConfigObj.themeSelector.buttonColor; templateConfig.appendName = templateConfigObj.showCustomerName; templateConfig.appendClickToChat = templateConfigObj.showClick; templateConfig.appendSignOff = templateConfigObj.showSignOff; templateConfig.appendSignature = templateConfigObj.showSignature; templateConfig.contextDetailsText = \\\"null\\\"; var footer = templateConfigObj.footer; var labels = [\\\"One\\\", \\\"Two\\\", \\\"Three\\\", \\\"Four\\\", \\\"Five\\\"]; for (var i = 0; i < labels.length; i++) { var label = labels[i]; if (footer[i] !== undefined) { templateConfig[\\\"footer\\\" + label] = footer[i].showFooter; templateConfig[\\\"footerLink\\\" + label + \\\"Text\\\"] = footer[i].label; templateConfig[\\\"footerLink\\\" + label + \\\"URL\\\"] = footer[i].linkUrl; } else { templateConfig[\\\"footer\\\" + label] = false; templateConfig[\\\"footerLink\\\" + label + \\\"Text\\\"] = \\\"\\\"; templateConfig[\\\"footerLink\\\" + label + \\\"URL\\\"] = \\\"\\\"; } } templateConfig.footerMessage = templateConfigObj.footerMessage; templateConfig.appendAgentDetails = true; templateConfig.appendContextDetails = false; apiData.templateConfig = templateConfig; apiData.isSSL = pageData.mailConfigAccordionTabs[0].isSsl === \\\"true\\\"; apiData.bccId = pageData.mailConfigAccordionTabs[0].bccEmail; apiData.fromName = pageData.mailConfigAccordionTabs[0].fromName; apiData.smtpPort = pageData.mailConfigAccordionTabs[0].smtpPort; apiData.smtpHost = pageData.mailConfigAccordionTabs[0].smtpHost; apiData.key = pageData.mailConfigAccordionTabs[0].key; apiData.configKey = pageData.mailConfigAccordionTabs[0].configKey; apiData.debugEnabled = pageData.mailConfigAccordionTabs[0].debugEnable === \\\"true\\\"; apiData.fromEmail = pageData.mailConfigAccordionTabs[0].fromEmailId; apiData.mailSubject = pageData.mailConfigAccordionTabs[0].mailSubject; apiData.fromPassword = pageData.mailConfigAccordionTabs[0].fromPassword; apiData.clientId = \\\"nemo-client-\\\"+clientId; apiData.accountId = accountId + \\\"-account-default\\\"; apiData.mailOpeningLines = \\\"\\\"; apiData.mailSalutation=\\\"\\\"; return JSON.stringify(apiData); }\", \"preFetchDefinition\": null }' WHERE (`id` = '32');
UPDATE `action` SET `definition` = '{ \"type\": \"REST\", \"method\": \"POST\", \"headers\": { \"Content-Type\": \"application/x-www-form-urlencoded\", \"GenerateAuthToken\": \"Bearer \" }, \"serviceId\": \"assist\", \"uploadFile\": false, \"idLookupKeys\": \"updateLeadConsole_p0.key\", \"relativePath\": \"/en/hierarchy/rest/clients/${componentClientId}/accounts/${componentAccountId}/monitoringconfig/update?entityObj=${body}\", \"bodyDefinition\": {}, \"requestBodyKey\": null, \"restClientType\": null, \"idLookupRequired\": true, \"objectTranslator\": \"function translate(pageData, entityId, clientId, accountId, env, prefetch, liveEntityIdMap) { pageData = JSON.parse(pageData).updateLeadConsole_p0; var apiData = {}; if (pageData.propertyType === \\\"Reset Time\\\") { apiData.propertyType = \\\"RESET_TIME\\\"; } else { apiData.propertyType = pageData.propertyType; } if (env === \\\"LIVE\\\") { var key = getLiveKey(prefetch, liveEntityIdMap, {label:pageData.applicationValue}, \\\"updateLeadConsole_p0.key\\\"); if (key !== \\\"\\\") { apiData.key = key; } else { apiData.key = pageData.key; } } else { apiData.key = pageData.key; } apiData.hours = pageData.time.hours; apiData.minutes = pageData.time.minutes; apiData.meridiem = pageData.time.meridian; return JSON.stringify(apiData); } function getLiveKey(prefetch, liveEntityIdMap, testEntity, liveEntityIdKey) { if (liveEntityIdMap !== null && liveEntityIdMap !== undefined) { var liveEntityId = JSON.parse(liveEntityIdMap); if (Object.keys(liveEntityId).length !== 0) { return liveEntityId[liveEntityIdKey]; } else { return getLiveKeyFromPrefetch(prefetch, testEntity); } }else{ return getLiveKeyFromPrefetch(prefetch, testEntity); } } function getLiveKeyFromPrefetch(prefetch , testEntity){ var listLiveData = JSON.parse(prefetch).listLiveData; var key = \\\"\\\"; for (var i = 0; i < listLiveData.length; i++) { if(testEntity.secondaryLabel !== undefined){ if (listLiveData[i].label === testEntity.label && listLiveData[i].secondaryLabel === testEntity.secondaryLabel ) { key = listLiveData[i].name; break; } }else{ if (listLiveData[i].label === testEntity.label) { key = listLiveData[i].name; break; } }} return key; }\", \"preFetchDefinition\": { \"listLiveData\": { \"env\": \"LIVE\", \"fetchFor\": \"listLeadReset\", \"fetchType\": \"ENTITY_LISTING\" } }, \"prefetchRequiredForLiveOnly\": true }' WHERE (`id` = '31');
UPDATE `action` SET `definition` = '{ \"type\": \"REST\", \"method\": \"POST\", \"headers\": { \"Content-Type\": \"application/x-www-form-urlencoded\", \"GenerateAuthToken\": \"Bearer \" }, \"serviceId\": \"assist\", \"uploadFile\": false, \"idLookupKeys\": null, \"relativePath\": \"/en/hierarchy/rest/clients/${componentClientId}/accounts/${componentAccountId}/monitoringconfig?entityObj=${body}\", \"bodyDefinition\": {}, \"requestBodyKey\": null, \"restClientType\": null, \"idLookupRequired\": false, \"objectTranslator\": \"function translate(pageData, entityId, clientId, accountId, env) { pageData = JSON.parse(pageData).createLeadConsole_p0; var apiData = {}; if (pageData.propertyType = \\\"Reset Time\\\") { apiData.propertyType = \\\"RESET_TIME\\\"; } else {apiData.propertyType = pageData.propertyType; } apiData.key = pageData.key; apiData.hours = pageData.time.hours; apiData.minutes = pageData.time.minutes; apiData.meridiem = pageData.time.meridian; return JSON.stringify(apiData); }\", \"preFetchDefinition\": null, \"prefetchRequiredForLiveOnly\": false }' WHERE (`id` = '30');

UPDATE `action` SET `definition` = '{ \"type\": \"REST\", \"method\": \"POST\", \"headers\": { \"Content-Type\": \"application/x-www-form-urlencoded\", \"GenerateAuthToken\": \"Bearer \" }, \"serviceId\": \"assist\", \"uploadFile\": false, \"idLookupKeys\": null, \"relativePath\": \"/en/hierarchy/rest/clients/${componentClientId}/accounts/${componentAccountId}/messagepolicy?entityObj=${body}\", \"bodyDefinition\": {}, \"requestBodyKey\": null, \"restClientType\": null, \"idLookupRequired\": false, \"objectTranslator\": \"function translate(pageData, entityId, clientId, accountId, env) { pageData = JSON.parse(pageData).createMaskingPatterns_p0; if(pageData.scopeType === \'account\'){pageData.scopeId =pageData.accountScope;}else{pageData.scopeId = pageData.queueScope;} return JSON.stringify(pageData);}\", \"preFetchDefinition\": null, \"prefetchRequiredForLiveOnly\": false }' WHERE (`id` = '29');
UPDATE `action` SET `definition` = '{ \"type\": \"REST\", \"method\": \"POST\", \"headers\": { \"Content-Type\": \"application/x-www-form-urlencoded\", \"GenerateAuthToken\": \"Bearer \" }, \"serviceId\": \"assist\", \"uploadFile\": false, \"idLookupKeys\": \"updateMaskingPatterns_p0.key\", \"relativePath\": \"/en/hierarchy/rest/clients/${componentClientId}/accounts/${componentAccountId}/messagepolicy/update?entityObj=${body}\", \"bodyDefinition\": {}, \"requestBodyKey\": null, \"restClientType\": null, \"idLookupRequired\": true, \"objectTranslator\": \"function translate(pageData, entityId, clientId, accountId, env, prefetch, liveEntityIdMap) { pageData = JSON.parse(pageData).updateMaskingPatterns_p0; if (pageData.scopeType === \\\"account\\\") { pageData.scopeId = pageData.accountScope; } else { pageData.scopeId = pageData.queueScope; } if (env === \\\"LIVE\\\") { var key = getLiveKey(prefetch, liveEntityIdMap, {label:pageData.piiMaskName},\\\"updateMaskingPatterns_p0.key\\\" ); if (key !== \\\"\\\") { pageData.key = key; } } return JSON.stringify(pageData); } function getLiveKey(prefetch, liveEntityIdMap, testEntity, liveEntityIdKey) { if (liveEntityIdMap !== null || liveEntityIdMap !== undefined) { var liveEntityId = JSON.parse(liveEntityIdMap); if (Object.keys(liveEntityId).length !== 0) { return liveEntityId[liveEntityIdKey]; } else { return getLiveKeyFromPrefetch(prefetch, testEntity); } }else{ return getLiveKeyFromPrefetch(prefetch, testEntity); } } function getLiveKeyFromPrefetch(prefetch , testEntity){ var listLiveData = JSON.parse(prefetch).listLiveData; var key = \\\"\\\"; for (var i = 0; i < listLiveData.length; i++) { if(testEntity.secondaryLabel !== undefined){ if (listLiveData[i].label === testEntity.label && listLiveData[i].secondaryLabel === testEntity.secondaryLabel ) { key = listLiveData[i].name; break; } }else{ if (listLiveData[i].label === testEntity.label) { key = listLiveData[i].name; break; } }} return key; }\", \"preFetchDefinition\": { \"listLiveData\": { \"env\": \"LIVE\", \"fetchFor\": \"listDataMaskingPattern\", \"fetchType\": \"ENTITY_LISTING\" } }, \"prefetchRequiredForLiveOnly\": true }' WHERE (`id` = '28');
UPDATE `action` SET `definition` = '{ \"type\": \"REST\", \"method\": \"POST\", \"headers\": { \"Content-Type\": \"application/x-www-form-urlencoded\", \"GenerateAuthToken\": \"Bearer \" }, \"serviceId\": \"assist\", \"uploadFile\": false, \"idLookupKeys\": null, \"relativePath\": \"/en/hierarchy/rest/clients/${componentClientId}/accounts/${componentAccountId}/propertyconfiguration?entityObj=${body}\", \"bodyDefinition\": {}, \"requestBodyKey\": null, \"restClientType\": null, \"idLookupRequired\": false, \"objectTranslator\": \"function translate(pageData, entityId, clientId, accountId, env) { pageData = JSON.parse(pageData).createPropertyConfig_p0; var apiData = {};if(pageData.scope.scopeType === \'account\'){apiData.scopeId =pageData.accountId;}else{apiData.scopeId = pageData.scope.queueScope;} apiData.scopeType =pageData.scope.scopeType;apiData.contextVariableBaseId = \\\"\\\"; apiData.varTypeLabel=\\\"\\\"; apiData.varName = pageData.varName; apiData.key=pageData.key; apiData.order = pageData.order;apiData.varType =pageData.varType;apiData.displayName = pageData.displayName;apiData.validatorId = pageData.validatorId; apiData.editableFlag = pageData.editableFlag; apiData.maskableFlag = pageData.maskableFlag; apiData.mandatoryFlag= pageData.mandatoryFlag; apiData.varDescription=pageData.varDescription; return JSON.stringify(apiData)}\", \"preFetchDefinition\": null, \"prefetchRequiredForLiveOnly\": false }' WHERE (`id` = '27');
UPDATE `action` SET `definition` = '{ \"type\": \"REST\", \"method\": \"POST\", \"headers\": { \"Content-Type\": \"application/x-www-form-urlencoded\", \"GenerateAuthToken\": \"Bearer \" }, \"serviceId\": \"assist\", \"uploadFile\": false, \"idLookupKeys\": \"updatePropertyConfig_p0.key\", \"relativePath\": \"/en/hierarchy/rest/clients/${componentClientId}/accounts/${componentAccountId}/propertyconfiguration/update?entityObj=${body}\", \"bodyDefinition\": {}, \"requestBodyKey\": null, \"restClientType\": null, \"idLookupRequired\": true, \"objectTranslator\": \"function translate(pageData, entityId, clientId, accountId, env, prefetch, liveEntityIdMap) { pageData = JSON.parse(pageData).updatePropertyConfig_p0; var apiData = {}; if (pageData.scope.scopeType === \\\"account\\\") { apiData.scopeId = pageData.scope.accountId; } else { apiData.scopeId = pageData.scope.queueScope; } apiData.scopeType = pageData.scope.scopeType; apiData.contextVariableBaseId = \\\"\\\"; apiData.varTypeLabel = \\\"\\\"; apiData.varName = pageData.varName; apiData.order = pageData.order; apiData.varType = pageData.varType; apiData.displayName = pageData.displayName; apiData.validatorId = pageData.validatorId; apiData.editableFlag = pageData.editableFlag; apiData.maskableFlag = pageData.maskableFlag; apiData.mandatoryFlag = pageData.mandatoryFlag; apiData.varDescription = pageData.varDescription; if (env === \\\"LIVE\\\") { var key = getLiveKey(prefetch, liveEntityIdMap, {label:pageData.varName, secondaryLabel:pageData.varType}, \\\"updatePropertyConfig_p0.key\\\"); if(key !== \\\"\\\"){ apiData.key = key; }else{ apiData.key = pageData.key; } } else { apiData.key = pageData.key; } return JSON.stringify(apiData) } function getLiveKey(prefetch, liveEntityIdMap, testEntity, liveEntityIdKey) { if (liveEntityIdMap !== null && liveEntityIdMap !== undefined) { var liveEntityId = JSON.parse(liveEntityIdMap); if (Object.keys(liveEntityId).length !== 0) { return liveEntityId[liveEntityIdKey]; } else { return getLiveKeyFromPrefetch(prefetch, testEntity); } }else{ return getLiveKeyFromPrefetch(prefetch, testEntity); } } function getLiveKeyFromPrefetch(prefetch , testEntity){ var listLiveData = JSON.parse(prefetch).listLiveData; var key = \\\"\\\"; for (var i = 0; i < listLiveData.length; i++) { if(testEntity.secondaryLabel !== undefined){ if (listLiveData[i].label === testEntity.label && listLiveData[i].secondaryLabel === testEntity.secondaryLabel ) { key = listLiveData[i].name; break; } }else{ if (listLiveData[i].label === testEntity.label) { key = listLiveData[i].name; break; } }} return key; }\", \"preFetchDefinition\": { \"listLiveData\": { \"env\": \"LIVE\", \"fetchFor\": \"listProperty\", \"fetchType\": \"ENTITY_LISTING\" } }, \"prefetchRequiredForLiveOnly\": true }' WHERE (`id` = '26');
UPDATE `action` SET `definition` = '{ \"type\": \"REST\", \"method\": \"POST\", \"headers\": { \"Content-Type\": \"application/x-www-form-urlencoded\", \"GenerateAuthToken\": \"Bearer \" }, \"serviceId\": \"assist\", \"uploadFile\": false, \"idLookupKeys\": null, \"relativePath\": \"/en/hierarchy/rest/clients/${componentClientId}/accounts/${componentAccountId}/invitemanagement/update?entityObj=${body}\", \"bodyDefinition\": {}, \"requestBodyKey\": null, \"restClientType\": null, \"idLookupRequired\": false, \"objectTranslator\": \"function translate(pageData, entityId, clientId, accountId, env) { var uiData = JSON.parse(pageData).updateQueues_p0.tabsField; var uiDataB = uiData[0]; var uiDataA = uiData[1].assistConfig; var apiData = [{ queueName : uiDataB.queueName, queueDescription : uiDataB.queueDesc, acceptanceRate : uiDataA.inviteMgmt.invites.toString(), safetyfactor : uiDataA.inviteMgmt.safetyfactor, expiryInterval : uiDataA.inviteMgmt.expiryInterval, caModelType : uiDataA.inviteMgmt.caModelType, key : uiDataA.inviteMgmt.key }]; return JSON.stringify(apiData); }\", \"preFetchDefinition\": null }' WHERE (`id` = '25');
UPDATE `action` SET `definition` = '{ \"type\": \"REST\", \"method\": \"POST\", \"headers\": { \"Content-Type\": \"application/x-www-form-urlencoded\", \"GenerateAuthToken\": \"Bearer \" }, \"serviceId\": \"assist\", \"uploadFile\": false, \"idLookupKeys\": \"updateActiveCards_p0.key\", \"relativePath\": \"/en/hierarchy/rest/clients/${componentClientId}/accounts/${componentAccountId}/smartcommand/update?entityObj=${body}\", \"bodyDefinition\": {}, \"requestBodyKey\": null, \"restClientType\": null, \"idLookupRequired\": true, \"objectTranslator\": \"function translate(pageData, entityId, clientId, accountId, env, prefetch, liveEntityIdMap) { pageData = JSON.parse(pageData).updateActiveCards_p0; if (env === \\\"LIVE\\\") { var key = getLiveKey(prefetch, liveEntityIdMap, {label:pageData.commandName}, \\\"updateActiveCards_p0.key\\\"); if (key !== \\\"\\\") { pageData.key = key; } } return JSON.stringify(pageData) } function getLiveKey(prefetch, liveEntityIdMap, testEntity, liveEntityIdKey) { if (liveEntityIdMap !== null && liveEntityIdMap !== undefined) { var liveEntityId = JSON.parse(liveEntityIdMap); if (Object.keys(liveEntityId).length !== 0) { return liveEntityId[liveEntityIdKey]; } else { return getLiveKeyFromPrefetch(prefetch, testEntity); } }else{ return getLiveKeyFromPrefetch(prefetch, testEntity); } } function getLiveKeyFromPrefetch(prefetch , testEntity){ var listLiveData = JSON.parse(prefetch).listLiveData; var key = \\\"\\\"; for (var i = 0; i < listLiveData.length; i++) { if(testEntity.secondaryLabel !== undefined){ if (listLiveData[i].label === testEntity.label && listLiveData[i].secondaryLabel === testEntity.secondaryLabel ) { key = listLiveData[i].name; break; } }else{ if (listLiveData[i].label === testEntity.label) { key = listLiveData[i].name; break; } }} return key; }\", \"preFetchDefinition\": { \"listLiveData\": { \"env\": \"LIVE\", \"fetchFor\": \"listActiveCards\", \"fetchType\": \"ENTITY_LISTING\" } }, \"prefetchRequiredForLiveOnly\": true }' WHERE (`id` = '24');
UPDATE `action` SET `definition` = '{ \"type\": \"REST\", \"method\": \"POST\", \"headers\": { \"Content-Type\": \"application/x-www-form-urlencoded\", \"GenerateAuthToken\": \"Bearer \" }, \"serviceId\": \"assist\", \"uploadFile\": false, \"idLookupKeys\": null, \"relativePath\": \"/en/hierarchy/rest/clients/${componentClientId}/accounts/${componentAccountId}/smartcommand?entityObj=${body}\", \"bodyDefinition\": {}, \"requestBodyKey\": null, \"restClientType\": null, \"idLookupRequired\": false, \"objectTranslator\": \"function translate(pageData, entityId, clientId, accountId, env) { pageData = JSON.parse(pageData).createActiveCards_p0; var payload = {}; payload.commandName =\'/f \' + pageData.commandName; payload.commandDescription = pageData.commandDescription; payload.numberOfParamters =pageData.numberOfParamters; payload.enabled = pageData.enabled; payload.commandActionName = pageData.commandActionName; payload.key = pageData.key;return JSON.stringify(payload)}\", \"preFetchDefinition\": null }' WHERE (`id` = '23');
UPDATE `action` SET `definition` = '{ \"type\": \"REST\", \"method\": \"POST\", \"headers\": { \"Content-Type\": \"application/x-www-form-urlencoded\", \"GenerateAuthToken\": \"Bearer \" }, \"serviceId\": \"assist\", \"uploadFile\": false, \"idLookupKeys\": null, \"relativePath\": \"/en/hierarchy/rest/clients/${componentClientId}/accounts/${componentAccountId}/authpolicy/update?entityObj=${body}\", \"bodyDefinition\": {}, \"requestBodyKey\": null, \"restClientType\": null, \"idLookupRequired\": false, \"objectTranslator\": \"function translate(pageData, entityId, clientId, accountId, env, prefetch) { prefetch = JSON.parse(prefetch); var uiData = JSON.parse(pageData).passwordPolicy_p0.configs; var apiData = getConfig(prefetch.listPasswordPolicy, \\\"passwordLength\\\"); apiData.configValue = uiData.pwdLength; return JSON.stringify(apiData); } function getConfig(items, key) { var config = null; for(var i=0;i<items.length;i++){var item=items[i]; if(item.configKey==key){ config = item; }} return config;}\", \"preFetchDefinition\": { \"listPasswordPolicy\": { \"fetchFor\": \"listPasswordPolicy\", \"fetchType\": \"PAGE_DATA_VALUE\" } }, \"prefetchRequiredForLiveOnly\": false }' WHERE (`id` = '22');
UPDATE `action` SET `definition` = '{ \"type\": \"REST\", \"method\": \"POST\", \"headers\": { \"Content-Type\": \"application/x-www-form-urlencoded\", \"GenerateAuthToken\": \"Bearer \" }, \"serviceId\": \"assist\", \"uploadFile\": false, \"idLookupKeys\": null, \"relativePath\": \"/en/hierarchy/rest/clients/${componentClientId}/accounts/${componentAccountId}/authpolicy/update?entityObj=${body}\", \"bodyDefinition\": {}, \"requestBodyKey\": null, \"restClientType\": null, \"idLookupRequired\": false, \"objectTranslator\": \"function translate(pageData, entityId, clientId, accountId, env, prefetch) { prefetch = JSON.parse(prefetch); var uiData = JSON.parse(pageData).passwordPolicy_p0.configs; var apiData = getConfig(prefetch.listPasswordPolicy, \\\"expiryDays\\\"); apiData.configValue = uiData.pwdExpiry; return JSON.stringify(apiData); } function getConfig(items, key) { var config = null; for(var i=0;i<items.length;i++){var item=items[i]; if(item.configKey==key){ config = item; }} return config;}\", \"preFetchDefinition\": { \"listPasswordPolicy\": { \"fetchFor\": \"listPasswordPolicy\", \"fetchType\": \"PAGE_DATA_VALUE\" } }, \"prefetchRequiredForLiveOnly\": false }' WHERE (`id` = '21');
UPDATE `action` SET `definition` = '{ \"type\": \"REST\", \"method\": \"POST\", \"headers\": { \"Content-Type\": \"application/x-www-form-urlencoded\", \"GenerateAuthToken\": \"Bearer \" }, \"serviceId\": \"assist\", \"uploadFile\": false, \"idLookupKeys\": null, \"relativePath\": \"/en/hierarchy/rest/clients/${componentClientId}/accounts/${componentAccountId}/authpolicy/update?entityObj=${body}\", \"bodyDefinition\": {}, \"requestBodyKey\": null, \"restClientType\": null, \"idLookupRequired\": false, \"objectTranslator\": \"function translate(pageData, entityId, clientId, accountId, env, prefetch) { prefetch = JSON.parse(prefetch); var uiData = JSON.parse(pageData).passwordPolicy_p0.configs; var apiData = getConfig(prefetch.listPasswordPolicy, \\\"retryCount\\\"); apiData.configValue = uiData.pwdAttempts; return JSON.stringify(apiData); } function getConfig(items, key) { var config = null; for(var i=0;i<items.length;i++){var item=items[i]; if(item.configKey==key){ config = item; }} return config;}\", \"preFetchDefinition\": { \"listPasswordPolicy\": { \"fetchFor\": \"listPasswordPolicy\", \"fetchType\": \"PAGE_DATA_VALUE\" } }, \"prefetchRequiredForLiveOnly\": false }' WHERE (`id` = '20');
UPDATE `action` SET `definition` = '{ \"type\": \"REST\", \"method\": \"POST\", \"headers\": { \"Content-Type\": \"application/x-www-form-urlencoded\", \"GenerateAuthToken\": \"Bearer \" }, \"serviceId\": \"assist\", \"uploadFile\": false, \"idLookupKeys\": null, \"relativePath\": \"/en/hierarchy/rest/clients/${componentClientId}/accounts/${componentAccountId}/authpolicy/update?entityObj=${body}\", \"bodyDefinition\": {}, \"requestBodyKey\": null, \"restClientType\": null, \"idLookupRequired\": false, \"objectTranslator\": \"function translate(pageData, entityId, clientId, accountId, env, prefetch) { prefetch = JSON.parse(prefetch); var uiData = JSON.parse(pageData).passwordPolicy_p0.configs; var apiData = getConfig(prefetch.listPasswordPolicy, \\\"historyLength\\\"); apiData.configValue = uiData.prevPwd; return JSON.stringify(apiData); } function getConfig(items, key) { var config = null; for(var i=0;i<items.length;i++){var item=items[i]; if(item.configKey==key){ config = item; }} return config;}\", \"preFetchDefinition\": { \"listPasswordPolicy\": { \"fetchFor\": \"listPasswordPolicy\", \"fetchType\": \"PAGE_DATA_VALUE\" } }, \"prefetchRequiredForLiveOnly\": false }' WHERE (`id` = '19');

SET FOREIGN_KEY_CHECKS=0;
UPDATE `self_serve`.`service` SET `id` = 'VCC' WHERE (`id` = 'vcc');
UPDATE `self_serve`.`fetch_config_template` SET `service_id` = 'VCC' WHERE (`id` = '34');
UPDATE `self_serve`.`service_urls` SET `service_id` = 'VCC' WHERE (`id` = '12');
UPDATE `self_serve`.`service_urls` SET `service_id` = 'VCC' WHERE (`id` = '13');
SET FOREIGN_KEY_CHECKS=1;


