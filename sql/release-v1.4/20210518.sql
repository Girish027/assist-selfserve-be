use self_serve;
--Updating the clients configs to blacklist tags
UPDATE `self_serve`.`clients_config` SET `values` = '[\"5\",\"6\"]' WHERE (`id` = '1');
UPDATE `self_serve`.`clients_config` SET `values` = '[\"5\", \"6\"]' WHERE (`id` = '3');
UPDATE `self_serve`.`clients_config` SET `values` = '[\"5\", \"6\"]' WHERE (`id` = '5');
UPDATE `self_serve`.`clients_config` SET `values` = '[\"5\",\"6\"]' WHERE (`id` = '9');
UPDATE `self_serve`.`clients_config` SET `values` = '[\"5\", \"6\"]' WHERE (`id` = '11');
UPDATE `self_serve`.`clients_config` SET `values` = '[\"5\", \"6\"]' WHERE (`id` = '23');
UPDATE `self_serve`.`clients_config` SET `values` = '[\"1\",\"6\", \"7\"]' WHERE (`id` = '27');
UPDATE `self_serve`.`clients_config` SET `values` = '[\"1\",\"6\" ,\"7\"]' WHERE (`id` = '29');
UPDATE `self_serve`.`clients_config` SET `values` = '[\"7\", \"6\"]' WHERE (`id` = '31');


--Updating actions for removing tags dependencies from teams and queues in OHS
UPDATE `action` SET `definition` = '{\"type\": \"REST\", \"method\": \"POST\", \"headers\": {\"apikey\": \"KtbDtdYYb7EUD4oajYCM8l9Nh7L0AgEc\", \"Content-Type\": \"application/x-www-form-urlencoded\"}, \"serviceId\": \"ohs\", \"uploadFile\": false, \"idLookupKeys\": null, \"relativePath\": \"/v1/ohs/adminEntity/create?entity=${body}\", \"bodyDefinition\": {}, \"requestBodyKey\": null, \"restClientType\": null, \"idLookupRequired\": false, \"objectTranslator\": \"function translate(pageData, entityId, clientId, accountId, env, prefetch, liveEntityIdMap, componentClientId, componentAccountId) {var uiData = JSON.parse(pageData).createTeams_p0;var apiData = [{\\\"entityBaseData\\\": {\\\"accountId\\\": componentAccountId,\\\"clientId\\\": componentClientId,\\\"entityType\\\": \\\"team\\\"},\\\"entityAttributes\\\": {\\\"teamName\\\": uiData.teamName,\\\"accountId\\\": componentAccountId}}];return JSON.stringify(apiData);}\\n\", \"preFetchDefinition\": {\"liveTags\": {\"env\": \"LIVE\", \"fetchFor\": \"listTag\", \"fetchType\": \"ENTITY_LISTING\"}, \"testTags\": {\"env\": \"TEST\", \"fetchFor\": \"listTag\", \"fetchType\": \"ENTITY_LISTING\"}}, \"prefetchRequiredForLiveOnly\": false}'
WHERE (`id` = '4');
UPDATE `action` SET `definition` = '{\"type\": \"REST\", \"method\": \"POST\", \"headers\": {\"apikey\": \"KtbDtdYYb7EUD4oajYCM8l9Nh7L0AgEc\", \"Content-Type\": \"application/x-www-form-urlencoded\"}, \"serviceId\": \"ohs\", \"uploadFile\": false, \"idLookupKeys\": null, \"relativePath\": \"/v1/ohs/adminEntity/update?entity=${body}\", \"bodyDefinition\": {}, \"requestBodyKey\": null, \"restClientType\": null, \"idLookupRequired\": false, \"objectTranslator\": \"function translate(pageData, entityId, clientId, accountId, env, prefetch, liveEntityIdMap, componentClientId, componentAccountId) {var uiData = JSON.parse(pageData).updateTeams_p0;var apiData = [{\\\"entityBaseData\\\": {\\\"accountId\\\": componentAccountId,\\\"clientId\\\": componentClientId,\\\"entityType\\\": \\\"team\\\",\\\"entityId\\\": entityId},\\\"entityAttributes\\\": {\\\"teamName\\\": uiData.teamName,\\\"accountId\\\": componentAccountId}}];return JSON.stringify(apiData);}\\n\", \"preFetchDefinition\": {\"liveTags\": {\"env\": \"LIVE\", \"fetchFor\": \"listTag\", \"fetchType\": \"ENTITY_LISTING\"}, \"testTags\": {\"env\": \"TEST\", \"fetchFor\": \"listTag\", \"fetchType\": \"ENTITY_LISTING\"}}, \"prefetchRequiredFrLiveOnly\": false}'
WHERE (`id` = '5');
UPDATE `action` SET `definition` = '{\"type\": \"REST\", \"method\": \"POST\", \"headers\": {\"apikey\": \"KtbDtdYYb7EUD4oajYCM8l9Nh7L0AgEc\", \"Content-Type\": \"application/x-www-form-urlencoded\"}, \"serviceId\": \"ohs\", \"uploadFile\": false, \"idLookupKeys\": null, \"relativePath\": \"/v1/ohs/adminEntity/create?entity=${body}\", \"bodyDefinition\": {}, \"requestBodyKey\": null, \"restClientType\": null, \"idLookupRequired\": false, \"objectTranslator\": \"function translate(pageData, entityId, clientId, accountId, env, prefetch, liveEntityIdMap, componentClientId, componentAccountId) { var uiData = JSON.parse(pageData).createQueues_p0.tabsField; var uiDataB = uiData[0]; var uiDataA = uiData[1]; var apiData = [{ \\\"entityAttributes\\\": { \\\"accountId\\\": componentAccountId, \\\"queueName\\\": uiDataB.queueName, \\\"queueDesc\\\": uiDataB.queueDesc, \\\"queueType\\\": uiDataA.assistConfig.queueType }, \\\"entityBaseData\\\": { \\\"accountId\\\": componentAccountId, \\\"clientId\\\": componentClientId, \\\"entityDisplayName\\\": uiDataB.queueName, \\\"entityType\\\": \\\"queue\\\" }}]; return JSON.stringify(apiData); }\", \"preFetchDefinition\": {\"liveTags\": {\"env\": \"LIVE\", \"fetchFor\": \"listTag\", \"fetchType\": \"ENTITY_LISTING\"}, \"testTags\": {\"env\": \"TEST\", \"fetchFor\": \"listTag\", \"fetchType\": \"ENTITY_LISTING\"}}, \"prefetchRequiredForLiveOnly\": false}'
WHERE (`id` = '12');
UPDATE `action` SET `definition` = '{\"type\": \"REST\", \"method\": \"POST\", \"headers\": {\"apikey\": \"D4oajYCM8l9Nh7L0AgEc\", \"Content-Type\": \"application/x-www-form-urlencoded\"}, \"serviceId\": \"ohs\", \"uploadFile\": false, \"idLookupKeys\": null, \"relativePath\": \"/v1/ohs/adminEntity/update?entity=${body}\", \"bodyDefinition\": {}, \"requestBodyKey\": null, \"restClientType\": null, \"idLookupRequired\": false, \"objectTranslator\": \"function translate(pageData, entityId, clientId, accountId, env, prefetch, liveEntityIdMap, componentClientId, componentAccountId) { var uiDataB = JSON.parse(pageData).updateQueues_p0.tabsField[0]; var uiDataA = JSON.parse(pageData).updateQueues_p0.tabsField[1].assistConfig; var apiData = [{ \\\"entityAttributes\\\": { \\\"accountId\\\": componentAccountId, \\\"queueName\\\": uiDataB.queueName, \\\"queueDesc\\\": uiDataB.queueDesc, \\\"queueType\\\": uiDataA.queueType }, \\\"entityBaseData\\\": { \\\"accountId\\\": componentAccountId, \\\"clientId\\\": componentClientId, \\\"entityDisplayName\\\": uiDataB.queueName, \\\"entityType\\\": \\\"queue\\\", \\\"entityId\\\": uiDataB.queueId }}]; return JSON.stringify(apiData); }\", \"preFetchDefinition\": {\"liveTags\": {\"env\": \"LIVE\", \"fetchFor\": \"listTag\", \"fetchType\": \"ENTITY_LISTING\"}, \"testTags\": {\"env\": \"TEST\", \"fetchFor\": \"listTag\", \"fetchType\": \"ENTITY_LISTING\"}}}'
WHERE (`id` = '16');

-- Updating Fetch Config scripts
UPDATE `fetch_config_template` SET `resp_api_to_resp_ui` = '{\"objectTranslator\": \"function translate(values){values=JSON.parse(JSON.parse(values).data.entity); var uiData = {}; uiData.teamId=values.entityBaseData.entityId; uiData.teamName=values.entityBaseData.entityDisplayName; return JSON.stringify(uiData);}\"}'
WHERE (`id` = '9');
UPDATE `fetch_config_template` SET `resp_api_to_resp_ui` = '{\"objectTranslator\": \"function translate(apiData) { var val = JSON.parse(JSON.parse(apiData).data.entity); var ea = val.entityAttributes; var ebd = val.entityBaseData; var uiData = { \\\"tabsField\\\": [ { \\\"queueList\\\": ebd.entityId, \\\"queueName\\\": ebd.entityDisplayName, \\\"queueId\\\": ebd.entityId, \\\"queueDesc\\\": ea.queueDesc }, { \\\"assistConfig\\\": { \\\"queueType\\\": ea.queueType } } ] }; return JSON.stringify(uiData); } \"}'
WHERE (`id` = '11');
