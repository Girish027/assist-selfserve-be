use self_serve;

UPDATE `action` SET `response_definition` = '{\"entityResponseTranslator\": \"var ApiResponse = function(_status, _message){ this.status = _status; this.message = _message; }; function translate(responseData) { try { var responseIntermediate = JSON.parse(responseData); var response = JSON.parse(responseIntermediate); if (response.status === \\\"completed\\\") { return new ApiResponse(\\\"SUCCESS\\\", \\\"Successfully processed \\\" + response.processedRecords + \\\" rows out of \\\" + response.totalRecords + \\\" rows\\\"); } else if(response.status === \\\"empty\\\") { return new ApiResponse(\\\"ERROR_STOP\\\", \\\"No records found to add agents\\\"); } else if(response.status === \\\"validation_error\\\" || response.status === \\\"upload_error\\\") { return new ApiResponse(\\\"ERROR_STOP\\\", \\\"There was an error in \\\" + (response.totalRecords - response.processedRecords) + \\\" rows, Successfully processed \\\" + response.processedRecords + \\\" rows\\\"); } else return new ApiResponse(\\\"ERROR\\\", JSON.stringify(response)) } catch (e) { return new ApiResponse(\\\"ERROR\\\", \\\"Error while processing your request\\\"); } }\"}'
WHERE (`id` = '53');

UPDATE `action` SET `response_definition` = '{\"entityResponseTranslator\": \"var ApiResponse = function(_status, _message){ this.status = _status; this.message = _message; }; function translate(responseData) { try { var responseIntermediate = JSON.parse(responseData); var response = JSON.parse(responseIntermediate); if (response.status === \\\"completed\\\") { return new ApiResponse(\\\"SUCCESS\\\", \\\"Successfully processed \\\" + response.processedRecords + \\\" rows out of \\\" + response.totalRecords + \\\" rows\\\"); } else if(response.status === \\\"empty\\\") { return new ApiResponse(\\\"ERROR_STOP\\\", \\\"No records found to add agents\\\"); } else if(response.status === \\\"validation_error\\\" || response.status === \\\"upload_error\\\") { return new ApiResponse(\\\"ERROR_STOP\\\", \\\"There was an error in \\\" + (response.totalRecords - response.processedRecords) + \\\" rows, Successfully processed \\\" + response.processedRecords + \\\" rows\\\"); } else return new ApiResponse(\\\"ERROR\\\", JSON.stringify(response)) } catch (e) { return new ApiResponse(\\\"ERROR\\\", \\\"Error while processing your request\\\"); } }\"}'
WHERE (`id` = '55');

UPDATE `fetch_config_template` SET `resp_api_to_resp_ui` = '{\"objectTranslator\": \"function translate(values, entity, context) { try { context  = JSON.parse(context); var date = new Date(); var dateString = date.toLocaleDateString(\\\"en-CA\\\", {year: \\\"2-digit\\\", month: \\\"2-digit\\\", day: \\\"2-digit\\\"}).replaceAll(\\\"-\\\", \\\"\\\"); var timeString = (\\\"0\\\" + date.getHours()).slice(-2) + \\\"\\\" + date.getMinutes() + \\\"\\\" + date.getSeconds(); var accountId = \\\"BulkUpload\\\" + \\\"_\\\" + dateString + \\\"_\\\" + timeString; var uiData = { \\\"accountId\\\": accountId }; } catch (e) {} return JSON.stringify(uiData); }\"}'
WHERE (`id` = '68');

UPDATE `fetch_config_template` SET `resp_api_to_resp_ui` = '{\"objectTranslator\": \"function translate(values, entity, context) { try { context  = JSON.parse(context); var date = new Date(); var dateString = date.toLocaleDateString(\\\"en-CA\\\", {year: \\\"2-digit\\\", month: \\\"2-digit\\\", day: \\\"2-digit\\\"}).replaceAll(\\\"-\\\", \\\"\\\"); var timeString = (\\\"0\\\" + date.getHours()).slice(-2) + \\\"\\\" + date.getMinutes() + \\\"\\\" + date.getSeconds(); var accountId = \\\"BulkUpload\\\" + \\\"_\\\" + dateString + \\\"_\\\" + timeString; var uiData = { \\\"accountId\\\": accountId }; } catch (e) {} return JSON.stringify(uiData); }\"}'
WHERE (`id` = '69');


UPDATE `activity_template` SET `configs` = '{\"subHeader\": {\"BULK\": {\"subHeaderTitle\": \"Create or Update existing Assist users in this screen\", \"subHeaderDescription\": \"To create or update one user, switch the bulk upload toggle to off.\", \"allowedSubHeaderActions\": [\"BULK_UPLOAD\"]}, \"CREATE\": {\"subHeaderTitle\": \"Create or Update existing Assist users in this screen\", \"subHeaderDescription\": \"To create or update multiple users, switch the bulk upload toggle to on.\", \"allowedSubHeaderActions\": [\"BULK_UPLOAD\"]}, \"UPDATE\": {}}, \"publishType\": \"TEST_ONLY\", \"allowedActions\": {\"BULK\": [\"PUBLISH_TO_TEST\", \"BULK_UPLOAD\"], \"CREATE\": [\"PUBLISH_TO_TEST\", \"SAVE_AND_CLOSE\", \"EDIT\", \"BULK_UPLOAD\"], \"UPDATE\": [\"PUBLISH_TO_TEST\", \"EDIT\", \"SAVE_AND_CLOSE\"]}, \"preFetchInputValidation\": \"[^A-Za-z0-9-_ . ,:@]\"}'
WHERE (`id` = 'userTest');

UPDATE `activity_template` SET `configs` = '{\"subHeader\": {\"BULK\": {\"subHeaderTitle\": \"Create or Update existing Assist users in this screen.\", \"subHeaderDescription\": \"To create or update one user, switch the bulk upload toggle to off.\", \"allowedSubHeaderActions\": [\"BULK_UPLOAD\"]}, \"CREATE\": {\"subHeaderTitle\": \"Create or Update existing Assist users in this screen.\", \"subHeaderDescription\": \"To create or update multiple users, switch the bulk upload toggle to on.\", \"allowedSubHeaderActions\": [\"BULK_UPLOAD\"]}, \"UPDATE\": {}}, \"publishType\": \"LIVE_ONLY\", \"allowedActions\": {\"BULK\": [\"PUBLISH_TO_LIVE\", \"BULK_UPLOAD\"], \"CREATE\": [\"PUBLISH_TO_LIVE\", \"SAVE_AND_CLOSE\", \"EDIT\", \"BULK_UPLOAD\"], \"UPDATE\": [\"PUBLISH_TO_LIVE\", \"EDIT\", \"SAVE_AND_CLOSE\"]}, \"preFetchInputValidation\": \"[^A-Za-z0-9-_ . ,:@]\"}'
WHERE (`id` = 'userLive');


UPDATE `activity_template` SET `entity_location` = '{\"BULK\": {\"entityIdLocation\": \"createBulkAgentsTest_p0.accountId\", \"entityLabelLocation\": \"createBulkAgentsTest_p0.accountId\"}, \"CREATE\": {\"entityIdLocation\": \"createUserTest_p0.tabsField.0.userName\", \"entityLabelLocation\": \"createUserTest_p0.tabsField.0.userName\"}, \"UPDATE\": {\"entityIdLocation\": \"updateUserTest_p0.tabsField.0.userName\", \"entityLabelLocation\": \"updateUserTest_p0.tabsField.0.userName\"}}'
WHERE (`id` = 'userTest');

UPDATE `activity_template` SET `entity_location` = '{\"BULK\": {\"entityIdLocation\": \"createBulkAgentsLive_p0.accountId\", \"entityLabelLocation\": \"createBulkAgentsLive_p0.accountId\"}, \"CREATE\": {\"entityIdLocation\": \"createUserLive_p0.tabsField.0.userName\", \"entityLabelLocation\": \"createUserLive_p0.tabsField.0.userName\"}, \"UPDATE\": {\"entityIdLocation\": \"updateUserLive_p0.tabsField.0.userName\", \"entityLabelLocation\": \"updateUserLive_p0.tabsField.0.userName\"}}'
WHERE (`id` = 'userLive');


