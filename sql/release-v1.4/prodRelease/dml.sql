use `self_serve`;

-- Updating actions for removing tags dependencies from teams and queues in OHS

UPDATE `action` SET `definition` = '{\"type\": \"REST\", \"method\": \"POST\", \"headers\": {\"apikey\": \"KtbDtdYYb7EUD4oajYCM8l9Nh7L0AgEc\", \"Content-Type\": \"application/x-www-form-urlencoded\"}, \"serviceId\": \"ohs\", \"uploadFile\": false, \"idLookupKeys\": null, \"relativePath\": \"/v1/ohs/adminEntity/create?entity=${body}\", \"bodyDefinition\": {}, \"requestBodyKey\": null, \"restClientType\": null, \"idLookupRequired\": false, \"objectTranslator\": \"function translate(pageData, entityId, clientId, accountId, env, prefetch, liveEntityIdMap, componentClientId, componentAccountId) {var uiData = JSON.parse(pageData).createTeams_p0;var apiData = [{\\\"entityBaseData\\\": {\\\"accountId\\\": componentAccountId,\\\"clientId\\\": componentClientId,\\\"entityType\\\": \\\"team\\\"},\\\"entityAttributes\\\": {\\\"teamName\\\": uiData.teamName,\\\"accountId\\\": componentAccountId}}];return JSON.stringify(apiData);}\\n\", \"preFetchDefinition\": {\"liveTags\": {\"env\": \"LIVE\", \"fetchFor\": \"listTag\", \"fetchType\": \"ENTITY_LISTING\"}, \"testTags\": {\"env\": \"TEST\", \"fetchFor\": \"listTag\", \"fetchType\": \"ENTITY_LISTING\"}}, \"prefetchRequiredForLiveOnly\": false}'
WHERE (`id` = '4');
UPDATE `action` SET `definition` = '{\"type\": \"REST\", \"method\": \"POST\", \"headers\": {\"apikey\": \"KtbDtdYYb7EUD4oajYCM8l9Nh7L0AgEc\", \"Content-Type\": \"application/x-www-form-urlencoded\"}, \"serviceId\": \"ohs\", \"uploadFile\": false, \"idLookupKeys\": null, \"relativePath\": \"/v1/ohs/adminEntity/update?entity=${body}\", \"bodyDefinition\": {}, \"requestBodyKey\": null, \"restClientType\": null, \"idLookupRequired\": false, \"objectTranslator\": \"function translate(pageData, entityId, clientId, accountId, env, prefetch, liveEntityIdMap, componentClientId, componentAccountId) {var uiData = JSON.parse(pageData).updateTeams_p0;var apiData = [{\\\"entityBaseData\\\": {\\\"accountId\\\": componentAccountId,\\\"clientId\\\": componentClientId,\\\"entityType\\\": \\\"team\\\",\\\"entityId\\\": entityId},\\\"entityAttributes\\\": {\\\"teamName\\\": uiData.teamName,\\\"accountId\\\": componentAccountId}}];return JSON.stringify(apiData);}\\n\", \"preFetchDefinition\": {\"liveTags\": {\"env\": \"LIVE\", \"fetchFor\": \"listTag\", \"fetchType\": \"ENTITY_LISTING\"}, \"testTags\": {\"env\": \"TEST\", \"fetchFor\": \"listTag\", \"fetchType\": \"ENTITY_LISTING\"}}, \"prefetchRequiredFrLiveOnly\": false}'
WHERE (`id` = '5');
UPDATE `action` SET `definition` = '{\"type\": \"REST\", \"method\": \"POST\", \"headers\": {\"apikey\": \"KtbDtdYYb7EUD4oajYCM8l9Nh7L0AgEc\", \"Content-Type\": \"application/x-www-form-urlencoded\"}, \"serviceId\": \"ohs\", \"uploadFile\": false, \"idLookupKeys\": null, \"relativePath\": \"/v1/ohs/adminEntity/create?entity=${body}\", \"bodyDefinition\": {}, \"requestBodyKey\": null, \"restClientType\": null, \"idLookupRequired\": false, \"objectTranslator\": \"function translate(pageData, entityId, clientId, accountId, env, prefetch, liveEntityIdMap, componentClientId, componentAccountId) { var uiData = JSON.parse(pageData).createQueues_p0.tabsField; var uiDataB = uiData[0]; var uiDataA = uiData[1]; var apiData = [{ \\\"entityAttributes\\\": { \\\"accountId\\\": componentAccountId, \\\"queueName\\\": uiDataB.queueName, \\\"queueDesc\\\": uiDataB.queueDesc, \\\"queueType\\\": uiDataA.assistConfig.queueType }, \\\"entityBaseData\\\": { \\\"accountId\\\": componentAccountId, \\\"clientId\\\": componentClientId, \\\"entityDisplayName\\\": uiDataB.queueName, \\\"entityType\\\": \\\"queue\\\" }}]; return JSON.stringify(apiData); }\", \"preFetchDefinition\": {\"liveTags\": {\"env\": \"LIVE\", \"fetchFor\": \"listTag\", \"fetchType\": \"ENTITY_LISTING\"}, \"testTags\": {\"env\": \"TEST\", \"fetchFor\": \"listTag\", \"fetchType\": \"ENTITY_LISTING\"}}, \"prefetchRequiredForLiveOnly\": false}'
WHERE (`id` = '12');
UPDATE `action` SET `definition` = '{\"type\": \"REST\", \"method\": \"POST\", \"headers\": {\"apikey\": \"D4oajYCM8l9Nh7L0AgEc\", \"Content-Type\": \"application/x-www-form-urlencoded\"}, \"serviceId\": \"ohs\", \"uploadFile\": false, \"idLookupKeys\": null, \"relativePath\": \"/v1/ohs/adminEntity/update?entity=${body}\", \"bodyDefinition\": {}, \"requestBodyKey\": null, \"restClientType\": null, \"idLookupRequired\": false, \"objectTranslator\": \"function translate(pageData, entityId, clientId, accountId, env, prefetch, liveEntityIdMap, componentClientId, componentAccountId) { var uiDataB = JSON.parse(pageData).updateQueues_p0.tabsField[0]; var uiDataA = JSON.parse(pageData).updateQueues_p0.tabsField[1].assistConfig; var apiData = [{ \\\"entityAttributes\\\": { \\\"accountId\\\": componentAccountId, \\\"queueName\\\": uiDataB.queueName, \\\"queueDesc\\\": uiDataB.queueDesc, \\\"queueType\\\": uiDataA.queueType }, \\\"entityBaseData\\\": { \\\"accountId\\\": componentAccountId, \\\"clientId\\\": componentClientId, \\\"entityDisplayName\\\": uiDataB.queueName, \\\"entityType\\\": \\\"queue\\\", \\\"entityId\\\": uiDataB.queueId }}]; return JSON.stringify(apiData); }\", \"preFetchDefinition\": {\"liveTags\": {\"env\": \"LIVE\", \"fetchFor\": \"listTag\", \"fetchType\": \"ENTITY_LISTING\"}, \"testTags\": {\"env\": \"TEST\", \"fetchFor\": \"listTag\", \"fetchType\": \"ENTITY_LISTING\"}}}'
WHERE (`id` = '16');

-- Updating Fetch Config scripts
UPDATE `fetch_config_template` SET `resp_api_to_resp_ui` = '{\"objectTranslator\": \"function translate(values){values=JSON.parse(JSON.parse(values).data.entity); var uiData = {}; uiData.teamId=values.entityBaseData.entityId; uiData.teamName=values.entityBaseData.entityDisplayName; return JSON.stringify(uiData);}\"}'
WHERE (`id` = '9');
UPDATE `fetch_config_template` SET `resp_api_to_resp_ui` = '{\"objectTranslator\": \"function translate(apiData) { var val = JSON.parse(JSON.parse(apiData).data.entity); var ea = val.entityAttributes; var ebd = val.entityBaseData; var uiData = { \\\"tabsField\\\": [ { \\\"queueList\\\": ebd.entityId, \\\"queueName\\\": ebd.entityDisplayName, \\\"queueId\\\": ebd.entityId, \\\"queueDesc\\\": ea.queueDesc }, { \\\"assistConfig\\\": { \\\"queueType\\\": ea.queueType } } ] }; return JSON.stringify(uiData); } \"}'
WHERE (`id` = '11');

UPDATE `action` SET `definition` = '{\"type\": \"REST\", \"method\": \"POST\", \"headers\": {\"Content-Type\": \"application/x-www-form-urlencoded\", \"GenerateAuthToken\": \"Bearer \"}, \"serviceId\": \"assist\", \"uploadFile\": false, \"idLookupKeys\": null, \"relativePath\": \"/en/hierarchy/rest/clients/${componentClientId}/accounts/${componentAccountId}/invitemanagement/update?entityObj=${body}\", \"bodyDefinition\": {}, \"requestBodyKey\": null, \"restClientType\": null, \"idLookupRequired\": false, \"objectTranslator\": \"function translate(pageData, entityId, clientId, accountId, env, prefetch, liveEntityIdMap,componentClientId, componentAccountId) { var uiData = JSON.parse(pageData).createQueues_p0.tabsField; var uiDataB = uiData[0]; var uiDataA = uiData[1].assistConfig; var apiData = [{ queueName: uiDataB.queueName, queueDescription: uiDataB.queueDesc, acceptanceRate: uiDataA.inviteMgmt.invites.toString(), safetyfactor: uiDataA.inviteMgmt.safetyfactor, expiryInterval: uiDataA.inviteMgmt.expiryInterval, caModelType: uiDataA.inviteMgmt.caModelType, key: uiDataA.inviteMgmt.key !== \\\"\\\" ? uiDataA.inviteMgmt.key : componentAccountId+\\\"-queue-\\\"+uiDataB.queueName }]; return JSON.stringify(apiData); }\", \"preFetchDefinition\": null, \"prefetchRequiredForLiveOnly\": false} ' WHERE (`id` = '50');


-- agents bulk upload 

ALTER TABLE `entity_instance`
ADD COLUMN `polling_id` VARCHAR(128) NULL AFTER `activity_instance_id`;


INSERT INTO `fetch_config_template` (`id`, `created_by`, `created_on`, `last_updated_by`, `last_updated_on`, `fetch_for`, `headers`, `params`, `relativeurl`, `resp_api_to_resp_ui`, `translator_type`, `type`, `service_id`)
VALUES ('67', 'default.user', '2021-05-21 12:24:46.000000', 'default.user', '2021-05-21 12:24:46.000000', 'getBulkAgentsExcel', '{\"GenerateAuthToken\": \"Bearer \"}', '{\"contexts\": [\"accountId\", \"clientId\", \"componentAccountId\", \"componentClientId\"], \"constants\": {}}', '/en/hierarchy/rest/clients/${componentClientId}/accounts/${componentAccountId}/agents/upload/template', '{\"objectTranslator\": \"function translate(apiData) { return apiData; }\"}', 'NONE', 'PAGE_DATA_VALUE', 'assist');

INSERT INTO `fetch_config_template` (`id`, `created_by`, `created_on`, `last_updated_by`, `last_updated_on`, `fetch_for`, `headers`, `params`, `relativeurl`, `resp_api_to_resp_ui`, `translator_type`, `type`, `service_id`) VALUES
('68', 'default.user', '2021-05-21 12:24:46.000000', 'default.user', '2021-05-21 12:24:46.000000', 'createBulkAgentsTest_p0', '{}', '{\"contexts\": [\"accountId\"], \"constants\": {}}', '/actuator/health', '{\"objectTranslator\": \"function translate(values, entity, context) { try { context  = JSON.parse(context); var timestamp = new Date().getTime(); var uiData = { \\\"accountId\\\": context.accountId+timestamp}; } catch (e) {} return JSON.stringify(uiData); }\"}', 'JS', 'PAGE_DATA_VALUE', 'self');

INSERT INTO `fetch_config_template` (`id`, `created_by`, `created_on`, `last_updated_by`, `last_updated_on`, `fetch_for`, `headers`, `params`, `relativeurl`, `resp_api_to_resp_ui`, `translator_type`, `type`, `service_id`) VALUES
('69', 'default.user', '2021-05-21 12:24:46.000000', 'default.user', '2021-05-21 12:24:46.000000', 'createBulkAgentsLive_p0', '{}', '{\"contexts\": [\"accountId\"], \"constants\": {}}', '/actuator/health', '{\"objectTranslator\": \"function translate(values, entity, context) { try { context  = JSON.parse(context); var timestamp = new Date().getTime(); var uiData = { \\\"accountId\\\": context.accountId+timestamp}; } catch (e) {} return JSON.stringify(uiData); }\"}', 'JS', 'PAGE_DATA_VALUE', 'self');


INSERT INTO `action` (`id`, `created_by`, `created_on`, `last_updated_by`, `last_updated_on`, `definition`, `definition_type`, `description`, `type`, `response_definition`, `configs`) VALUES
('52', 'default.user', '2021-10-16 13:13:15.527428', 'Rhea.Fernandes@247.ai', '2021-06-04 15:59:44.875925', '{\"type\": \"REST\", \"method\": \"POST\", \"headers\": {\"uploadFile\": true, \"Content-Type\": \"multipart/form-data\", \"GenerateAuthToken\": \"Bearer \", \"referer\": \"https://salesdemo.portal.assist.staging.247-inc.net\"}, \"serviceId\": \"assist\", \"uploadFile\": true, \"idLookupKeys\": null, \"relativePath\": \"/en/hierarchy/rest/clients/${componentClientId}/accounts/${componentAccountId}/agents/upload/${uploadOption}\", \"bodyDefinition\": {}, \"requestBodyKey\": \"uploadfile\", \"restClientType\": \"MULTIPART_FILE\", \"idLookupRequired\": false, "getPathParamFromPageData": true,  \"objectTranslator\": \"function translate(pageData) { var uiData = JSON.parse(pageData).createBulkAgentsTest_p0 ; var uploadOption = uiData.stepTwo.selectType; return uploadOption; }\", \"preFetchDefinition\": null, \"prefetchRequiredForLiveOnly\": false}', 'BULK', 'Create Bulk Agents Test', 'REST', '{\"entityResponseTranslator\": \"var ApiResponse = function(_status, _message){ this.status = _status; this.message = _message; }; function translate(responseData) { try { var response = JSON.parse(responseData); if(response.Error !== undefined) { return new ApiResponse(\\\"ERROR\\\", response.Error); } if (response.errorCode !== undefined) { return new ApiResponse(\\\"ERROR\\\", response.errorMessage); } return new ApiResponse(\\\"SUCCESS\\\", response.uploadId); } catch (e) { return new ApiResponse(\\\"ERROR\\\", \\\"Error while processing your request\\\"); } }\"}', '{\"PATH_PARAMS\": {\"type\": \"PATH_PARAMS\", \"pathParams\": [{\"key\": \"uploadOption\"}]}}');

INSERT INTO `action` (`id`, `created_by`, `created_on`, `last_updated_by`, `last_updated_on`, `definition`, `definition_type`, `description`, `type`, `response_definition`, `configs`) VALUES
('53', 'default.user', '2021-06-03 13:13:15.527428', 'Rhea.Fernandes@247.ai', '2021-06-04 15:59:44.877121', '{\"type\": \"REST\", \"method\": \"GET\", \"headers\": {\"GenerateAuthToken\": \"Bearer \"}, \"serviceId\": \"assist\", \"uploadFile\": false, \"idLookupKeys\": null, \"relativePath\": \"/en/hierarchy/rest/clients/nemo-client-salesdemo/accounts/salesdemo-account-default/agents/upload/status/${uploadId}\", \"bodyDefinition\": {}, \"requestBodyKey\": null, \"restClientType\": null, \"idLookupRequired\": false, \"objectTranslator\": \"function translate(pageData, entityId, clientId, accountId, env) {  return \\\"\\\"; }\", \"preFetchDefinition\": null, \"prefetchRequiredForLiveOnly\": false}', 'BULK', 'Get Bulk Agents Test Status', 'REST', '{\"entityResponseTranslator\": \"var ApiResponse = function(_status, _message){ this.status = _status; this.message = _message; }; function translate(responseData) { try { var responseIntermediate = JSON.parse(responseData); var response = JSON.parse(responseIntermediate); if (response.status === \\\"completed\\\") { return new ApiResponse(\\\"SUCCESS\\\", \\\"Successfully processed \\\" + response.processedRecords + \\\" rows out of \\\" + response.totalRecords + \\\" rows\\\"); } else if(response.status === \\\"empty\\\") { return new ApiResponse(\\\"ERROR_STOP\\\", \\\"No records found to add agents\\\"); } else if(response.status === \\\"validation_error\\\" || response.status === \\\"upload_error\\\") { return new ApiResponse(\\\"ERROR_STOP\\\", \\\"There was an error in \\\" + (response.totalRecords - response.processedRecords) + \\\" rows, Successfully processed \\\" + response.processedRecords + \\\" rows\\\"); } else return new ApiResponse(\\\"ERROR\\\", response) } catch (e) { return new ApiResponse(\\\"ERROR\\\", \\\"Error while processing your request\\\"); } }\"}', '{\"POLL\": {\"type\": \"POLL\", \"retryCount\": 3000, \"retryInterval\": 30000}}');

INSERT INTO `action` (`id`, `created_by`, `created_on`, `last_updated_by`, `last_updated_on`, `definition`, `definition_type`, `description`, `type`, `response_definition`, `configs`) VALUES
('54', 'default.user', '2021-10-16 13:13:15.527428', 'Dhrishya.R@247-inc.com', '2021-06-04 19:04:29.625915', '{\"type\": \"REST\", \"method\": \"POST\", \"headers\": {\"uploadFile\": \"true\", \"Content-Type\": \"multipart/form-data\", \"GenerateAuthToken\": \"Bearer \", \"referer\": \"https://salesdemo.portal.assist.staging.247-inc.net\"}, \"serviceId\": \"assist\", \"uploadFile\": true, \"idLookupKeys\": null, \"relativePath\": \"/en/hierarchy/rest/clients/${componentClientId}/accounts/${componentAccountId}/agents/upload/${uploadAction}\", \"bodyDefinition\": {}, \"requestBodyKey\": \"uploadfile\", \"restClientType\": \"MULTIPART_FILE\", \"idLookupRequired\": false,"getPathParamFromPageData": true,  \"objectTranslator\": \"function translate(pageData) { var uiData = JSON.parse(pageData).createBulkAgentsLive_p0 ; var uploadOption = uiData.stepTwo.selectType; return uploadOption; }\", \"preFetchDefinition\": null, \"prefetchRequiredForLiveOnly\": false}', 'BULK', 'Create Bulk Agents Live', 'REST', '{\"entityResponseTranslator\": \"var ApiResponse = function(_status, _message){ this.status = _status; this.message = _message; }; function translate(responseData) { try { var response = JSON.parse(responseData); if(response.Error !== undefined) { return new ApiResponse(\\\"ERROR\\\", response.Error); } if (response.errorCode !== undefined) { return new ApiResponse(\\\"ERROR\\\", response.errorMessage); } return new ApiResponse(\\\"SUCCESS\\\", response.uploadId); } catch (e) { return new ApiResponse(\\\"ERROR\\\", \\\"Error while processing your request\\\"); } }\"}', '{\"PATH_PARAMS\": {\"type\": \"PATH_PARAMS\", \"pathParams\": [{\"key\": \"uploadOption\"}]}}');

INSERT INTO `action` (`id`, `created_by`, `created_on`, `last_updated_by`, `last_updated_on`, `definition`, `definition_type`, `description`, `type`, `response_definition`, `configs`) VALUES
('55', 'default.user', '2021-06-03 13:13:15.527428', 'Dhrishya.R@247-inc.com', '2021-06-04 19:04:29.403044', '{\"type\": \"REST\", \"method\": \"GET\", \"headers\": {\"GenerateAuthToken\": \"Bearer \"}, \"serviceId\": \"assist\", \"uploadFile\": false, \"idLookupKeys\": null, \"relativePath\": \"/en/hierarchy/rest/clients/nemo-client-salesdemo/accounts/salesdemo-account-default/agents/upload/status/${uploadId}\", \"bodyDefinition\": {}, \"requestBodyKey\": null, \"restClientType\": null, \"idLookupRequired\": false, \"objectTranslator\": \"function translate(pageData, entityId, clientId, accountId, env) {  return \\\"\\\"; }\", \"preFetchDefinition\": null, \"prefetchRequiredForLiveOnly\": false}', 'BULK', 'Get Bulk Agents Live Status', 'REST', '{\"entityResponseTranslator\": \"var ApiResponse = function(_status, _message){ this.status = _status; this.message = _message; }; function translate(responseData) { try { var responseIntermediate = JSON.parse(responseData); var response = JSON.parse(responseIntermediate); if (response.status === \\\"completed\\\") { return new ApiResponse(\\\"SUCCESS\\\", \\\"Successfully processed \\\" + response.processedRecords + \\\" rows out of \\\" + response.totalRecords + \\\" rows\\\"); } else if(response.status === \\\"empty\\\") { return new ApiResponse(\\\"ERROR_STOP\\\", \\\"No records found to add agents\\\"); } else if(response.status === \\\"validation_error\\\" || response.status === \\\"upload_error\\\") { return new ApiResponse(\\\"ERROR_STOP\\\", \\\"There was an error in \\\" + (response.totalRecords - response.processedRecords) + \\\" rows, Successfully processed \\\" + response.processedRecords + \\\" rows\\\"); } else return new ApiResponse(\\\"ERROR\\\", response) } catch (e) { return new ApiResponse(\\\"ERROR\\\", \\\"Error while processing your request\\\"); } }\"}', '{\"POLL\": {\"type\": \"POLL\", \"retryCount\": 3000, \"retryInterval\": 30000}}');


INSERT INTO `action_workflow` (`id`, `created_by`, `created_on`, `last_updated_by`, `last_updated_on`, `action_id`, `activity_template_id`) VALUES
('58', 'default.user', '2021-05-24 17:44:12.124342', 'default.user', '2021-05-24 17:44:12.124342', '52', 'userTest');


INSERT INTO `action_workflow` (`id`, `created_by`, `created_on`, `last_updated_by`, `last_updated_on`, `action_id`, `activity_template_id`) VALUES
('59', 'default.user', '2021-05-24 17:44:12.124342', 'default.user', '2021-05-24 17:44:12.124342', '53', 'userTest');


INSERT INTO `action_workflow` (`id`, `created_by`, `created_on`, `last_updated_by`, `last_updated_on`, `action_id`, `activity_template_id`) VALUES
('60', 'default.user', '2021-05-24 17:44:12.124342', 'default.user', '2021-05-24 17:44:12.124342', '54', 'userLive');

INSERT INTO `action_workflow` (`id`, `created_by`, `created_on`, `last_updated_by`, `last_updated_on`, `action_id`, `activity_template_id`) VALUES
('61', 'default.user', '2021-05-24 17:44:12.124342', 'default.user', '2021-05-24 17:44:12.124342', '55', 'userLive');


INSERT INTO `action_dependencies` (`action_id`, `dependent_action_id`)
VALUES ('53', '52');
INSERT INTO `action_dependencies` (`action_id`, `dependent_action_id`)
VALUES ('55', '54');

INSERT INTO `page_template` (`id`, `created_by`, `created_on`, `last_updated_by`, `last_updated_on`, `definition`, `description`, `title`, `type`) VALUES
('createBulkAgentsTest_p0', 'default.user', '2021-05-21 17:44:46.000000', 'default.user', '2021-05-21 17:44:46.000000', '{ \"schema\": { \"type\": \"object\", \"properties\": { \"banner\": { \"type\": \"string\" }, \"accountId\": { \"type\": \"string\", \"title\": \"\" }, \"uploadKey\": { \"title\": \"\", \"type\": \"array\", \"default\": [ \"uploadfile\" ] }, \"stepOne\": { \"type\": \"object\", \"title\": \"BULK_AGENTS_STEP_ONE_TITLE\", \"properties\": { \"textOne\": { \"type\": \"string\", \"title\": \"BULK_AGENTS_STEP_ONE_DESCRIPTION\", \"default\": \"\" }, \"template\": { \"title\": \"\", \"type\": \"string\", \"default\": \"\" } } }, \"stepTwo\": { \"type\": \"object\", \"title\": \"BULK_AGENTS_STEP_TWO_TITLE\", \"properties\": { \"textTwo\": { \"type\": \"string\", \"title\": \"BULK_AGENTS_STEP_TWO_DESCRIPTION\" } } }, \"stepThree\": { \"type\": \"object\", \"title\": \"BULK_AGENTS_STEP_THREE_TITLE\", \"properties\": { \"textThree\": { \"type\": \"string\", \"title\": \"BULK_AGENTS_STEP_THREE_DESCRIPTION\", \"default\": \"\" } } }, \"uploadfile\": { \"title\": \"\", \"type\": \"string\", \"default\": \"\" } } }, \"uiSchema\": { \"banner\": { \"ui:field\": \"infobanner\", \"ui:options\": { \"size\": 10, \"bannerTitle\": \"BULKAGENTS_INFOBANNER_TITLE\", \"bannerDescription\": \"BULKAGENTS_INFOTEXT\" } }, \"accountId\": { \"ui:field\": \"plaintext\", \"ui:options\": { \"styles\": { \"container\": { \"display\": \"none\" }, \"label\": {}, \"field\": {} } } }, \"uploadKey\": { \"ui:field\": \"plaintext\", \"ui:options\": { \"styles\": { \"container\": { \"display\": \"none\" }, \"label\": {}, \"field\": {} } } }, \"stepOne\": { \"textOne\": { \"ui:field\": \"plaintext\", \"ui:options\": { \"fieldSize\": [ 12, 12 ], \"size\": 6, \"styles\": { \"container\": { \"marginBottom\": \"15px\", \"marginRight\": \"20px\" }, \"label\": { \"marginBottom\": \"8px\" }, \"field\": {} } } }, \"template\": { \"ui:field\": \"wrapper\", \"ui:options\": { \"fieldSize\": [ 0, 12 ], \"size\": 6, \"type\": \"secondary\", \"component\": \"button\", \"isAccessTokenRequired\": true, \"event\": \"onClick\", \"downloadFile\": { \"name\": \"BulkUserCreationTemplate-generated.xls\", \"fileType\": \"application/vnd.ms-excel\", \"readType\": \"arrayBuffer\" }, \"template\": [ { \"name\": \"reqUrl\", \"value\": \"{serviceBaseUrl}/client/{clientId}/account/{accountId}/env/TEST/entity/bulkagents/type/PAGE_DATA_VALUE/download/getBulkAgentsExcel\" }, { \"name\": \"fileName\", \"value\": \"{clientId}-{accountId}-BulkUserCreationTemplate-generated.xls\" } ], \"textStyles\": { \"fontSize\": 13, \"fontWeight\": \"bold\", \"display\": \"inline-flex\", \"lineHeight\": \"25px\", \"verticalAlign\": \"top\" }, \"displayName\": \"Download\" } } }, \"stepTwo\": { \"textTwo\": { \"ui:field\": \"plaintext\", \"ui:options\": { \"fieldSize\": [ 7, 7 ], \"styles\": { \"container\": { \"marginBottom\": \"15px\" }, \"label\": { \"marginBottom\": \"8px\" }, \"field\": {} } } } }, \"stepThree\": { \"ui:options\": { \"disableSeparator\": true }, \"textThree\": { \"ui:field\": \"plaintext\", \"ui:options\": { \"fieldSize\": [ 7, 7 ], \"styles\": { \"container\": { \"marginBottom\": \"15px\" }, \"label\": { \"marginBottom\": \"8px\" }, \"field\": {} } } } }, \"uploadfile\": { \"ui:field\": \"text\", \"ui:options\": { \"fileReadType\": \"dataurl\", \"mediaType\": \"excel\", \"inputType\": \"file\", \"displayValueType\": \"fileName\", \"inputFileButtonText\": \"BROWSE\", \"showDownloadButton\": false, \"fieldSize\": [ 12, 12 ], \"size\": 10, \"styles\": { \"container\": { \"marginBottom\": \"15px\" }, \"label\": { \"marginBottom\": \"8px\" }, \"field\": {} } } } }, \"viewUiSchema\": { \"banner\": { \"ui:field\": \"infobanner\", \"ui:options\": { \"size\": 10, \"bannerTitle\": \"BULKAGENTS_INFOBANNER_TITLE\", \"bannerDescription\": \"BULKAGENTS_INFOTEXT\" } }, \"accountId\": { \"ui:field\": \"plaintext\", \"ui:options\": { \"isDisabled\": true, \"styles\": { \"container\": { \"display\": \"none\" }, \"label\": {}, \"field\": {} } } }, \"uploadKey\": { \"ui:field\": \"plaintext\", \"ui:options\": { \"styles\": { \"container\": { \"display\": \"none\" }, \"label\": {}, \"field\": {} } } }, \"stepOne\": { \"textOne\": { \"ui:field\": \"plaintext\", \"ui:options\": { \"isDisabled\": true, \"fieldSize\": [ 12, 12 ], \"size\": 6, \"styles\": { \"container\": { \"marginBottom\": \"15px\", \"marginRight\": \"20px\" }, \"label\": { \"marginBottom\": \"8px\" }, \"field\": {} } } }, \"template\": { \"ui:field\": \"wrapper\", \"ui:options\": { \"isDisabled\": true, \"fieldSize\": [ 0, 12 ], \"size\": 6, \"type\": \"secondary\", \"component\": \"button\", \"isAccessTokenRequired\": true, \"event\": \"onClick\", \"downloadFile\": { \"name\": \"BulkUserCreationTemplate-generated.xls\", \"fileType\": \"application/vnd.ms-excel\", \"readType\": \"arrayBuffer\" }, \"template\": [ { \"name\": \"reqUrl\", \"value\": \"{serviceBaseUrl}/client/{clientId}/account/{accountId}/env/TEST/entity/bulkAgents/type/PAGE_DATA_VALUE/download/getBulkAgentsExcel\" }, { \"name\": \"fileName\", \"value\": \"{clientId}-{accountId}-BulkUserCreationTemplate-generated.xls\" } ], \"textStyles\": { \"fontSize\": 13, \"fontWeight\": \"bold\", \"display\": \"inline-flex\", \"lineHeight\": \"25px\", \"verticalAlign\": \"top\" }, \"displayName\": \"Download\" } } }, \"stepTwo\": { \"textTwo\": { \"ui:field\": \"plaintext\", \"ui:options\": { \"fieldSize\": [ 7, 7 ], \"styles\": { \"container\": { \"marginBottom\": \"15px\" }, \"label\": { \"marginBottom\": \"8px\" }, \"field\": {} } } } }, \"stepThree\": { \"ui:options\": { \"disableSeparator\": true }, \"textThree\": { \"ui:field\": \"plaintext\", \"ui:options\": { \"isDisabled\": true, \"fieldSize\": [ 7, 7 ], \"styles\": { \"container\": { \"marginBottom\": \"15px\" }, \"label\": { \"marginBottom\": \"8px\" }, \"field\": {} } } } }, \"uploadfile\": { \"ui:field\": \"text\", \"ui:options\": { \"fileReadType\": \"dataurl\", \"mediaType\": \"excel\", \"inputType\": \"file\", \"displayValueType\": \"fileName\", \"inputFileButtonText\": \"BROWSE\", \"showDownloadButton\": false, \"fieldSize\": [ 12, 12 ], \"size\": 10, \"styles\": { \"container\": { \"marginBottom\": \"15px\" }, \"label\": { \"marginBottom\": \"8px\" }, \"field\": {} } } } }, \"fetch\": { \"page\": \"createBulkAgentsTest_p0\" }, \"validation\": { \"enabled\": true, \"type\": \"onchange\" } }', 'Bulk Agents Test', 'Bulk Agents Test Create', 'BULK');

INSERT INTO `page_template` (`id`, `created_by`, `created_on`, `last_updated_by`, `last_updated_on`, `definition`, `description`, `title`, `type`) VALUES
('createBulkAgentsLive_p0', 'default.user', '2021-05-21 17:44:46.000000', 'default.user', '2021-05-21 17:44:46.000000', '{ \"schema\": { \"type\": \"object\", \"properties\": { \"banner\": { \"type\": \"string\" }, \"accountId\": { \"type\": \"string\", \"title\": \"\" }, \"uploadKey\": { \"title\": \"\", \"type\": \"array\", \"default\": [ \"uploadfile\" ] }, \"stepOne\": { \"type\": \"object\", \"title\": \"BULK_AGENTS_STEP_ONE_TITLE\", \"properties\": { \"textOne\": { \"type\": \"string\", \"title\": \"BULK_AGENTS_STEP_ONE_DESCRIPTION\", \"default\": \"\" }, \"template\": { \"title\": \"\", \"type\": \"string\", \"default\": \"\" } } }, \"stepTwo\": { \"type\": \"object\", \"title\": \"BULK_AGENTS_STEP_TWO_TITLE\", \"properties\": { \"textTwo\": { \"type\": \"string\", \"title\": \"BULK_AGENTS_STEP_TWO_DESCRIPTION\" } } }, \"stepThree\": { \"type\": \"object\", \"title\": \"BULK_AGENTS_STEP_THREE_TITLE\", \"properties\": { \"textThree\": { \"type\": \"string\", \"title\": \"BULK_AGENTS_STEP_THREE_DESCRIPTION\", \"default\": \"\" } } }, \"uploadfile\": { \"title\": \"\", \"type\": \"string\", \"default\": \"\" } } }, \"uiSchema\": { \"banner\": { \"ui:field\": \"infobanner\", \"ui:options\": { \"size\": 10, \"bannerTitle\": \"BULKAGENTS_INFOBANNER_TITLE\", \"bannerDescription\": \"BULKAGENTS_INFOTEXT\" } }, \"accountId\": { \"ui:field\": \"plaintext\", \"ui:options\": { \"styles\": { \"container\": { \"display\": \"none\" }, \"label\": {}, \"field\": {} } } }, \"uploadKey\": { \"ui:field\": \"plaintext\", \"ui:options\": { \"styles\": { \"container\": { \"display\": \"none\" }, \"label\": {}, \"field\": {} } } }, \"stepOne\": { \"textOne\": { \"ui:field\": \"plaintext\", \"ui:options\": { \"fieldSize\": [ 12, 12 ], \"size\": 6, \"styles\": { \"container\": { \"marginBottom\": \"15px\", \"marginRight\": \"20px\" }, \"label\": { \"marginBottom\": \"8px\" }, \"field\": {} } } }, \"template\": { \"ui:field\": \"wrapper\", \"ui:options\": { \"fieldSize\": [ 0, 12 ], \"size\": 6, \"type\": \"secondary\", \"component\": \"button\", \"isAccessTokenRequired\": true, \"event\": \"onClick\", \"downloadFile\": { \"name\": \"BulkUserCreationTemplate-generated.xls\", \"fileType\": \"application/vnd.ms-excel\", \"readType\": \"arrayBuffer\" }, \"template\": [ { \"name\": \"reqUrl\", \"value\": \"{serviceBaseUrl}/client/{clientId}/account/{accountId}/env/TEST/entity/bulkagents/type/PAGE_DATA_VALUE/download/getBulkAgentsExcel\" }, { \"name\": \"fileName\", \"value\": \"{clientId}-{accountId}-BulkUserCreationTemplate-generated.xls\" } ], \"textStyles\": { \"fontSize\": 13, \"fontWeight\": \"bold\", \"display\": \"inline-flex\", \"lineHeight\": \"25px\", \"verticalAlign\": \"top\" }, \"displayName\": \"Download\" } } }, \"stepTwo\": { \"textTwo\": { \"ui:field\": \"plaintext\", \"ui:options\": { \"fieldSize\": [ 7, 7 ], \"styles\": { \"container\": { \"marginBottom\": \"15px\" }, \"label\": { \"marginBottom\": \"8px\" }, \"field\": {} } } } }, \"stepThree\": { \"ui:options\": { \"disableSeparator\": true }, \"textThree\": { \"ui:field\": \"plaintext\", \"ui:options\": { \"fieldSize\": [ 7, 7 ], \"styles\": { \"container\": { \"marginBottom\": \"15px\" }, \"label\": { \"marginBottom\": \"8px\" }, \"field\": {} } } } }, \"uploadfile\": { \"ui:field\": \"text\", \"ui:options\": { \"fileReadType\": \"dataurl\", \"mediaType\": \"excel\", \"inputType\": \"file\", \"displayValueType\": \"fileName\", \"inputFileButtonText\": \"BROWSE\", \"showDownloadButton\": false, \"fieldSize\": [ 12, 12 ], \"size\": 10, \"styles\": { \"container\": { \"marginBottom\": \"15px\" }, \"label\": { \"marginBottom\": \"8px\" }, \"field\": {} } } } }, \"viewUiSchema\": { \"banner\": { \"ui:field\": \"infobanner\", \"ui:options\": { \"size\": 10, \"bannerTitle\": \"BULKAGENTS_INFOBANNER_TITLE\", \"bannerDescription\": \"BULKAGENTS_INFOTEXT\" } }, \"accountId\": { \"ui:field\": \"plaintext\", \"ui:options\": { \"isDisabled\": true, \"styles\": { \"container\": { \"display\": \"none\" }, \"label\": {}, \"field\": {} } } }, \"uploadKey\": { \"ui:field\": \"plaintext\", \"ui:options\": { \"styles\": { \"container\": { \"display\": \"none\" }, \"label\": {}, \"field\": {} } } }, \"stepOne\": { \"textOne\": { \"ui:field\": \"plaintext\", \"ui:options\": { \"isDisabled\": true, \"fieldSize\": [ 12, 12 ], \"size\": 6, \"styles\": { \"container\": { \"marginBottom\": \"15px\", \"marginRight\": \"20px\" }, \"label\": { \"marginBottom\": \"8px\" }, \"field\": {} } } }, \"template\": { \"ui:field\": \"wrapper\", \"ui:options\": { \"isDisabled\": true, \"fieldSize\": [ 0, 12 ], \"size\": 6, \"type\": \"secondary\", \"component\": \"button\", \"isAccessTokenRequired\": true, \"event\": \"onClick\", \"downloadFile\": { \"name\": \"BulkUserCreationTemplate-generated.xls\", \"fileType\": \"application/vnd.ms-excel\", \"readType\": \"arrayBuffer\" }, \"template\": [ { \"name\": \"reqUrl\", \"value\": \"{serviceBaseUrl}/client/{clientId}/account/{accountId}/env/TEST/entity/bulkAgents/type/PAGE_DATA_VALUE/download/getBulkAgentsExcel\" }, { \"name\": \"fileName\", \"value\": \"{clientId}-{accountId}-BulkUserCreationTemplate-generated.xls\" } ], \"textStyles\": { \"fontSize\": 13, \"fontWeight\": \"bold\", \"display\": \"inline-flex\", \"lineHeight\": \"25px\", \"verticalAlign\": \"top\" }, \"displayName\": \"Download\" } } }, \"stepTwo\": { \"textTwo\": { \"ui:field\": \"plaintext\", \"ui:options\": { \"fieldSize\": [ 7, 7 ], \"styles\": { \"container\": { \"marginBottom\": \"15px\" }, \"label\": { \"marginBottom\": \"8px\" }, \"field\": {} } } } }, \"stepThree\": { \"ui:options\": { \"disableSeparator\": true }, \"textThree\": { \"ui:field\": \"plaintext\", \"ui:options\": { \"isDisabled\": true, \"fieldSize\": [ 7, 7 ], \"styles\": { \"container\": { \"marginBottom\": \"15px\" }, \"label\": { \"marginBottom\": \"8px\" }, \"field\": {} } } } }, \"uploadfile\": { \"ui:field\": \"text\", \"ui:options\": { \"fileReadType\": \"dataurl\", \"mediaType\": \"excel\", \"inputType\": \"file\", \"displayValueType\": \"fileName\", \"inputFileButtonText\": \"BROWSE\", \"showDownloadButton\": false, \"fieldSize\": [ 12, 12 ], \"size\": 10, \"styles\": { \"container\": { \"marginBottom\": \"15px\" }, \"label\": { \"marginBottom\": \"8px\" }, \"field\": {} } } } }, \"fetch\": { \"page\": \"createBulkAgentsLive_p0\" }, \"validation\": { \"enabled\": true, \"type\": \"onchange\" } }', 'Bulk Agents Live', 'Bulk Agents Live Create', 'BULK');

UPDATE `activity_template` SET `entity_location` = '{\"BULK\": {\"entityIdLocation\": \"createBulkAgentsTest_p0.accountId\", \"entityLabelLocation\": \"createBulkAgentsTest_p0.accountId\"}, \"CREATE\": {\"entityIdLocation\": \"createUserTest_p0.tabsField.0.userName\", \"entityLabelLocation\": \"createUserTest_p0.tabsField.0.userName\"}, \"UPDATE\": {\"entityIdLocation\": \"updateUserTest_p0.tabsField.0.key\", \"entityLabelLocation\": \"updateUserTest_p0.tabsField.0.userName\"}}'
WHERE (`id` = 'userTest');

UPDATE `activity_template` SET `entity_location` = '{\"BULK\": {\"entityIdLocation\": \"createBulkAgentsLive_p0.accountId\", \"entityLabelLocation\": \"createBulkAgentsLive_p0.accountId\"}, \"CREATE\": {\"entityIdLocation\": \"createUserLive_p0.tabsField.0.userName\", \"entityLabelLocation\": \"createUserLive_p0.tabsField.0.userName\"}, \"UPDATE\": {\"entityIdLocation\": \"updateUserLive_p0.tabsField.0.key\", \"entityLabelLocation\": \"updateUserLive_p0.tabsField.0.userName\"}}'
WHERE (`id` = 'userLive');

INSERT INTO `activity_page` (`id`, `created_by`, `created_on`, `last_updated_by`, `last_updated_on`, `page_order`, `section_name`, `page_template_id`, `activity_template_id`) VALUES
('41', 'default.user', '2021-05-21 09:24:46.000000', 'default.user', '2021-05-21 09:24:46.000000', '1', '', 'createBulkAgentsTest_p0', 'userTest');

INSERT INTO `activity_page` (`id`, `created_by`, `created_on`, `last_updated_by`, `last_updated_on`, `page_order`, `section_name`, `page_template_id`, `activity_template_id`) VALUES
('42', 'default.user', '2021-05-21 09:24:46.000000', 'default.user', '2021-05-21 09:24:46.000000', '1', '', 'createBulkAgentsLive_p0', 'userLive');

INSERT INTO `service_urls` (`id`, `created_by`, `created_on`, `last_updated_by`, `last_updated_on`, `baseurl`, `env`, `headers`, `service_id`) VALUES
('14', 'default.user', '2019-06-13 12:13:02.000000', 'default.user', '2019-06-13 12:13:02.000000', 'http://localhost:8090/self-serve/api', 'LIVE', '{}', 'self');


UPDATE `activity_template` SET `configs` = '{\"subHeader\": {\"BULK\": {\"subHeaderTitle\": \"Create or Update existing Assist users in this screen\", \"subHeaderDescription\": \"To create or update one user, switch the bulk upload toggle to off. To create or update multiple users, switch the bulk upload toggle to on.\", \"allowedSubHeaderActions\": [\"BULK_UPLOAD\"]}, \"CREATE\": {\"subHeaderTitle\": \"Create or update existing Assist users in this screen\", \"subHeaderDescription\": \"To create or update one user, switch the bulk upload toggle to off. To create or update multiple users, switch the bulk upload toggle to on.\", \"allowedSubHeaderActions\": [\"BULK_UPLOAD\"]}, \"UPDATE\": {}}, \"publishType\": \"TEST_ONLY\", \"allowedActions\": {\"BULK\": [\"PUBLISH_TO_TEST\", \"BULK_UPLOAD\"], \"CREATE\": [\"PUBLISH_TO_TEST\", \"SAVE_AND_CLOSE\", \"EDIT\", \"BULK_UPLOAD\"], \"UPDATE\": [\"PUBLISH_TO_TEST\", \"EDIT\", \"SAVE_AND_CLOSE\"]}, \"preFetchInputValidation\": \"[^A-Za-z0-9-_ . ,:@]\"}'
WHERE (`id` = 'userTest');

UPDATE `activity_template` SET `configs` = '{\"subHeader\": {\"BULK\": {\"subHeaderTitle\": \"Create or Update existing Assist users in this screen.\", \"subHeaderDescription\": \"To create or update one user, switch the bulk upload toggle to off. To create or update multiple users, switch the bulk upload toggle to on.\", \"allowedSubHeaderActions\": [\"BULK_UPLOAD\"]}, \"CREATE\": {\"subHeaderTitle\": \"Create or update existing Assist users in this screen.\", \"subHeaderDescription\": \"To create or update one user, switch the bulk upload toggle to off. To create or update multiple users, switch the bulk upload toggle to on.\", \"allowedSubHeaderActions\": [\"BULK_UPLOAD\"]}, \"UPDATE\": {}}, \"publishType\": \"LIVE_ONLY\", \"allowedActions\": {\"BULK\": [\"PUBLISH_TO_LIVE\", \"BULK_UPLOAD\"], \"CREATE\": [\"PUBLISH_TO_LIVE\", \"SAVE_AND_CLOSE\", \"EDIT\", \"BULK_UPLOAD\"], \"UPDATE\": [\"PUBLISH_TO_LIVE\", \"EDIT\", \"SAVE_AND_CLOSE\"]}, \"preFetchInputValidation\": \"[^A-Za-z0-9-_ . ,:@]\"}'
WHERE (`id` = 'userLive');

-- bug fixes for Queueu
UPDATE `action` SET `response_definition` = '{ \"entityResponseTranslator\": \"var ApiResponse = function(_status, _message){ this.status = _status; this.message = _message; }; function translate(responseData) { try{ if(!responseData){ return new ApiResponse(\\\"ERROR\\\", \\\"Error while processing your request\\\"); } var uiData = JSON.parse(responseData); if(uiData != null && uiData.status == \\\"SUCCESS\\\"){ return new ApiResponse(uiData.status, uiData.status); } else { return new ApiResponse(\\\"ERROR\\\", parseMsg(uiData.errorMessage)); } }catch(e){ return new ApiResponse(\\\"ERROR\\\", \\\"Error while processing your request\\\"); } } function parseMsg(msg) { var retVal=msg||\\\"\\\"; if(msg.indexOf(\\\"Heuristic\\\")!=-1){retVal= \\\"Entity that you are trying to map is not available in the target environment. Please ensure the mapped entities are published to the target environment.\\\";} else if(msg.indexOf(\\\"entity.invalid.id\\\")!=-1){ retVal=\\\"Entity that you are trying to update is not available in the target environment. Contact [24]7.ai support team.\\\";} return retVal;} \" }' 
WHERE (`id` = '1');

UPDATE `fetch_config_template` SET `resp_api_to_resp_ui` = '{\"objectTranslator\": \"function translate(values){var entities={enum:[], enumNames:[]}; var list=[]; try{values=JSON.parse(values); list=JSON.parse(values.data.list);}catch(e){return e.toString();} list.forEach(function(item){ entities.enum.push(item.entityBaseData.entityId); entities.enumNames.push(item.entityBaseData.entityDisplayName||item.entityBaseData.entityId); }); return JSON.stringify(entities);}\"} '
WHERE (`id` = '10');

/* CENTRAL-7565: Rename Property Configurations fields */
UPDATE `activity_template` SET `description` = 'Context Validation', `title` = 'Context Validation'
WHERE (`id` = 'propertyValidation');

UPDATE `activity_template` SET `description` = 'Customer Context', `title` = 'Customer Context', `ui_schema` = '{ \"menuGroupName\": \"nav\", \"icon\": \"\", \"toolTip\": \"\", \"dashboard\": true, \"display_order\": 1, \"isActive\": true, \"uiOptions\": { \"entityList\": { \"entityHeader\": { \"label\": \"Name\", \"secondaryLabel\": \"Context Panel\" } } } }'
WHERE (`id` = 'propertyConfig');


/* Password field validation changes */

-- modify password

UPDATE `self_serve`.`action` SET `definition` = '{\"type\": \"REST\", \"method\": \"POST\", \"headers\": {\"Referer\": \"https://test-default.portal.assist.staging.247-inc.net/en/console\", \"Content-Type\": \"application/x-www-form-urlencoded\", \"GenerateAuthToken\": \"Bearer \"}, \"serviceId\": \"assist\", \"uploadFile\": false, \"idLookupKeys\": null, \"relativePath\": \"/en/hierarchy/rest/clients/${componentClientId}/accounts/${componentAccountId}/users/${entity}/password/modify?entityObj=${body}\", \"bodyDefinition\": {}, \"requestBodyKey\": null, \"restClientType\": null, \"idLookupRequired\": false, \"objectTranslator\": \"function translate(pageData, entityId, clientId, accountId, env, prefetch) { var uiData = JSON.parse(pageData).tabsField[0]; var apiData = { \\\"clientId\\\": \\\"nemo-client\\\" + clientId, \\\"key\\\": uiData.key, \\\"firstName\\\": uiData.firstName, \\\"userName\\\": uiData.userName, \\\"lastName\\\": uiData.lastName, \\\"displayName\\\": uiData.displayName, \\\"screenName\\\":uiData.displayName, \\\"email\\\": uiData.email, \\\"activeChatLimits\\\": uiData.activeChatLimits, \\\"autoAcceptChats\\\":uiData.autoAcceptChats, \\\"status\\\": uiData.status, \\\"teamId\\\": uiData.teamId, \\\"newPassword\\\": uiData.password.newPassword, \\\"confirmPassword\\\": uiData.password.confirmPassword, \\\"roleIds\\\": [ uiData.roleId ], \\\"skillLevels\\\": [], \\\"monitoringTeamIds\\\": [], \\\"authenticationType\\\": uiData.authenticationType, \\\"corruptUserMessage\\\": \\\"\\\", \\\"samlUserName\\\": \\\"\\\", \\\"metadataMap\\\": { \\\"employeeId\\\": uiData.employeeId } }; return JSON.stringify(apiData); }\", \"preFetchDefinition\": null, \"prefetchRequiredForLiveOnly\": false}'
WHERE (`id` = '49');

-- userTest create

UPDATE `self_serve`.`action` SET `definition` = '{\"type\": \"REST\", \"method\": \"POST\", \"headers\": {\"Referer\": \"https://test-default.portal.assist.staging.247-inc.net/en/console\", \"Content-Type\": \"application/x-www-form-urlencoded\", \"GenerateAuthToken\": \"Bearer \"}, \"serviceId\": \"assist\", \"uploadFile\": false, \"idLookupKeys\": null, \"relativePath\": \"/en/hierarchy/rest/clients/${componentClientId}/accounts/${componentAccountId}/agents?entityObj=${body}\", \"bodyDefinition\": {}, \"requestBodyKey\": null, \"restClientType\": null, \"idLookupRequired\": false, \"objectTranslator\": \"function translate(pageData, entityId, clientId, accountId, env, prefetch) { var uiData = JSON.parse(pageData).createUserTest_p0; var t0 = uiData.tabsField[ 0 ]; var t1 = uiData.tabsField[ 1 ]; var t2 = uiData.tabsField[ 2 ]; var roles = []; if (t0.roleId == \\\"superlead_role_id\\\") { roles.push(\\\"lead_role_id\\\", \\\"agent_role_id\\\"); } else { roles.push(t0.roleId); } var apiData = { \\\"key\\\": \\\"\\\", \\\"userName\\\": t0.userName, \\\"firstName\\\": t0.firstName, \\\"lastName\\\": t0.lastName, \\\"displayName\\\": t0.displayName, \\\"email\\\": t0.email, \\\"activeChatLimits\\\": t0.activeChatLimits, \\\"autoAcceptChats\\\": t0.autoAcceptChats, \\\"teamId\\\": t0.teamId, \\\"timezone\\\": \\\"GMT0\\\", \\\"roleIds\\\": roles, \\\"authenticationType\\\": t0.authenticationType || \\\"LOCAL_AUTH\\\", \\\"status\\\": t0.status, \\\"samlUserName\\\": \\\"\\\", \\\"skillLevels\\\": t1.ConfigMapper && t1.ConfigMapper.map(function (skill) { var skLvl = skill ? { skillId: skill.id, skillLevelId: skill.id + \\\"-\\\" + (skill.key ? skill.key.toUpperCase() : \\\"HIGH\\\") } : []; return skLvl; }) || [], \\\"monitoringTeamIds\\\": t2.ConfigMapper && t2.ConfigMapper.map(function (team) { return ({ teamId: team.id }) }) || [], \\\"metadataMap\\\": { \\\"employeeId\\\": t0.employeeId } }; if (t0.password.newPassword !== \\\"\\\") { apiData.newPassword = t0.password.newPassword; apiData.confirmPassword = t0.password.confirmPassword; } return JSON.stringify(apiData); }\", \"preFetchDefinition\": {}}'
WHERE (`id` = '36');

-- userLive create

UPDATE `action` SET `definition` = '{\"type\": \"REST\", \"method\": \"POST\", \"headers\": {\"Referer\": \"https://test-default.portal.assist.staging.247-inc.net/en/console\", \"Content-Type\": \"application/x-www-form-urlencoded\", \"GenerateAuthToken\": \"Bearer \"}, \"serviceId\": \"assist\", \"uploadFile\": false, \"idLookupKeys\": null, \"relativePath\": \"/en/hierarchy/rest/clients/${componentClientId}/accounts/${componentAccountId}/agents?entityObj=${body}\", \"bodyDefinition\": {}, \"requestBodyKey\": null, \"restClientType\": null, \"idLookupRequired\": false, \"objectTranslator\": \"function translate(pageData, entityId, clientId, accountId, env, prefetch) { var uiData = JSON.parse(pageData).createUserLive_p0; var t0 = uiData.tabsField[ 0 ]; var t1 = uiData.tabsField[ 1 ]; var t2 = uiData.tabsField[ 2 ]; var roles = []; if (t0.roleId == \\\"superlead_role_id\\\") { roles.push(\\\"lead_role_id\\\", \\\"agent_role_id\\\"); } else { roles.push(t0.roleId); } var apiData = { \\\"key\\\": \\\"\\\", \\\"userName\\\": t0.userName, \\\"firstName\\\": t0.firstName, \\\"lastName\\\": t0.lastName, \\\"displayName\\\": t0.displayName, \\\"email\\\": t0.email, \\\"activeChatLimits\\\": t0.activeChatLimits, \\\"autoAcceptChats\\\": t0.autoAcceptChats, \\\"teamId\\\": t0.teamId, \\\"timezone\\\": \\\"GMT0\\\", \\\"roleIds\\\": roles, \\\"authenticationType\\\": t0.authenticationType || \\\"LOCAL_AUTH\\\", \\\"status\\\": t0.status, \\\"samlUserName\\\": \\\"\\\", \\\"skillLevels\\\": t1.ConfigMapper && t1.ConfigMapper.map(function (skill) { var skLvl = skill ? { skillId: skill.id, skillLevelId: skill.id + \\\"-\\\" + (skill.key ? skill.key.toUpperCase() : \\\"HIGH\\\") } : []; return skLvl; }) || [], \\\"monitoringTeamIds\\\": t2.ConfigMapper && t2.ConfigMapper.map(function (team) { return ({ teamId: team.id }) }) || [], \\\"metadataMap\\\": { \\\"employeeId\\\": t0.employeeId } }; if (t0.password.newPassword !== \\\"\\\") { apiData.newPassword = t0.password.newPassword; apiData.confirmPassword = t0.password.confirmPassword; } return JSON.stringify(apiData); }\", \"preFetchDefinition\": {}}'
WHERE (`id` = '38');

UPDATE `fetch_config_template` SET `resp_api_to_resp_ui` = '{\"objectTranslator\": \"function translate(values, entity, context) { try { context  = JSON.parse(context); var date = new Date(); var dateString = date.toLocaleDateString(\\\"en-CA\\\", {year: \\\"2-digit\\\", month: \\\"2-digit\\\", day: \\\"2-digit\\\"}).replaceAll(\\\"-\\\", \\\"\\\"); var timeString = (\\\"0\\\" + date.getHours()).slice(-2) + \\\"\\\" + date.getMinutes() + \\\"\\\" + date.getSeconds(); var accountId = \\\"BulkUpload\\\" + \\\"_\\\" + dateString + \\\"_\\\" + timeString; var uiData = { \\\"accountId\\\": accountId }; } catch (e) {} return JSON.stringify(uiData); }\"}'
WHERE (`id` = '68');

UPDATE `fetch_config_template` SET `resp_api_to_resp_ui` = '{\"objectTranslator\": \"function translate(values, entity, context) { try { context  = JSON.parse(context); var date = new Date(); var dateString = date.toLocaleDateString(\\\"en-CA\\\", {year: \\\"2-digit\\\", month: \\\"2-digit\\\", day: \\\"2-digit\\\"}).replaceAll(\\\"-\\\", \\\"\\\"); var timeString = (\\\"0\\\" + date.getHours()).slice(-2) + \\\"\\\" + date.getMinutes() + \\\"\\\" + date.getSeconds(); var accountId = \\\"BulkUpload\\\" + \\\"_\\\" + dateString + \\\"_\\\" + timeString; var uiData = { \\\"accountId\\\": accountId }; } catch (e) {} return JSON.stringify(uiData); }\"}'
WHERE (`id` = '69');

UPDATE `activity_template` SET `configs` = '{\"subHeader\": {\"BULK\": {\"subHeaderTitle\": \"Create or Update existing Assist users in this screen\", \"subHeaderDescription\": \"To create or update one user, switch the bulk upload toggle to off.\", \"allowedSubHeaderActions\": [\"BULK_UPLOAD\"]}, \"CREATE\": {\"subHeaderTitle\": \"Create or Update existing Assist users in this screen\", \"subHeaderDescription\": \"To create or update multiple users, switch the bulk upload toggle to on.\", \"allowedSubHeaderActions\": [\"BULK_UPLOAD\"]}, \"UPDATE\": {}}, \"publishType\": \"TEST_ONLY\", \"allowedActions\": {\"BULK\": [\"PUBLISH_TO_TEST\", \"BULK_UPLOAD\"], \"CREATE\": [\"PUBLISH_TO_TEST\", \"SAVE_AND_CLOSE\", \"EDIT\", \"BULK_UPLOAD\"], \"UPDATE\": [\"PUBLISH_TO_TEST\", \"EDIT\", \"SAVE_AND_CLOSE\"]}, \"preFetchInputValidation\": \"[^A-Za-z0-9-_ . ,:@]\"}'
WHERE (`id` = 'userTest');

UPDATE `activity_template` SET `configs` = '{\"subHeader\": {\"BULK\": {\"subHeaderTitle\": \"Create or Update existing Assist users in this screen.\", \"subHeaderDescription\": \"To create or update one user, switch the bulk upload toggle to off.\", \"allowedSubHeaderActions\": [\"BULK_UPLOAD\"]}, \"CREATE\": {\"subHeaderTitle\": \"Create or Update existing Assist users in this screen.\", \"subHeaderDescription\": \"To create or update multiple users, switch the bulk upload toggle to on.\", \"allowedSubHeaderActions\": [\"BULK_UPLOAD\"]}, \"UPDATE\": {}}, \"publishType\": \"LIVE_ONLY\", \"allowedActions\": {\"BULK\": [\"PUBLISH_TO_LIVE\", \"BULK_UPLOAD\"], \"CREATE\": [\"PUBLISH_TO_LIVE\", \"SAVE_AND_CLOSE\", \"EDIT\", \"BULK_UPLOAD\"], \"UPDATE\": [\"PUBLISH_TO_LIVE\", \"EDIT\", \"SAVE_AND_CLOSE\"]}, \"preFetchInputValidation\": \"[^A-Za-z0-9-_ . ,:@]\"}'
WHERE (`id` = 'userLive');

UPDATE `activity_template` SET `entity_location` = '{\"BULK\": {\"entityIdLocation\": \"createBulkAgentsTest_p0.accountId\", \"entityLabelLocation\": \"createBulkAgentsTest_p0.accountId\"}, \"CREATE\": {\"entityIdLocation\": \"createUserTest_p0.tabsField.0.userName\", \"entityLabelLocation\": \"createUserTest_p0.tabsField.0.userName\"}, \"UPDATE\": {\"entityIdLocation\": \"updateUserTest_p0.tabsField.0.userName\", \"entityLabelLocation\": \"updateUserTest_p0.tabsField.0.userName\"}}'
WHERE (`id` = 'userTest');

UPDATE `activity_template` SET `entity_location` = '{\"BULK\": {\"entityIdLocation\": \"createBulkAgentsLive_p0.accountId\", \"entityLabelLocation\": \"createBulkAgentsLive_p0.accountId\"}, \"CREATE\": {\"entityIdLocation\": \"createUserLive_p0.tabsField.0.userName\", \"entityLabelLocation\": \"createUserLive_p0.tabsField.0.userName\"}, \"UPDATE\": {\"entityIdLocation\": \"updateUserLive_p0.tabsField.0.userName\", \"entityLabelLocation\": \"updateUserLive_p0.tabsField.0.userName\"}}'
WHERE (`id` = 'userLive');

UPDATE `config` SET `value` = '{\"refreshIntervalInSeconds\": 30, \"showRefreshButton\": false, \"autoRefreshHelpType\": \"NEXT_AUTO_REFRESH_VISUALIZATION_TIMER\"}'
WHERE (`code` = 'promotion_monitor_configs');

UPDATE `fetch_config_template` SET `resp_api_to_resp_ui` = '{ \"objectTranslator\": \"function translate(apiData) { var uiData = { \\\"tabsField\\\": [{}, {}, {}] }; var u = JSON.parse(apiData).items; var t0 = uiData.tabsField[0]; t0.key = u.key; t0.userName = u.userName; t0.employeeId = u.metadataMap && u.metadataMap.employeeId; t0.firstName = u.firstName; t0.lastName = u.lastName; t0.displayName = u.displayName; t0.email = u.email; t0.activeChatLimits = u.activeChatLimits != undefined ? u.activeChatLimits.toString() : 1; t0.autoAcceptChats = u.autoAcceptChats != undefined ? u.autoAcceptChats.toString() : \\\"true\\\"; t0.teamId = u.teamId; if (u.roleIds.length > 1) { t0.roleId = \\\"superlead_role_id\\\"; } else { t0.roleId = u.roleIds.toString(); } t0.authenticationType = u.authenticationType; if (u.authenticationType == \\\"REMOTE_AUTH\\\") { t0.samlUserName = u.samlUserName !== null ? u.samlUserName : \\\"\\\"; } t0.status = u.status; var t1 = uiData.tabsField[1]; t1.ConfigMapper = {}; t1.ConfigMapper = u.skillLevels.map(function (sklvl) { var keywords = sklvl.skillLevelId.split(\\\"-\\\"); var key = keywords[keywords.length - 1].toUpperCase(); return ({ id: sklvl.skillId, name: sklvl.skillId, key: key }) }); var t2 = uiData.tabsField[2]; t2.ConfigMapper = {}; t2.ConfigMapper = u.monitoringTeamIds ? u.monitoringTeamIds.map(function (tId) { return ({ id: tId.teamId, name: tId.teamId, key: \\\"\\\" }) }) : []; return JSON.stringify(uiData); } \" }' 
WHERE (`id` = '51');

-- mailer config fix
UPDATE `action` SET `definition` = '{ \"type\": \"REST\", \"method\": \"POST\", \"headers\": { \"Content-Type\": \"application/x-www-form-urlencoded\", \"GenerateAuthToken\": \"Bearer \" }, \"serviceId\": \"assist\", \"uploadFile\": false, \"idLookupKeys\": null, \"relativePath\": \"/en/hierarchy/rest/clients/${componentClientId}/accounts/${componentAccountId}/mailerconfig\", \"bodyDefinition\": {}, \"requestBodyKey\": \"entityObj\", \"restClientType\": \"REST_TEMPLATE\", \"idLookupRequired\": false, \"objectTranslator\": \"function translate(pageData, entityId, clientId, accountId, env) { pageData = JSON.parse(pageData).createMailer_p0; var templateConfigObj = {}; var apiData = {}; for (var i = 0; i < pageData.tabsField[0].baseConfigurationAccordionTabs.length; i++) { for (var key in pageData.tabsField[0].baseConfigurationAccordionTabs[i]) { templateConfigObj[key] = pageData.tabsField[0].baseConfigurationAccordionTabs[i][key]; } } var templateConfig = {}; templateConfig.header = templateConfigObj.extendedSubject; templateConfig.LogoURL = templateConfigObj.companyLogo; templateConfig.greetingMessage = templateConfigObj.greetings; templateConfig.signOffMessage = templateConfigObj.signOffMsg; templateConfig.signatureMessage = templateConfigObj.signatureText; templateConfig.headerMessage = templateConfigObj.message; templateConfig.c2CMessage = templateConfigObj.clickToChatMsg; templateConfig.c2CButtonURL = templateConfigObj.buttonUrl; templateConfig.c2CButtonText = templateConfigObj.buttonLabel; templateConfig.footerMessage = templateConfigObj.footer; templateConfig.logoThemeBtnCol = templateConfigObj.logoBackground; templateConfig.footerLinkOne = templateConfigObj.showFooter; templateConfig.footerLinkOneText = templateConfigObj.label; templateConfig.footerLinkOneURL = templateConfigObj.linlUrl; templateConfig.logoPosition = templateConfigObj.logoPosition; templateConfig.themeName = templateConfigObj.theme; templateConfig.themeBgCol = templateConfigObj.themeSelector.bgColor; templateConfig.themeLinkCol = templateConfigObj.themeSelector.linkColor; templateConfig.themeBtnCol = templateConfigObj.themeSelector.buttonColor; templateConfig.appendName = templateConfigObj.showCustomerName; templateConfig.appendClickToChat = templateConfigObj.showClick; templateConfig.appendSignOff = templateConfigObj.showSignOff; templateConfig.appendSignature = templateConfigObj.showSignature; templateConfig.contextDetailsText = \\\"null\\\"; var footer = templateConfigObj.footer; var labels = [\\\"One\\\", \\\"Two\\\", \\\"Three\\\", \\\"Four\\\", \\\"Five\\\"]; for (var i = 0; i < labels.length; i++) { var label = labels[i]; if (footer[i] !== undefined) { templateConfig[\\\"footer\\\" + label] = footer[i].showFooter; templateConfig[\\\"footerLink\\\" + label + \\\"Text\\\"] = footer[i].label; templateConfig[\\\"footerLink\\\" + label + \\\"URL\\\"] = footer[i].linkUrl; } else { templateConfig[\\\"footer\\\" + label] = false; templateConfig[\\\"footerLink\\\" + label + \\\"Text\\\"] = \\\"\\\"; templateConfig[\\\"footerLink\\\" + label + \\\"URL\\\"] = \\\"\\\"; } } templateConfig.footerMessage = templateConfigObj.footerMessage; templateConfig.appendAgentDetails = false; templateConfig.appendContextDetails = false; apiData.templateConfig = templateConfig; apiData.isSSL = pageData.mailConfigAccordionTabs[0].isSsl === \\\"true\\\"; apiData.bccId = pageData.mailConfigAccordionTabs[0].bccEmail; apiData.fromName = pageData.mailConfigAccordionTabs[0].fromName; apiData.smtpPort = pageData.mailConfigAccordionTabs[0].smtpPort; apiData.smtpHost = pageData.mailConfigAccordionTabs[0].smtpHost; apiData.key = pageData.mailConfigAccordionTabs[0].key; apiData.configKey = pageData.mailConfigAccordionTabs[0].configKey; apiData.debugEnabled = pageData.mailConfigAccordionTabs[0].debugEnable === \\\"true\\\"; apiData.fromEmail = pageData.mailConfigAccordionTabs[0].fromEmailId; apiData.mailSubject = pageData.mailConfigAccordionTabs[0].mailSubject; apiData.fromPassword = pageData.mailConfigAccordionTabs[0].fromPassword; apiData.clientId = \\\"nemo-client-\\\" + clientId; apiData.accountId = accountId + \\\"-account-default\\\"; apiData.mailOpeningLines = \\\"\\\"; apiData.mailSalutation = \\\"\\\"; return JSON.stringify(apiData); }\", \"preFetchDefinition\": null }' 
WHERE (`id` = '32');

UPDATE `action` SET `definition` = '{ \"type\": \"REST\", \"method\": \"POST\", \"headers\": { \"Content-Type\": \"application/x-www-form-urlencoded\", \"GenerateAuthToken\": \"Bearer \" }, \"serviceId\": \"assist\", \"uploadFile\": false, \"idLookupKeys\": \"updateMailer_p0.key\", \"relativePath\": \"/en/hierarchy/rest/clients/${componentClientId}/accounts/${componentAccountId}/mailerconfig/update\", \"bodyDefinition\": {}, \"requestBodyKey\": \"entityObj\", \"restClientType\": \"REST_TEMPLATE\", \"idLookupRequired\": true, \"objectTranslator\": \"function translate(pageData, entityId, clientId, accountId, env, prefetch, liveEntityIdMap) { pageData = JSON.parse(pageData).updateMailer_p0; var templateConfigObj = {}; var apiData = {}; for (var i = 0; i < pageData.tabsField[0].baseConfigurationAccordionTabs.length; i++) { for (var key in pageData.tabsField[0].baseConfigurationAccordionTabs[i]) { templateConfigObj[key] = pageData.tabsField[0].baseConfigurationAccordionTabs[i][key]; } } var templateConfig = {}; templateConfig.header = templateConfigObj.extendedSubject; templateConfig.LogoURL = templateConfigObj.companyLogo; templateConfig.greetingMessage = templateConfigObj.greetings; templateConfig.signOffMessage = templateConfigObj.signOffMsg; templateConfig.signatureMessage = templateConfigObj.signatureText; templateConfig.headerMessage = templateConfigObj.message; templateConfig.c2CMessage = templateConfigObj.clickToChatMsg; templateConfig.c2CButtonURL = templateConfigObj.buttonUrl; templateConfig.c2CButtonText = templateConfigObj.buttonLabel; templateConfig.logoThemeBtnCol = templateConfigObj.logoBackground; templateConfig.logoPosition = templateConfigObj.logoPosition; templateConfig.themeName = templateConfigObj.themeSelector.theme; templateConfig.themeBgCol = templateConfigObj.themeSelector.bgColor; templateConfig.themeLinkCol = templateConfigObj.themeSelector.linkColor; templateConfig.themeBtnCol = templateConfigObj.themeSelector.buttonColor; templateConfig.appendName = templateConfigObj.showCustomerName; templateConfig.appendClickToChat = templateConfigObj.showClick; templateConfig.appendSignOff = templateConfigObj.showSignOff; templateConfig.appendSignature = templateConfigObj.showSignature; templateConfig.contextDetailsText = \\\"null\\\"; var footer = templateConfigObj.footer; var labels = [\\\"One\\\", \\\"Two\\\", \\\"Three\\\", \\\"Four\\\", \\\"Five\\\"]; for (var i = 0; i < labels.length; i++) { var label = labels[i]; if (footer[i] !== undefined) { templateConfig[\\\"footer\\\" + label] = footer[i].showFooter; templateConfig[\\\"footerLink\\\" + label + \\\"Text\\\"] = footer[i].label; templateConfig[\\\"footerLink\\\" + label + \\\"URL\\\"] = footer[i].linkUrl; } else { templateConfig[\\\"footer\\\" + label] = false; templateConfig[\\\"footerLink\\\" + label + \\\"Text\\\"] = \\\"\\\"; templateConfig[\\\"footerLink\\\" + label + \\\"URL\\\"] = \\\"\\\"; } } templateConfig.footerMessage = templateConfigObj.footerMessage; templateConfig.appendAgentDetails = false; templateConfig.appendContextDetails = false; apiData.templateConfig = templateConfig; apiData.isSSL = pageData.mailConfigAccordionTabs[0].isSsl === \\\"true\\\"; apiData.bccId = pageData.mailConfigAccordionTabs[0].bccEmail; apiData.fromName = pageData.mailConfigAccordionTabs[0].fromName; apiData.smtpPort = pageData.mailConfigAccordionTabs[0].smtpPort; apiData.smtpHost = pageData.mailConfigAccordionTabs[0].smtpHost; apiData.configKey = pageData.mailConfigAccordionTabs[0].configKey; apiData.debugEnabled = pageData.mailConfigAccordionTabs[0].debugEnable === \\\"true\\\"; apiData.fromEmail = pageData.mailConfigAccordionTabs[0].fromEmailId; apiData.mailSubject = pageData.mailConfigAccordionTabs[0].mailSubject; apiData.fromPassword = pageData.mailConfigAccordionTabs[0].fromPassword; apiData.clientId = \\\"nemo-client-\\\" + clientId; apiData.accountId = accountId + \\\"-account-default\\\"; apiData.mailOpeningLines = \\\"\\\"; apiData.mailSalutation = \\\"\\\"; if (env === \\\"LIVE\\\") { var key = getLiveKey(prefetch, liveEntityIdMap, {label:apiData.configKey}, \\\"updateMailer_p0.key\\\"); if (key !== \\\"\\\") { apiData.key = key; } else { apiData.key = pageData.mailConfigAccordionTabs[0].key; } } else { apiData.key = pageData.mailConfigAccordionTabs[0].key; } return JSON.stringify(apiData); } function getLiveKey(prefetch, liveEntityIdMap, testEntity, liveEntityIdKey) { if (liveEntityIdMap !== null && liveEntityIdMap !== undefined) { var liveEntityId = JSON.parse(liveEntityIdMap); if (Object.keys(liveEntityId).length !== 0) { return liveEntityId[liveEntityIdKey]; } else { return getLiveKeyFromPrefetch(prefetch, testEntity); } }else{ return getLiveKeyFromPrefetch(prefetch, testEntity); } } function getLiveKeyFromPrefetch(prefetch , testEntity){ var listLiveData = JSON.parse(prefetch).listLiveData; var key = \\\"\\\"; for (var i = 0; i < listLiveData.length; i++) { if(testEntity.secondaryLabel !== undefined){ if (listLiveData[i].label === testEntity.label && listLiveData[i].secondaryLabel === testEntity.secondaryLabel ) { key = listLiveData[i].name; break; } }else{ if (listLiveData[i].label === testEntity.label) { key = listLiveData[i].name; break; } }} return key; }\", \"preFetchDefinition\": { \"listLiveData\": { \"env\": \"LIVE\", \"fetchFor\": \"listMailerConfig\", \"fetchType\": \"ENTITY_LISTING\" } }, \"prefetchRequiredForLiveOnly\": true }' 
WHERE (`id` = '33');

UPDATE `activity_template` SET `entity_location` = '{\"BULK\": {\"entityIdLocation\": \"createBulkAgentsTest_p0.accountId\", \"entityLabelLocation\": \"createBulkAgentsTest_p0.accountId\"}, \"CREATE\": {\"entityIdLocation\": \"createUserTest_p0.tabsField.0.userName\", \"entityLabelLocation\": \"createUserTest_p0.tabsField.0.userName\"}, \"UPDATE\": {\"entityIdLocation\": \"updateUserTest_p0.tabsField.0.key\", \"entityLabelLocation\": \"updateUserTest_p0.tabsField.0.userName\"}}' 
WHERE (`id` = 'userTest');

UPDATE `activity_template` SET `entity_location` = '{\"BULK\": {\"entityIdLocation\": \"createBulkAgentsLive_p0.accountId\", \"entityLabelLocation\": \"createBulkAgentsLive_p0.accountId\"}, \"CREATE\": {\"entityIdLocation\": \"createUserLive_p0.tabsField.0.userName\", \"entityLabelLocation\": \"createUserLive_p0.tabsField.0.userName\"}, \"UPDATE\": {\"entityIdLocation\": \"updateUserLive_p0.tabsField.0.key\", \"entityLabelLocation\": \"updateUserLive_p0.tabsField.0.userName\"}}' 
WHERE (`id` = 'userLive');

UPDATE `activity_template` SET `configs` = '{ \"pageSize\": 100, \"subHeader\": { \"BULK\": { \"subHeaderTitle\": \"Create or Update existing Assist users in this screen.\", \"subHeaderDescription\": \"To create or update one user, switch the bulk upload toggle to off.\", \"allowedSubHeaderActions\": [ \"BULK_UPLOAD\" ] }, \"CREATE\": { \"subHeaderTitle\": \"Create or Update existing Assist users in this screen.\", \"subHeaderDescription\": \"To create or update multiple users, switch the bulk upload toggle to on.\", \"allowedSubHeaderActions\": [ \"BULK_UPLOAD\" ] }, \"UPDATE\": {} }, \"publishType\": \"TEST_ONLY\", \"allowedActions\": { \"BULK\": [ \"PUBLISH_TO_TEST\", \"BULK_UPLOAD\" ], \"CREATE\": [ \"PUBLISH_TO_TEST\", \"SAVE_AND_CLOSE\", \"EDIT\", \"BULK_UPLOAD\" ], \"UPDATE\": [ \"PUBLISH_TO_TEST\", \"EDIT\", \"SAVE_AND_CLOSE\" ] }, \"isPaginationEnabled\": true, \"preFetchInputValidation\": \"[^A-Za-z0-9-_ . ,:@]\" }' 
WHERE (`id` = 'userTest');

UPDATE `activity_template` SET `configs` = '{ \"pageSize\": 100, \"subHeader\": { \"BULK\": { \"subHeaderTitle\": \"Create or Update existing Assist users in this screen.\", \"subHeaderDescription\": \"To create or update one user, switch the bulk upload toggle to off.\", \"allowedSubHeaderActions\": [ \"BULK_UPLOAD\" ] }, \"CREATE\": { \"subHeaderTitle\": \"Create or Update existing Assist users in this screen.\", \"subHeaderDescription\": \"To create or update multiple users, switch the bulk upload toggle to on.\", \"allowedSubHeaderActions\": [ \"BULK_UPLOAD\" ] }, \"UPDATE\": {} }, \"publishType\": \"LIVE_ONLY\", \"allowedActions\": { \"BULK\": [ \"PUBLISH_TO_LIVE\", \"BULK_UPLOAD\" ], \"CREATE\": [ \"PUBLISH_TO_LIVE\", \"SAVE_AND_CLOSE\", \"EDIT\", \"BULK_UPLOAD\" ], \"UPDATE\": [ \"PUBLISH_TO_LIVE\", \"EDIT\", \"SAVE_AND_CLOSE\" ] }, \"isPaginationEnabled\": true, \"preFetchInputValidation\": \"[^A-Za-z0-9-_ . ,:@]\" }' 
WHERE (`id` = 'userLive');

UPDATE `fetch_config_template` SET `params` = '{\"contexts\": [\"clientId\", \"accountId\", \"componentClientId\", \"componentAccountId\", \"pageNumber\"], \"constants\": {\"pageNumber\": \"0\", \"pageSize\": 100}, \"queryParams\": {\"queryCriteria\": {\"pageNumber\": \"${pageNumber}\", \"pageSize\": \"${pageSize}\"}}}'
WHERE (`id` = '55');

UPDATE `fetch_config_template` SET `resp_api_to_resp_ui` = '{\"objectTranslator\": \"function translate(values) { var entities=[]; var list=[]; try{ values=JSON.parse(values); list=values.data.items; } catch(e){ return e.toString(); } list.forEach(function(item){ entities.push({ name:item.key, label: item.userName, labelState: item.status }); }); var metaData={\\\"totalCount\\\":values.data.count}; return JSON.stringify({\\\"data\\\":entities, \\\"metaData\\\":metaData});}\"}'
WHERE (`id` = '55');

UPDATE `config` SET `value` = '\"updateSmartResponse_p0,listSkill,listUser\"' 
WHERE (`code` = 'exclude_cache_fetchfor');

UPDATE `action` SET `definition` = '{ \"type\": \"REST\", \"method\": \"POST\", \"headers\": { \"referer\": \"https://salesdemo.portal.assist.staging.247-inc.net/en/\", \"uploadFile\": \"true\", \"Content-Type\": \"multipart/form-data\", \"GenerateAuthToken\": \"Bearer \" }, \"serviceId\": \"assist\", \"uploadFile\": true, \"idLookupKeys\": null, \"relativePath\": \"/en/hierarchy/rest/clients/${componentClientId}/accounts/${componentAccountId}/agents/upload/${uploadOption}\", \"bodyDefinition\": {}, \"requestBodyKey\": \"uploadfile\", \"restClientType\": \"MULTIPART_FILE\", \"idLookupRequired\": false, \"objectTranslator\": \"function translate(pageData) { var uiData = JSON.parse(pageData).createBulkAgentsTest_p0 ; var uploadOption = uiData.stepTwo.selectType; return uploadOption; }\", \"preFetchDefinition\": null, \"getPathParamFromPageData\": true, \"prefetchRequiredForLiveOnly\": false }' 
WHERE (`id` = '52');

UPDATE `action` SET `definition` = '{ \"type\": \"REST\", \"method\": \"POST\", \"headers\": { \"referer\": \"https://salesdemo.portal.assist.staging.247-inc.net/en/\", \"uploadFile\": \"true\", \"Content-Type\": \"multipart/form-data\", \"GenerateAuthToken\": \"Bearer \" }, \"serviceId\": \"assist\", \"uploadFile\": true, \"idLookupKeys\": null, \"relativePath\": \"/en/hierarchy/rest/clients/${componentClientId}/accounts/${componentAccountId}/agents/upload/${uploadOption}\", \"bodyDefinition\": {}, \"requestBodyKey\": \"uploadfile\", \"restClientType\": \"MULTIPART_FILE\", \"idLookupRequired\": false, \"objectTranslator\": \"function translate(pageData) { var uiData = JSON.parse(pageData).createBulkAgentsLive_p0 ; var uploadOption = uiData.stepTwo.selectType; return uploadOption; }\", \"preFetchDefinition\": null, \"getPathParamFromPageData\": true, \"prefetchRequiredForLiveOnly\": false }' 
WHERE (`id` = '54');

UPDATE `action` SET `response_definition` = '{\"entityResponseTranslator\": \"var ApiResponse = function(_status, _message) { this.status = _status; this.message = _message; }; function translate(responseData) { try { var responseIntermediate = JSON.parse(responseData); var response = JSON.parse(responseIntermediate); if (response.status === \\\"completed\\\") { return new ApiResponse(\\\"SUCCESS\\\", response.uploadId); } else if (response.status === \\\"empty\\\") { return new ApiResponse(\\\"ERROR_STOP\\\", \\\"No records found to add agents\\\"); } else if (response.status === \\\"upload_error\\\") { return new ApiResponse(\\\"ERROR_STOP\\\", \\\"Some erroneous records were identified during the last operation.Please click on View Configurations, download excel file & check Errors column to review failed records.\\\"); } else if (response.status === \\\"validation_error\\\") { return new ApiResponse(\\\"ERROR_STOP\\\", \\\"Validation failed for some records during the last operation. Please click on View Configurations, download excel file & check Errors column to review failed records.\\\"); } else return new ApiResponse(\\\"ERROR\\\", JSON.stringify(response)) } catch (e) { return new ApiResponse(\\\"ERROR\\\", \\\"Error while processing your request\\\"); } }\"}' 
WHERE (`id` = '53');

UPDATE `action` SET `response_definition` = '{\"entityResponseTranslator\": \"var ApiResponse = function(_status, _message) { this.status = _status; this.message = _message; }; function translate(responseData) { try { var responseIntermediate = JSON.parse(responseData); var response = JSON.parse(responseIntermediate); if (response.status === \\\"completed\\\") { return new ApiResponse(\\\"SUCCESS\\\", response.uploadId); } else if (response.status === \\\"empty\\\") { return new ApiResponse(\\\"ERROR_STOP\\\", \\\"No records found to add agents\\\"); } else if (response.status === \\\"upload_error\\\") { return new ApiResponse(\\\"ERROR_STOP\\\", \\\"Some erroneous records were identified during the last operation. Please click on View Configurations, download excel file & check Errors column to review failed records.\\\"); } else if (response.status === \\\"validation_error\\\") { return new ApiResponse(\\\"ERROR_STOP\\\", \\\"Validation failed for some records during the last operation. Please click on View Configurations, download excel file & check Errors column to review failed records.\\\"); } else return new ApiResponse(\\\"ERROR\\\", JSON.stringify(response)) } catch (e) { return new ApiResponse(\\\"ERROR\\\", \\\"Error while processing your request\\\"); } }\"}'
WHERE (`id` = '55');

UPDATE `action` SET `response_definition` = '{ \"entityResponseTranslator\": \"var ApiResponse = function(_status, _message){ this.status = _status; this.message = _message; }; function translate(responseData) { try{ if(!responseData){ return new ApiResponse(\'ERROR\', \'Error while processing your request, Please retry again or contact Administrator, if issue persistst\'); } var uiData = JSON.parse(responseData); if(uiData != null && uiData.status == \'SUCCESS\' ){ return new ApiResponse(uiData.status); } else { return new ApiResponse(\'ERROR\',\'Error while processing your request, Please retry again or contact Administrator, if issue persists\'); } }catch(e){ return new ApiResponse(\'ERROR\', \'Error while processing your request, Please retry again or contact Administrator, if issue persists\'); } }\" }' 
WHERE (`id` = '13');
UPDATE `action` SET `response_definition` = '{\"entityResponseTranslator\": \"var ApiResponse = function(_status, _message){ this.status = _status; this.message = _message; }; function translate(responseData) { try{ if(!responseData){ return new ApiResponse(\'ERROR\', \'Error while processing your request\'); } var uiData = JSON.parse(responseData); if(uiData != null && uiData.status == \'SUCCESS\' ){ return new ApiResponse(uiData.status); } else { return new ApiResponse(\'ERROR\', \'Error while processing your request, Please retry again or contact Administrator, if issue persists\'); } }catch(e){ return new ApiResponse(\'ERROR\', \'Error while processing your request, Please retry again or contact Administrator, if issue persists\'); } }\"}' 
WHERE (`id` = '15');


UPDATE `entity_template` SET `name` = 'Context Validations' WHERE (`id` = '19');
UPDATE `entity_template` SET `name` = 'Customer Context' WHERE (`id` = '13');


-- removing tags

DELETE FROM `activity_page` WHERE (`id` = '1');
DELETE FROM `activity_page` WHERE (`id` = '4');

DELETE FROM `page_data` where page_template_id ='createTags_p0';
DELETE FROM `page_data` where page_template_id ='updateTags_p0';

DELETE FROM `action_workflow` WHERE (`id` = '2');
DELETE FROM `action_workflow` WHERE (`id` = '4');

DELETE FROM `action_execution_monitor` WHERE action_id='2';
DELETE FROM `action_execution_monitor` WHERE action_id='6';

DELETE FROM `action` WHERE (`id` = '2');
DELETE FROM `action` WHERE (`id` = '6');

DELETE FROM `entity_instance` where entity_template_id=7;
DELETE FROM `entity_id_lookup` where entity_template_id=7;

DELETE FROM `activity_instance` where activity_template_id='tags';
DELETE FROM `activity_template` WHERE (`id` = 'tags');

DELETE FROM `node_group` WHERE (`id` = '6');
DELETE FROM `menu` WHERE (`id` = '5');
DELETE FROM `node` WHERE (`id` = '14');
DELETE FROM `node` WHERE (`id` = '5');

DELETE FROM `fetch_config_template` WHERE (`id` = '1');
DELETE FROM `fetch_config_template` WHERE (`id` = '2');
DELETE FROM `fetch_config_template` WHERE (`id` = '7');
DELETE FROM `fetch_config_template` WHERE (`id` = '22');
DELETE FROM `fetch_config_template` WHERE (`id` = '23');


UPDATE `activity_template` SET `configs` = '{\"pageSize\": 100, \"subHeader\": {\"BULK\": {\"subHeaderTitle\": \"Create or update existing users\", \"subHeaderDescription\": \"To create or update one user, switch the bulk upload toggle to off.\", \"allowedSubHeaderActions\": [\"BULK_UPLOAD\"]}, \"CREATE\": {\"subHeaderTitle\": \"Create or update existing users\", \"subHeaderDescription\": \"To create or update multiple users, switch the bulk upload toggle to on.\", \"allowedSubHeaderActions\": [\"BULK_UPLOAD\"]}, \"UPDATE\": {}}, \"publishType\": \"LIVE_ONLY\", \"allowedActions\": {\"BULK\": [\"PUBLISH_TO_LIVE\", \"BULK_UPLOAD\"], \"CREATE\": [\"PUBLISH_TO_LIVE\", \"SAVE_AND_CLOSE\", \"EDIT\", \"BULK_UPLOAD\"], \"UPDATE\": [\"PUBLISH_TO_LIVE\", \"EDIT\", \"SAVE_AND_CLOSE\"]}, \"isPaginationEnabled\": true, \"preFetchInputValidation\": \"[^A-Za-z0-9-_ . ,:@]\"}' 
WHERE (`id` = 'userLive');
UPDATE `activity_template` SET `configs` = '{\"pageSize\": 100, \"subHeader\": {\"BULK\": {\"subHeaderTitle\": \"Create or update existing users\", \"subHeaderDescription\": \"To create or update one user, switch the bulk upload toggle to off.\", \"allowedSubHeaderActions\": [\"BULK_UPLOAD\"]}, \"CREATE\": {\"subHeaderTitle\": \"Create or update existing users\", \"subHeaderDescription\": \"To create or update multiple users, switch the bulk upload toggle to on.\", \"allowedSubHeaderActions\": [\"BULK_UPLOAD\"]}, \"UPDATE\": {}}, \"publishType\": \"TEST_ONLY\", \"allowedActions\": {\"BULK\": [\"PUBLISH_TO_TEST\", \"BULK_UPLOAD\"], \"CREATE\": [\"PUBLISH_TO_TEST\", \"SAVE_AND_CLOSE\", \"EDIT\", \"BULK_UPLOAD\"], \"UPDATE\": [\"PUBLISH_TO_TEST\", \"EDIT\", \"SAVE_AND_CLOSE\"]}, \"isPaginationEnabled\": true, \"preFetchInputValidation\": \"[^A-Za-z0-9-_ . ,:@]\"}' 
WHERE (`id` = 'userTest');

UPDATE `fetch_config_template` SET `resp_api_to_resp_ui` = '{\"objectTranslator\": \"function translate(values, entity, context) { try { context  = JSON.parse(context); var date = new Date(); var dateString = (\\\"0\\\" + date.getDate()).slice(-2) + (\\\"0\\\" + (date.getMonth() + 1)).slice(-2) + (\\\"\\\" + date.getYear()).slice(-2); var timeString = (\\\"0\\\" + date.getHours()).slice(-2) + \\\"\\\" + (\\\"0\\\" + date.getMinutes()).slice(-2)+ \\\"\\\" +  (\\\"0\\\" + date.getSeconds()).slice(-2); var accountId = \\\"BulkLiveAgents\\\" + \\\"-\\\" + dateString + \\\"-\\\" + timeString; var uiData = { \\\"accountId\\\": accountId }; } catch (e) {} return JSON.stringify(uiData); }\"}'
WHERE (`id` = '69');
UPDATE `fetch_config_template` SET `resp_api_to_resp_ui` = '{\"objectTranslator\": \"function translate(values, entity, context) { try { context  = JSON.parse(context); var date = new Date(); var dateString = (\\\"0\\\" + date.getDate()).slice(-2) + (\\\"0\\\" + (date.getMonth() + 1)).slice(-2) + (\\\"\\\" + date.getYear()).slice(-2); var timeString = (\\\"0\\\" + date.getHours()).slice(-2) + \\\"\\\" + (\\\"0\\\" + date.getMinutes()).slice(-2)+ \\\"\\\" +  (\\\"0\\\" + date.getSeconds()).slice(-2); var accountId = \\\"BulkTestAgents\\\" + \\\"-\\\" + dateString + \\\"-\\\" + timeString; var uiData = { \\\"accountId\\\": accountId }; } catch (e) {} return JSON.stringify(uiData); }\"}'
WHERE (`id` = '68');
UPDATE `fetch_config_template` SET `resp_api_to_resp_ui` = '{\"objectTranslator\": \"function translate(values, entity, context) { try { context  = JSON.parse(context); var date = new Date(); var dateString = (\\\"0\\\" + date.getDate()).slice(-2) + (\\\"0\\\" + (date.getMonth() + 1)).slice(-2) + (\\\"\\\" + date.getYear()).slice(-2); var timeString = (\\\"0\\\" + date.getHours()).slice(-2) + \\\"\\\" + (\\\"0\\\" + date.getMinutes()).slice(-2)+ \\\"\\\" +  (\\\"0\\\" + date.getSeconds()).slice(-2); var accountId = \\\"SmartResponses\\\" + \\\"-\\\" + dateString + \\\"-\\\" + timeString; var uiData = { \\\"accountId\\\": accountId }; } catch (e) {} return JSON.stringify(uiData); }\"}'
WHERE (`id` = '52');