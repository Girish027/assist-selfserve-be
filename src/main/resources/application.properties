spring.datasource.url=jdbc:mysql://localhost:3306/self_serve
spring.datasource.username=root
spring.datasource.password=root

spring.jpa.database-platform=org.hibernate.dialect.MySQL57Dialect
spring.jpa.show-sql=false
spring.jpa.hibernate.ddl-auto=update


spring.jpa.properties.hibernate.cache.use_query_cache=true
spring.jpa.properties.hibernate.cache.use_second_level_cache=true
spring.jpa.properties.hibernate.cache.region.factory_class=org.hibernate.cache.jcache.JCacheRegionFactory
spring.jpa.properties.javax.persistence.sharedCache.mode=ENABLE_SELECTIVE

server.servlet.application-display-name = "Self Service Application"
spring.application.name = self-serve

server.servlet.context-path=/${spring.application.name}

spring.jackson.serialization.write_dates_as_timestamps=false

# spring.cache.type=NONE

# Authentication related properties
sso.disable=false

# User Management Service
ums.baseUrl=http://stable.developer.sv2.247-inc.net
ums.enable=true

role_permission.enable=true

# If the authentication is okta, then need to provide valid values for the below properties
okta.baseUrl=https://login.247ai.com
okta.authorization.service.id=ausio6nhipTHfHFYj0h7
okta.client.id=0oaine4w6blKLPDfX0h7
okta.client.secret=96djByvC_gU8C0HboZkVDggJSwHTn2qosuaRPV90
okta.connection.timeout=1000
okta.connection.mulitply=1000
cookies.secureFlag = false
cookies.httponlyFlag = false
contentserver.baseurl = http://localhost:3005
contentserver.css_content_base_path = /
docLink=https://stable.developer.sv2.247-inc.net/docportal/Content/Assist/Assist.htm
supportLink = https://247inc.atlassian.net/secure/RapidBoard.jspa?rapidView=1178&projectKey=SRE
toolRoot= /self-serve
toolName = ASSIST
toolType = internal
toolTitle= Assist
cssOktaEnabled=true
env = local
serviceBaseUrl = http://localhost:8090/self-serve

parentBaseUrl = https://stable.developer.sv2.247-inc.net/home

# When running locally make false
config.cob.proxy=false
config.proxy.host=proxy-grp1.lb-priv.svc.247-inc.net
config.proxy.port=3128
config.proxy.protocol=http

thread.concurrency = 2
allowed.origins=*

server.port=8090

# workflowInstance timeout period (in minutes)
workflow_instance.timeout=30

# For health check Endpoints
management.endpoints.web.exposure.include=health,info 
management.endpoints.web.exposure.exclude=
management.health.defaults.enabled=false
management.endpoint.health.show-details=always
spring.cache.jcache.config=classpath:ehcache.xml

cache.token.scheduler.fixedrate.millis=600000
cache.token.scheduler.initialdelay.millis=100000



# bulk load config
#for local storge use "local" and for cloud storage use "gcp"
bulk.storage=gcp

## LOCAL STORAGE PROPERTIES
## MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=200MB
# Max Request Size
spring.servlet.multipart.max-request-size=215MB

## File Storage Properties
# All files uploaded through the REST API will be stored in this directory
file.upload-dir=/tmp/uploads/
file.file-types=xlsx,xls,txt
file.file-mimeTypes=text/plain,application/vnd.ms-excel,application/vnd.openxmlformats-officedocument.spreadsheetml.sheet

## GCP config
gcp.project.id=dev-chat-ccc1
gcp.bucket.name=dev-chat
credentials.file.path = /var/tellme/css/conf/.gcp.json

# input validation
validate.keys=name,label,searchKey

rate_limit.total_tokens=10
rate_limit.bucket_capacity=10
# refresh in minutes
rate_limit.refresh_duration=1
rate_limit.initial_tokens=1
